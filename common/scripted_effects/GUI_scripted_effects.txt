########################
# GUI SCRIPTED EFFECTS #
########################

#by Lord R

#############################

### Morgenröte Main Window Toggle Effect ###
#Uses variables to activate the Morgenröte Window and toggle through it.
mr_main_window_toggle_through_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = mr_main_window_is_active_var
			}
		}
		set_variable = {
			name = mr_main_window_is_active_var
			value = 0
		}
	}
	if = {
		limit = {
			has_variable = mr_main_window_last_active_tab_var
			var:mr_main_window_is_active_var = 0
		}
		set_variable = {
			name = mr_main_window_is_active_var
			value = var:mr_main_window_last_active_tab_var
		}
	}
	else = {
		if = {
			limit = {
				var:mr_main_window_is_active_var < 3
			}
			change_variable = {
				name = mr_main_window_is_active_var
				add = 1
			}
		}
		else = {
			set_variable = {
				name = mr_main_window_is_active_var
				value = 0
			}
		}
	}
	remove_variable = mr_main_window_last_active_tab_var

	#Sets up all the rankings
	academics_calculate_progress_effect = yes
	dubois_mountaineering_view_set_up_effect = yes
	vikelas_set_member_states_effect = yes
	vikelas_ioc_board_members_effect = yes
	curtiss_set_schneider_overview_effect = yes
	curtiss_create_schneider_trophy_current_ranking_global_effect = yes
	vikelas_create_car_racing_victories_ranking_global_effect = yes
	vikelas_car_racing_victories_rank_effect = yes
	artists_monthly_artistic_progress_GUI_effect = yes
	artists_set_yearly_tradition_gain_variable = yes
	elgar_create_composer_ranking_effect = yes
	klimt_create_painter_ranking_effect = yes
	artists_set_up_travelling_composer_list_effect = yes
	artists_set_up_local_writer_list_effect = yes
	artists_set_up_independent_painter_list_effect = yes
}

#Calculates the Amount of Academy Progress
academics_calculate_progress_effect = {
	### Actual calculation done in script_value ###
	if = {
		limit = { academics_academic_progress_add_value > 0 }
		set_variable = {
			name = academics_estimated_monthly_academy_progress_var
			value = academics_academic_progress_add_value
		}
	}
	else = {
		set_variable = {
			name = academics_estimated_monthly_academy_progress_var
			value = 0
		}
	}
}

#This effect sets up all the variables for the Mountaineering Overview
dubois_mountaineering_view_set_up_effect = {

	#Removes all GUI variables
	remove_variable = GUI_dubois_mountaineer_var

	#Sets a random Mountaineer as a variable
	if = {
		limit = {
			any_scope_character = {
				has_trait = dubois_mountaineer
			}
		}
		random_scope_character = {
			limit = {
				has_trait = dubois_mountaineer
			}
			save_scope_as = GUI_dubois_mountaineer_scope
		}
		set_variable = {
			name = GUI_dubois_mountaineer_var
			value = scope:GUI_dubois_mountaineer_scope
		}
	}
}

#This effect sets up all the variables for the Olympic Overview
vikelas_set_member_states_effect = {

	#Removes all GUI variables
	remove_variable = GUI_vikelas_athlete_var
	remove_global_variable = vikelas_ioc_president_global_var
	remove_variable = GUI_vikelas_next_host_var

	#Calculates how many Participants there are
	vikelas_calculate_number_participants_effect = yes

	#Sets the IOC President as a variable
	if = {
		limit = {
			any_country = {
				has_variable = vikelas_ioc_founding_country_var
			}
		}
		random_country = {
			limit = {
				has_variable = vikelas_ioc_founding_country_var
			}
			save_scope_as = ioc_president_scope
		}
		set_global_variable = {
			name = vikelas_ioc_president_global_var
			value = scope:ioc_president_scope
		}
	}

	#Sets a random Athlete as a variable
	if = {
		limit = {
			any_scope_character = {
				OR = {
					has_trait = vikelas_athlete
					has_trait = vikelas_winner
				}
			}
		}
		random_scope_character = {
			limit = {
				OR = {
					has_trait = vikelas_athlete
					has_trait = vikelas_winner
				}
			}
			save_scope_as = GUI_vikelas_athlete_scope
		}
		set_variable = {
			name = GUI_vikelas_athlete_var
			value = scope:GUI_vikelas_athlete_scope
		}
	}

	#Sets the next host as a variable
	if = {
		limit = {
			any_country = {
				OR = {
					has_modifier = vikelas_olympics_preparation_modifier
					has_modifier = vikelas_olympics_hosting_modifier
				}
			}
		}
		random_country = {
			limit = {
				OR = {
					has_modifier = vikelas_olympics_preparation_modifier
					has_modifier = vikelas_olympics_hosting_modifier
				}
			}
			save_scope_as = GUI_vikelas_next_host_scope
		}
		set_variable = {
			name = GUI_vikelas_next_host_var
			value = scope:GUI_vikelas_next_host_scope
		}
	}
}

#This effect sets up all the variables for the Schneider Trophy Overview
curtiss_set_schneider_overview_effect = {

	#Sets the last winning country as a variable
	if = {
		limit = {
			any_country = {
				has_variable = curtiss_last_trophy_winner_var
			}
		}
		random_country = {
			limit = {
				has_variable = curtiss_last_trophy_winner_var
			}
			save_scope_as = GUI_curtiss_last_trophy_winner_scope
		}
		set_variable = {
			name = GUI_curtiss_last_trophy_winner_for_gui_var
			value = scope:GUI_curtiss_last_trophy_winner_scope
		}
	}
}

### Schneider Trophy Participants GLOBAL variables ###
#Creates a list of the Schneider Trophy Participants ranked for Points.
#As this effect is called in an effect, it creates the list with GLOBAL variables.
#Look at the customizable localizations to see how the countries are displayed.
#Basically the custom loc uses the variable to display both the countries in their order as well as the variables of those countries
curtiss_create_schneider_trophy_current_ranking_global_effect = {
	#Removes the GLOBAL ranking variables
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_1_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_2_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_3_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_4_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_5_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_6_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_7_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_8_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_9_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_10_global_var

	ordered_country = {
		limit = {
			has_variable = schneider_trophy_point_var
			has_journal_entry = je_curtiss_schneider_trophy_race
		}
		order_by = var:schneider_trophy_point_var
		max = 10 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#This part checks one after another whether the the first, second, etc. ranked countries are saved already.
		#Luckily the ordered_country effect iterates through the countries one after another.
		#So the first country gets saved to the first variable but as that variable now is set,
		# the second country gets saved to the second variable and so on.
		if = {
			limit = {
				NOT = { has_global_variable = curtiss_create_schneider_trophy_current_rank_1_global_var }
			}
			set_global_variable = {
				name = curtiss_create_schneider_trophy_current_rank_1_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = curtiss_create_schneider_trophy_current_rank_2_global_var }
			}
			set_global_variable = {
				name = curtiss_create_schneider_trophy_current_rank_2_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = curtiss_create_schneider_trophy_current_rank_3_global_var }
			}
			set_global_variable = {
				name = curtiss_create_schneider_trophy_current_rank_3_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = curtiss_create_schneider_trophy_current_rank_4_global_var }
			}
			set_global_variable = {
				name = curtiss_create_schneider_trophy_current_rank_4_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = curtiss_create_schneider_trophy_current_rank_5_global_var }
			}
			set_global_variable = {
				name = curtiss_create_schneider_trophy_current_rank_5_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = curtiss_create_schneider_trophy_current_rank_6_global_var }
			}
			set_global_variable = {
				name = curtiss_create_schneider_trophy_current_rank_6_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = curtiss_create_schneider_trophy_current_rank_7_global_var }
			}
			set_global_variable = {
				name = curtiss_create_schneider_trophy_current_rank_7_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = curtiss_create_schneider_trophy_current_rank_8_global_var }
			}
			set_global_variable = {
				name = curtiss_create_schneider_trophy_current_rank_8_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = curtiss_create_schneider_trophy_current_rank_9_global_var }
			}
			set_global_variable = {
				name = curtiss_create_schneider_trophy_current_rank_9_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = curtiss_create_schneider_trophy_current_rank_10_global_var }
			}
			set_global_variable = {
				name = curtiss_create_schneider_trophy_current_rank_10_global_var
				value = this
			}
		}
	}
}

#Removes the GLOBAL ranking variables
curtiss_remove_schneider_trophy_current_ranking_variables = {
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_1_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_2_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_3_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_4_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_5_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_6_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_7_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_8_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_9_global_var
	remove_global_variable = curtiss_create_schneider_trophy_current_rank_10_global_var
}

#########################################################################

### Car Racing Victories GLOBAL variables ###
#Creates a list of the ten countries with the most Grand Prix Victories.
#As this effect is called in an effect, it creates the list with GLOBAL variables.
#Look at the customizable localizations to see how the countries are displayed.
#Basically the custom loc uses the variable to display both the countries in their order as well as the variables of those countries
vikelas_create_car_racing_victories_ranking_global_effect = {
	#Removes the GLOBAL ranking variables
	remove_global_variable = vikelas_create_car_racing_current_rank_1_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_2_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_3_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_4_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_5_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_6_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_7_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_8_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_9_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_10_global_var

	ordered_country = {
		limit = {
			has_variable = vikelas_grand_prix_victories_var
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:vikelas_grand_prix_victories_var
		max = 10 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#This part checks one after another whether the the first, second, etc. ranked countries are saved already.
		#Luckily the ordered_country effect iterates through the countries one after another.
		#So the first country gets saved to the first variable but as that variable now is set,
		# the second country gets saved to the second variable and so on.
		if = {
			limit = {
				NOT = { has_global_variable = vikelas_create_car_racing_current_rank_1_global_var }
			}
			set_global_variable = {
				name = vikelas_create_car_racing_current_rank_1_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = vikelas_create_car_racing_current_rank_2_global_var }
			}
			set_global_variable = {
				name = vikelas_create_car_racing_current_rank_2_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = vikelas_create_car_racing_current_rank_3_global_var }
			}
			set_global_variable = {
				name = vikelas_create_car_racing_current_rank_3_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = vikelas_create_car_racing_current_rank_4_global_var }
			}
			set_global_variable = {
				name = vikelas_create_car_racing_current_rank_4_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = vikelas_create_car_racing_current_rank_5_global_var }
			}
			set_global_variable = {
				name = vikelas_create_car_racing_current_rank_5_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = vikelas_create_car_racing_current_rank_6_global_var }
			}
			set_global_variable = {
				name = vikelas_create_car_racing_current_rank_6_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = vikelas_create_car_racing_current_rank_7_global_var }
			}
			set_global_variable = {
				name = vikelas_create_car_racing_current_rank_7_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = vikelas_create_car_racing_current_rank_8_global_var }
			}
			set_global_variable = {
				name = vikelas_create_car_racing_current_rank_8_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = vikelas_create_car_racing_current_rank_9_global_var }
			}
			set_global_variable = {
				name = vikelas_create_car_racing_current_rank_9_global_var
				value = this
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_variable = vikelas_create_car_racing_current_rank_10_global_var }
			}
			set_global_variable = {
				name = vikelas_create_car_racing_current_rank_10_global_var
				value = this
			}
		}
	}
}

#Removes the GLOBAL ranking variables
vikelas_remove_car_racing_victories_ranking_global_effect = {
	remove_global_variable = vikelas_create_car_racing_current_rank_1_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_2_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_3_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_4_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_5_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_6_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_7_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_8_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_9_global_var
	remove_global_variable = vikelas_create_car_racing_current_rank_10_global_var
}

#This effect creates a a variable to display the rank of each country for Grand Prix Victories
vikelas_car_racing_victories_rank_effect = {
	set_local_variable = { #This is used to keep track of the current rank
		name = current_rank
		value = 0
	}
	ordered_country = {
		limit = {
			has_variable = vikelas_grand_prix_victories_var
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:vikelas_grand_prix_victories_var
		max = 1000 #Apparently without this it just takes one country.
		check_range_bounds = no #prevents errors

		remove_variable = vikelas_car_racing_wins_rank_country_var
		change_local_variable = {
			name = current_rank
			add = 1
		}
		set_variable = { #uses the current rank to set the rank variable for the country.
			name = vikelas_car_racing_wins_rank_country_var
			value = local_var:current_rank
		}
	}
}

################################################

### Composers ###

elgar_set_up_travelling_composers_effect = {
	if = {
		limit = {
			any_character_in_void = {
				has_variable = mr_is_travelling_composer_var
			}
		}
		clear_variable_list = mr_travelling_composer_list
		random_character_in_void = {
			limit = {
				has_variable = mr_is_travelling_composer_var
			}
			root = {
				add_to_variable_list = {
					name = mr_travelling_composer_list
					target = prev
				}
			}
		}
	}
}

#Sets the yearly cultural tradition variable when the window gets opened.
artists_set_yearly_tradition_gain_variable = {
	every_country = {
		set_variable = {
			name = elgar_yearly_musical_tradition_var
			value = elgar_yearly_musical_tradition_value
		}
		set_variable = {
			name = manzoni_yearly_literary_tradition_var
			value = manzoni_yearly_literary_tradition_value
		}
		set_variable = {
			name = klimt_yearly_painting_tradition_var
			value = klimt_yearly_painting_tradition_value
		}
	}
}

### Chemical Score Ranking List ###
#Creates a list of the countries ranked by their chemical score.
#As this effect is called in an effect, it creates a lobal variable list.
mendelejew_create_chemical_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_chemical_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:mendelejew_chemical_score_country_var
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = mendelejew_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_chemical_ranking_global_list
			target = this
		}
	}
}

### Astronomical Objects Ranking List ###
#Creates a list of the countries ranked by their astronomical objexts.
#As this effect is called in an effect, it creates a lobal variable list.
verrier_create_astronomical_objects_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_astronomical_objects_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:verrier_astronomical_objects
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = verrier_astronomical_objects_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_astronomical_objects_ranking_global_list
			target = this
		}
	}
}

### Specimen Ranking List ###
#Creates a list of the countries ranked by their specimens.
#As this effect is called in an effect, it creates a lobal variable list.
dubois_create_specimen_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_specimen_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:dubois_specimen
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = dubois_specimen_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_specimen_ranking_global_list
			target = this
		}
	}
}

### Dinosaur Skeleton Ranking List ###
#Creates a list of the countries ranked by their dinosaur skeletons.
#As this effect is called in an effect, it creates a lobal variable list.
dubois_create_dinosaur_skeleton_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_dinosaur_skeleton_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:dubois_dinosaur_skeleton
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = dubois_dinosaur_skeleton_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_dinosaur_skeleton_ranking_global_list
			target = this
		}
	}
}

### Total Artifacts Ranking List ###
#Creates a list of the countries ranked by their total artifacts.
#As this effect is called in an effect, it creates a lobal variable list.
lepsius_create_total_artifact_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_total_artifact_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:lepsius_total_artifacts
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = lepsius_total_artifacts_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_total_artifact_ranking_global_list
			target = this
		}
	}
}

### Total Human Fossils Ranking List ###
#Creates a list of the countries ranked by their total human fossils.
#As this effect is called in an effect, it creates a lobal variable list.
lepsius_create_total_human_fossils_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_total_human_fossils_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:lepsius_total_human_fossil
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = lepsius_total_human_fossils_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_total_human_fossils_ranking_global_list
			target = this
		}
	}
}

### Musical Tradition Ranking List ###
#Creates a list of the countries ranked by their musical tradition.
#As this effect is called in an effect, it creates a lobal variable list.
elgar_create_musical_tradition_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_musical_tradition_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:elgar_music_tradition
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = elgar_musical_tradition_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_musical_tradition_ranking_global_list
			target = this
		}
	}
}

### Literary Tradition Ranking List ###
#Creates a list of the countries ranked by their literary tradition.
#As this effect is called in an effect, it creates a lobal variable list.
manzoni_create_literary_tradition_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_literary_tradition_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:manzoni_literary_tradition_var
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = manzoni_literary_tradition_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_literary_tradition_ranking_global_list
			target = this
		}
	}
}

### Painting Tradition Ranking List ###
#Creates a list of the countries ranked by their painting tradition.
#As this effect is called in an effect, it creates a lobal variable list.
klimt_create_painting_tradition_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_painting_tradition_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:klimt_painting_tradition_var
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = klimt_painting_tradition_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_painting_tradition_ranking_global_list
			target = this
		}
	}
}

### Mountain Ascents Ranking List ###
#Creates a list of the countries ranked by their succesful Mountain ascents.
#As this effect is called in an effect, it creates a lobal variable list.
dubois_create_succesful_mountain_ascents_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_succesful_mountain_ascents_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:dubois_mountains_conquered_var
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = dubois_succesful_mountain_ascents_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_succesful_mountain_ascents_ranking_global_list
			target = this
		}
	}
}

### Olympic Medals Ranking List ###
#Creates a list of the countries ranked by their olympic gold medals.
#As this effect is called in an effect, it creates a lobal variable list.
vikelas_create_olympic_medals_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_olympic_medals_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:vikelas_gold_medals_var
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = vikelas_olympic_medals_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_olympic_medals_ranking_global_list
			target = this
		}
	}
}

### Schneider Trophy Victories Ranking List ###
#Creates a list of the countries ranked by their schneider trophy victories.
#As this effect is called in an effect, it creates a lobal variable list.
curtiss_create_schneider_trophy_victories_ranking_list_effect = {
	#Removes the global variable list
	clear_global_variable_list = mr_schneider_trophy_victories_ranking_global_list

	set_local_variable = {
		name = mr_current_rank_local_var
		value = 0
	}

	ordered_country = {
		limit = {
			is_revolutionary = no #Hopefully keeps revolutions from appearing in the ranking
			NOR = {
				c:PRC ?= this
				is_country_type = decentralized
			}
		}
		order_by = var:curtiss_schneider_trophy_victories_var
		max = 1000 #Limits the list to the ten top countires
		check_range_bounds = no #prevents errors

		#Keeps Track of the rank so it can be saved as a variable
		change_local_variable = {
			name = mr_current_rank_local_var
			add = 1
		}
		if = {
			limit = {
				this = {
					is_player = yes
				}
			}
			set_variable = {
				name = curtiss_schneider_trophy_victories_player_rank_var
				value = local_var:mr_current_rank_local_var
			}
		}

		#This part adds all the countries to the list
		add_to_global_variable_list = {
			name = mr_schneider_trophy_victories_ranking_global_list
			target = this
		}
	}
}
