##############################
# ACADEMICS SCRPITED EFFECTS #
##############################

############################################################################

#All Academics (and Special Characters) should have a variable assigned to the character:
# mr_is_engineer_var		--> Engineer
# mr_is_astronomer_var		--> Astronomer
# mr_is_naturalist_var		--> Naturalist
# mr_is_paleontologist_var	--> Paleontologist
# mr_is_archaeologist_var	--> Archaeologist
# mr_is_anthropologist_var	--> Anthropologist

# mr_is_balloonist_var		--> Balloonist
# mr_is_missionary_var		--> Missionary
# mr_is_adventurer_var		--> Adventurer

######ENGINEER######

create_engineer_effect = {
	if = { #Gustave Eiffel, France
		limit = {
			c:FRA ?= this
			game_date < 1887.12.15 #Age 55
			year > 1857 #First Contract of Eiffel as an Engineer
			NOT = { has_global_variable = gaudi_eiffel_created }
		}
		create_eiffel_gustave_effect = yes
		set_global_variable = gaudi_eiffel_created
	}
	else = {
		create_character = {
			save_scope_as = gaudi_engineer_scope
		}

		scope:gaudi_engineer_scope = {
			add_trait = engineer
			set_variable = mr_is_engineer_var
			engineer_experience_set_up_effect = yes
			place_character_in_void = 1200	
		}
			
		set_variable = {
			name = gaudi_engineer_var
			value = scope:gaudi_engineer_scope
		}
	}
}

kill_engineer_effect = {
	var:gaudi_engineer_var = {
		free_character_from_void = no
	}

	remove_variable = gaudi_engineer_var
}

# Creates a new Engineer without losing the old one
create_new_engineer_effect = {
	create_character = {
		save_scope_as = gaudi_new_engineer_scope
	}

	scope:gaudi_new_engineer_scope = {
		add_trait = engineer
		set_variable = mr_is_engineer_var
		engineer_experience_set_up_effect = yes
		place_character_in_void = 1200	
	}
}

# Set new Engineer as official Engineer
gaudi_set_new_engineer_as_engineer_effect = {
	custom_tooltip = {
		text = gaudi_replace_engineer_with_new_engineer_tt
	
		if = {
			limit = {
				has_variable = gaudi_engineer_var
			}
			var:gaudi_engineer_var = {
				free_character_from_void = no
			}
		}

		set_variable = {
			name = gaudi_engineer_var
			value = scope:gaudi_new_engineer_scope
		}
	}
}

# Remove new Engineer
gaudi_remove_new_engineer_effect = {
	scope:gaudi_new_engineer_scope = {
		free_character_from_void = no
	}
}

# Used to set up the Experience of a character 
engineer_experience_set_up_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = gaudi_engineer_experience
			}
		}
		set_variable = {
			name = gaudi_engineer_experience
			value = age
		}
		change_variable = {
			name = gaudi_engineer_experience
			subtract = 30
		}
		change_variable = {
			name = gaudi_engineer_experience
			multiply = 10
		}
	}
}

#Engineer Experience gain
engineer_experience_gain_effect = { #adds XP to the Engineer
	# Amount = amount of XP to add
	save_temporary_scope_value_as = { #This is used to display the amount in the tooltip
		name = xp_amount
		value = $AMOUNT$
	}

	if = {
		limit = {
			has_variable = gaudi_engineer_var #should only add experience if there actually is an Engineer
		}
		custom_tooltip = {
			text = gaudi_engineer_experience_gain_tt
			if = {
				limit = {
					NOT = {
						var:gaudi_engineer_var = { #Fallback to make sure there are no errors if the Engineer does not have the variable yet
							has_variable = gaudi_engineer_experience
						}
					}
				}
				var:gaudi_engineer_var = { #Sets the experience in case it was not set yet
					engineer_experience_set_up_effect = yes
				}
			}
			var:gaudi_engineer_var = {
				change_variable = {
					name = gaudi_engineer_experience
					add = $AMOUNT$
				}
			}
		}
	}
}

######ASTRONOMER######

create_astronomer_effect = {
	if = { #Quetelet Belgium
		limit = {
			c:BEL ?= this
			game_date < 1851.2.22 #Age 55
			year > 1828 #Prevents Earlier Start Dates to spawn character before he is ready
			NOT = { has_global_variable = verrier_quetelet_created_global_var }
		}
		create_quetelet_adolphe_effect = yes
	}
	else = {
		create_character = {
			save_scope_as = verrier_astronomer_scope
		}
	}
		
	scope:verrier_astronomer_scope = {
		add_trait = verrier_astronomer
		set_variable = mr_is_astronomer_var
		astronomer_experience_set_up_effect = yes
		place_character_in_void = 1200	
	}
		
	set_variable = {
		name = verrier_astronomer_var
		value = scope:verrier_astronomer_scope
	}
}

kill_astronomer_effect = {
	var:verrier_astronomer_var = {
		free_character_from_void = no
	}

	remove_variable = verrier_astronomer_var
}

# Creates a new Astronomer without losing the old one
create_new_astronomer_effect = {
	create_character = {
		save_scope_as = verrier_new_astronomer_scope
	}

	scope:verrier_new_astronomer_scope = {
		add_trait = verrier_astronomer
		set_variable = mr_is_astronomer_var
		astronomer_experience_set_up_effect = yes
		place_character_in_void = 1200	
	}
}

# Set new Astronomer as official Astronomer
verrier_set_new_astronomer_as_astronomer_effect = {
	custom_tooltip = {
		text = verrier_replace_astronomer_with_new_astronomer_tt
	
		if = {
			limit = {
				has_variable = verrier_astronomer_var
			}
			var:verrier_astronomer_var = {
				free_character_from_void = no
			}
		}

		set_variable = {
			name = verrier_astronomer_var
			value = scope:verrier_new_astronomer_scope
		}
	}
}

# Remove new Astronomer
verrier_remove_new_astronomer_effect = {
	scope:verrier_new_astronomer_scope = {
		free_character_from_void = no
	}
}

# Used to set up the Experience of a character 
astronomer_experience_set_up_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = verrier_astronomer_experience
			}
		}
		set_variable = {
			name = verrier_astronomer_experience
			value = age
		}
		change_variable = {
			name = verrier_astronomer_experience
			subtract = 30
		}
		change_variable = {
			name = verrier_astronomer_experience
			multiply = 10
		}
	}
}

#Astronomer Experience gain
astronomer_experience_gain_effect = { #adds XP to the Astronomer
	# Amount = amount of XP to add
	save_temporary_scope_value_as = { #This is used to display the amount in the tooltip
		name = xp_amount
		value = $AMOUNT$
	}

	if = {
		limit = {
			has_variable = verrier_astronomer_var #should only add experience if there actually is an Astronomer
		}
		custom_tooltip = {
			text = verrier_astronomer_experience_gain_tt
			if = {
				limit = {
					NOT = {
						var:verrier_astronomer_var = { #Fallback to make sure there are no errors if the Astronomer does not have the variable yet
							has_variable = verrier_astronomer_experience
						}
					}
				}
				var:verrier_astronomer_var = { #Sets the experience in case it was not set yet
					astronomer_experience_set_up_effect = yes
				}
			}
			var:verrier_astronomer_var = {
				change_variable = {
					name = verrier_astronomer_experience
					add = $AMOUNT$
				}
			}
		}
	}
}

######NATURALIST######

create_naturalist_effect = {
	if = { #Wallace, Great Britain or Wales
		limit = {
			OR = {
				c:GBR ?= this
				c:WLS ?= this
			}
			game_date < 1878.1.8 #Age 55
			year > 1848 #First Expedition of Wallace to Brazil
			NOT = { has_global_variable = dubois_wallace_created_global_var }
		}
		create_wallace_alfred_russel_effect = yes
	}
	else_if = {
		limit = {
			OR = {
				country_has_primary_culture = cu:north_italian
				country_has_primary_culture = cu:south_italian
			}
			game_date < 1898.11.16 #Age 55
			year > 1865 #First Expedition of Beccari to Borneo
			NOT = { has_global_variable = dubois_beccari_created_global_var }
		}
		create_beccari_odoardo_effect = yes
	}
	else = {
		create_character = {
			save_scope_as = dubois_naturalist_scope
		}
	}
		
	scope:dubois_naturalist_scope = {
		add_trait = dubois_naturalist
		set_variable = mr_is_naturalist_var
		naturalist_experience_set_up_effect = yes
		place_character_in_void = 1200	
	}
		
	set_variable = {
		name = dubois_naturalist_var
		value = scope:dubois_naturalist_scope
	}
}

kill_naturalist_effect = {
	var:dubois_naturalist_var = {
		free_character_from_void = no
	}

	remove_variable = dubois_naturalist_var

	#Additional effects
	dubois_set_paleontologist_to_default = yes
	remove_modifier = dubois_paleontological_research_modifier
}

# Creates a new Naturalist without losing the old one
create_new_naturalist_effect = {
	create_character = {
		save_scope_as = dubois_new_naturalist_scope
	}
		
	scope:dubois_new_naturalist_scope = {
		add_trait = dubois_naturalist
		set_variable = mr_is_naturalist_var
		naturalist_experience_set_up_effect = yes
		place_character_in_void = 1200	
	}
}

# Set new Naturalist as official Naturalist
dubois_set_new_naturalist_as_naturalist_effect = {
	custom_tooltip = {
		text = dubois_replace_naturalist_with_new_naturalist_tt
	
		if = {
			limit = {
				has_variable = dubois_naturalist_var
			}
			var:dubois_naturalist_var = {
				free_character_from_void = no
			}
		}

		set_variable = {
			name = dubois_naturalist_var
			value = scope:dubois_new_naturalist_scope
		}
	}
}

# Remove new Naturalist
dubois_remove_new_naturalist_effect = {
	scope:dubois_new_naturalist_scope = {
		free_character_from_void = no
	}
}

# Used to set up the Experience of a character 
naturalist_experience_set_up_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = dubois_naturalist_experience
			}
		}
		set_variable = {
			name = dubois_naturalist_experience
			value = age
		}
		change_variable = {
			name = dubois_naturalist_experience
			subtract = 30
		}
		change_variable = {
			name = dubois_naturalist_experience
			multiply = 10
		}
	}
}

#Naturalist Experience gain
naturalist_experience_gain_effect = { #adds XP to the Naturalist
	# Amount = amount of XP to add
	save_temporary_scope_value_as = { #This is used to display the amount in the tooltip
		name = xp_amount
		value = $AMOUNT$
	}

	if = {
		limit = {
			has_variable = dubois_naturalist_var #should only add experience if there actually is an Naturalist
		}
		custom_tooltip = {
			text = dubois_naturalist_experience_gain_tt
			if = {
				limit = {
					NOT = {
						var:dubois_naturalist_var = { #Fallback to make sure there are no errors if the Naturalist does not have the variable yet
							has_variable = dubois_naturalist_experience
						}
					}
				}
				var:dubois_naturalist_var = { #Sets the experience in case it was not set yet
					naturalist_experience_set_up_effect = yes
				}
			}
			var:dubois_naturalist_var = {
				change_variable = {
					name = dubois_naturalist_experience
					add = $AMOUNT$
				}
			}
		}
	}
}

######PALEONTOLOGIST######

create_paleontologist_effect = {
	create_character = {
		save_scope_as = dubois_paleontologist_scope
	}
		
	scope:dubois_paleontologist_scope = {
		add_trait = dubois_paleontologist
		set_variable = mr_is_paleontologist_var
		paleontologist_experience_set_up_effect = yes
		place_character_in_void = 1200
	}
		
	set_variable = {
		name = dubois_paleontologist_var
		value = scope:dubois_paleontologist_scope
	}
}

kill_paleontologist_effect = {
	var:dubois_paleontologist_var = {
		free_character_from_void = no
	}

	remove_variable = dubois_paleontologist_var
}

# Creates a new Paleontologist without losing the old one
create_new_paleontologist_effect = {
	create_character = {
		save_scope_as = dubois_new_paleontologist_scope
	}
		
	scope:dubois_new_paleontologist_scope = {
		add_trait = dubois_paleontologist
		set_variable = mr_is_paleontologist_var
		paleontologist_experience_set_up_effect = yes
		place_character_in_void = 1200	
	}
}

# Set new Paleontologist as official Paleontologist
dubois_set_new_paleontologist_as_paleontologist_effect = {
	custom_tooltip = {
		text = dubois_replace_paleontologist_with_new_paleontologist_tt
	
		if = {
			limit = {
				has_variable = dubois_paleontologist_var
			}
			var:dubois_paleontologist_var = {
				free_character_from_void = no
			}
		}

		set_variable = {
			name = dubois_paleontologist_var
			value = scope:dubois_new_paleontologist_scope
		}
	}
}

# Remove new Paleontologist
dubois_remove_new_paleontologist_effect = {
	scope:dubois_new_paleontologist_scope = {
		free_character_from_void = no
	}
}

# Used to set up the Experience of a character 
paleontologist_experience_set_up_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = dubois_paleontologist_experience
			}
		}
		set_variable = {
			name = dubois_paleontologist_experience
			value = age
		}
		change_variable = {
			name = dubois_paleontologist_experience
			subtract = 30
		}
		change_variable = {
			name = dubois_paleontologist_experience
			multiply = 10
		}
	}
}

#Paleontologist Experience gain
paleontologist_experience_gain_effect = { #adds XP to the Paleontologist
	# Amount = amount of XP to add
	save_temporary_scope_value_as = { #This is used to display the amount in the tooltip
		name = xp_amount
		value = $AMOUNT$
	}

	if = {
		limit = {
			has_variable = dubois_paleontologist_var #should only add experience if there actually is an Paleontologist
		}
		custom_tooltip = {
			text = dubois_paleontologist_experience_gain_tt
			if = {
				limit = {
					NOT = {
						var:dubois_paleontologist_var = { #Fallback to make sure there are no errors if the Paleontologist does not have the variable yet
							has_variable = dubois_paleontologist_experience
						}
					}
				}
				var:dubois_paleontologist_var = { #Sets the experience in case it was not set yet
					paleontologist_experience_set_up_effect = yes
				}
			}
			var:dubois_paleontologist_var = {
				change_variable = {
					name = dubois_paleontologist_experience
					add = $AMOUNT$
				}
			}
		}
	}
}

######ARCHAEOLOGIST######

create_archaeologist_effect = {
	create_character = {
		save_scope_as = lepsius_archaeologist_scope
	}
		
	scope:lepsius_archaeologist_scope = {
		add_trait = lepsius_archaeologist
		set_variable = mr_is_archaeologist_var
		archaeologist_experience_set_up_effect = yes
		place_character_in_void = 1200	
	}
		
	set_variable = {
		name = lepsius_archaeologist_var
		value = scope:lepsius_archaeologist_scope
	}
}

kill_archaeologist_effect = {
	var:lepsius_archaeologist_var = {
		free_character_from_void = no
	}

	remove_variable = lepsius_archaeologist_var
}

# Creates a new Archaeologist without losing the old one
create_new_archaeologist_effect = {
	create_character = {
		save_scope_as = lepsius_new_archaeologist_scope
	}
		
	scope:lepsius_new_archaeologist_scope = {
		add_trait = lepsius_archaeologist
		set_variable = mr_is_archaeologist_var
		archaeologist_experience_set_up_effect = yes
		place_character_in_void = 1200	
	}
}

# Set new Archaeologist as official Archaeologist
lepsius_set_new_archaeologist_as_archaeologist_effect = {
	custom_tooltip = {
		text = lepsius_replace_archaeologist_with_new_archaeologist_tt
	
		if = {
			limit = {
				has_variable = lepsius_archaeologist_var
			}
			var:lepsius_archaeologist_var = {
				free_character_from_void = no
			}
		}

		set_variable = {
			name = lepsius_archaeologist_var
			value = scope:lepsius_new_archaeologist_scope
		}
	}
}

# Remove new Archaeologist
lepsius_remove_new_archaeologist_effect = {
	scope:lepsius_new_archaeologist_scope = {
		free_character_from_void = no
	}
}

# Used to set up the Experience of a character 
archaeologist_experience_set_up_effect = { #This effect needs to be placed in the scope of the new character!
	if = {
		limit = {
			NOT = {
				has_variable = lepsius_archaeologist_experience
			}
		}
		set_variable = {
			name = lepsius_archaeologist_experience
			value = age
		}
		change_variable = {
			name = lepsius_archaeologist_experience
			subtract = 30
		}
		change_variable = {
			name = lepsius_archaeologist_experience
			multiply = 10
		}
		if = { #Adds the Experienced Archaeologist Trait if Experience is above 100
			limit = {
				var:lepsius_archaeologist_experience >= 100
				NOT = {
					var:lepsius_archaeologist_experience >= 300
				}
				NOR = {
					has_trait = lepsius_archaeologist_experienced
					has_trait = lepsius_archaeologist_famous
				}
			}
			remove_trait = lepsius_archaeologist
			add_trait = lepsius_archaeologist_experienced
		}
		if = { #Adds the Famous Archaeologist Trait if Experience is above 100
			limit = {
				var:lepsius_archaeologist_experience >= 300
				NOT = {
					has_trait = lepsius_archaeologist_famous
				}
			}
			remove_trait = lepsius_archaeologist
			remove_trait = lepsius_archaeologist_experienced
			add_trait = lepsius_archaeologist_famous
		}
	}
}

#Archaeologist Experience gain
archaeologist_experience_gain_effect = { #adds XP to the Archaeologist
	# Amount = amount of XP to add
	save_temporary_scope_value_as = { #This is used to display the amount in the tooltip
		name = xp_amount
		value = $AMOUNT$
	}

	if = {
		limit = {
			has_variable = lepsius_archaeologist_var #should only add experience if there actually is an archaeologist
		}
		custom_tooltip = {
			text = lepsius_archaeologist_experience_gain_tt
			if = {
				limit = {
					NOT = {
						var:lepsius_archaeologist_var = { #Fallback to make sure there are no errors if the archaeologist does not have the variable yet
							has_variable = lepsius_archaeologist_experience
						}
					}
				}
				var:lepsius_archaeologist_var = { #Sets the experience in case it was not set yet
					archaeologist_experience_set_up_effect = yes
				}
			}
			var:lepsius_archaeologist_var = {
				change_variable = {
					name = lepsius_archaeologist_experience
					add = $AMOUNT$
				}
			}
		}
		var:lepsius_archaeologist_var = {
			if = {
				limit = {
					var:lepsius_archaeologist_experience >= 100
					NOT = {
						var:lepsius_archaeologist_experience >= 300
					}
					NOR = {
						has_trait = lepsius_archaeologist_experienced
						has_trait = lepsius_archaeologist_famous
					}
				}
				remove_trait = lepsius_archaeologist
				add_trait = lepsius_archaeologist_experienced
			}
			if = {
				limit = {
					var:lepsius_archaeologist_experience >= 300
					NOT = {
						has_trait = lepsius_archaeologist_famous
					}
				}
				if = {
					limit = { has_trait = lepsius_archaeologist }
					remove_trait = lepsius_archaeologist
				}
				remove_trait = lepsius_archaeologist_experienced
				add_trait = lepsius_archaeologist_famous
			}
		}
	}
}

######ANTHROPOLOGIST######

create_anthropologist_effect = {
	create_character = {
		save_scope_as = lepsius_anthropologist_scope
	}
		
	scope:lepsius_anthropologist_scope = {
		add_trait = lepsius_anthropologist
		set_variable = mr_is_anthropologist_var
		anthropologist_experience_set_up_effect = yes
		place_character_in_void = 1200	
	}
		
	set_variable = {
		name = lepsius_anthropologist_var
		value = scope:lepsius_anthropologist_scope
	}
}

kill_anthropologist_effect = {
	var:lepsius_anthropologist_var = {
		free_character_from_void = no
	}

	remove_variable = lepsius_anthropologist_var
}

# Creates a new Anthropologist without losing the old one
create_new_anthropologist_effect = {
	create_character = {
		save_scope_as = lepsius_new_anthropologist_scope
	}
		
	scope:lepsius_new_anthropologist_scope = {
		add_trait = lepsius_anthropologist
		set_variable = mr_is_anthropologist_var
		anthropologist_experience_set_up_effect = yes
		place_character_in_void = 1200	
	}
}

# Set new Anthropologist as official Anthropologist
lepsius_set_new_anthropologist_as_anthropologist_effect = {
	custom_tooltip = {
		text = lepsius_replace_anthropologist_with_new_anthropologist_tt
	
		if = {
			limit = {
				has_variable = lepsius_anthropologist_var
			}
			var:lepsius_anthropologist_var = {
				free_character_from_void = no
			}
		}

		set_variable = {
			name = lepsius_anthropologist_var
			value = scope:lepsius_new_anthropologist_scope
		}
	}
}

# Remove new Anthropologist
lepsius_remove_new_anthropologist_effect = {
	scope:lepsius_new_anthropologist_scope = {
		free_character_from_void = no
	}
}

# Used to set up the Experience of a character 
anthropologist_experience_set_up_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = lepsius_anthropologist_experience
			}
		}
		set_variable = {
			name = lepsius_anthropologist_experience
			value = age
		}
		change_variable = {
			name = lepsius_anthropologist_experience
			subtract = 30
		}
		change_variable = {
			name = lepsius_anthropologist_experience
			multiply = 10
		}
	}
}

#Anthropologist Experience gain
anthropologist_experience_gain_effect = { #adds XP to the Anthropologist
	# Amount = amount of XP to add
	save_temporary_scope_value_as = { #This is used to display the amount in the tooltip
		name = xp_amount
		value = $AMOUNT$
	}

	if = {
		limit = {
			has_variable = lepsius_anthropologist_var #should only add experience if there actually is an Anthropologist
		}
		custom_tooltip = {
			text = lepsius_anthropologist_experience_gain_tt
			if = {
				limit = {
					NOT = {
						var:lepsius_anthropologist_var = { #Fallback to make sure there are no errors if the Anthropologist does not have the variable yet
							has_variable = lepsius_anthropologist_experience
						}
					}
				}
				var:lepsius_anthropologist_var = { #Sets the experience in case it was not set yet
					anthropologist_experience_set_up_effect = yes
				}
			}
			var:lepsius_anthropologist_var = {
				change_variable = {
					name = lepsius_anthropologist_experience
					add = $AMOUNT$
				}
			}
		}
	}
}

##########################################################################

######ACADEMIC FOCUS######

academics_remove_focus = {
	if = {
		limit = {
			has_modifier = academics_avantgarde_intelligentsia_modifier
		}
		remove_modifier = academics_avantgarde_intelligentsia_modifier
	}
	if = {
		limit = {
			has_modifier = academics_practical_academia_modifier
		}
		remove_modifier = academics_practical_academia_modifier
	}
	if = {
		limit = {
			has_modifier = academics_military_industrial_complex_modifier
		}
		remove_modifier = academics_military_industrial_complex_modifier
	}
	if = {
		limit = {
			has_modifier = academics_business_schools_tycoon_industrialism_modifier
		}
		remove_modifier = academics_business_schools_tycoon_industrialism_modifier
	}
	if = {
		limit = {
			has_modifier = academics_sea_power_merchant_marine_modifier
		}
		remove_modifier = academics_sea_power_merchant_marine_modifier
	}
	if = {
		limit = {
			has_modifier = academics_useful_ivory_tower_modifier
		}
		remove_modifier = academics_useful_ivory_tower_modifier
	}
}

academics_add_historical_tech_schools = {
	every_country = { #Avantgarde Intelligentsia
		limit = {
			OR = {
				this = c:FRA
				this = c:RUS
			}
		}
		add_modifier = {
			name = academics_avantgarde_intelligentsia_modifier
		}
	}
	every_country = { #Practical Academia
		limit = {
			OR = {
				this = c:SWE
			}
		}
		add_modifier = {
			name = academics_practical_academia_modifier
		}
	}
	every_country = { #Military-Industrial Compley
		limit = {
			OR = {
				this = c:PRU
				this = c:SAR
			}
		}
		add_modifier = {
			name = academics_military_industrial_complex_modifier
		}
	}
	every_country = { #Business Schools & Tycoon Capitalism
		limit = {
			OR = {
				this = c:USA
				this = c:SWI
				this = c:BEL
			}
		}
		add_modifier = {
			name = academics_business_schools_tycoon_industrialism_modifier
		}
	}
	every_country = { #Sea Power & Merchant Marine
		limit = {
			OR = {
				this = c:GBR 
				this = c:NET
			}
		}
		add_modifier = {
			name = academics_sea_power_merchant_marine_modifier
		}
	}
	every_country = { #Useful Ivory Tower
		limit = {
			OR = {
				this = c:AUS
				this = c:BAV
				this = c:SAX
				this = c:DEN
			}
		}
		add_modifier = {
			name = academics_useful_ivory_tower_modifier
		}
	}
}