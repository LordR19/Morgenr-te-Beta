############################
# ARTISTS SCRPITED EFFECTS #
############################

############################################################################

#All Academics (and Special Characters) should have a variable assigned to the character:
# mr_is_composer_var	-->	Composer
# mr_is_writer_var		-->	Writer
# mr_is_painter_var		-->	Painter

######Artistic Progress######

#This effect is used to add the monthly Artistic Progress
artists_monthly_artistic_progress_effect = {
	if = { #Effect only gets executed if there is either an Arts Academy or an Opera
		limit = {
			any_scope_building = {
				OR = {
					is_building_type = building_arts_academy
					is_building_type = building_elgar_opera
				}
				level >= 1
			}
		}

		#Set up
		if = {
			limit = { NOT = { has_variable = artists_artistic_progress_var } }
			set_variable = {
				name = artists_artistic_progress_var
				value = 0
			}
		}

		### Actual calculation done in script_value ###
		if = {
			limit = { monthly_artistic_progress_gain_value > 0 }
			set_variable = {
				name = artists_estimated_monthly_artistic_progress_var
				value = monthly_artistic_progress_gain_value
			}
		}
		else = {
			set_variable = {
				name = artists_estimated_monthly_artistic_progress_var
				value = 0
			}
		}
		
		#Add monthly variable to the total variable
		if = {
			limit = { var:artists_estimated_monthly_artistic_progress_var > 0 }
			change_variable = {
				name = artists_artistic_progress_var
				add = var:artists_estimated_monthly_artistic_progress_var
			}
		}

		if = {
			limit = { var:artists_artistic_progress_var >= 1000 }
			change_variable = {
				name = artists_artistic_progress_var
				subtract = 1000
			}
			if = {
				limit = { has_variable = artists_promote_composer_active_var }
				trigger_event = {
					id = artists.51
					popup = yes
				}
			}
			else_if = {
				limit = { has_variable = artists_promote_writer_active_var }
				trigger_event = {
					id = artists.52
					popup = yes
				}
			}
			else_if = {
				limit = { has_variable = artists_promote_painter_active_var }
				trigger_event = {
					id = artists.53
					popup = yes
				}
			}
			else = {
				random_list = { #TODO activate right characters
					1 = {
						trigger_event = {
							id = artists.51
							popup = yes
						}
					}
				#	1 = {
				#		trigger_event = {
				#			id = artists.52
				#			popup = yes
				#		}
				#	}
				#	1 = {
				#		trigger_event = {
				#			id = artists.53
				#			popup = yes
				#		}
				#	}
				}
			}
		}
	}
	else = {
		set_variable = {
			name = artists_estimated_monthly_artistic_progress_var
			value = 0
		}
	}
}

#Version for GUI
artists_monthly_artistic_progress_GUI_effect = {
	#Set up
	if = {
		limit = { monthly_artistic_progress_gain_value > 0 }
		set_variable = {
			name = artists_estimated_monthly_artistic_progress_var
			value = monthly_artistic_progress_gain_value
		}
	}
	else = {
		set_variable = {
			name = artists_estimated_monthly_artistic_progress_var
			value = 0
		}
	}
}

#This effect is used to set up the list of travelling composers
artists_set_up_travelling_composer_list_effect = {
	clear_global_variable_list = mr_travelling_composer_global_list
		ordered_character_in_void = {
			max = 1000
			order_by = var:elgar_composer_experience
			check_range_bounds = no

			limit = {
				has_variable = mr_is_travelling_composer_var
			}
			add_to_global_variable_list = {
				name = mr_travelling_composer_global_list
				target = this
			}
		}
}

#This effect is used to remove the travelling composers as there shouldn't be too many.
artists_remove_travelling_composer_from_void_effect = {
	if = {
		#This part is used to limit the effect to only one country
		limit = {
			NOT = { has_global_variable = artists_travelling_composer_remove_global_var }
		}
		set_global_variable = {
			name = artists_travelling_composer_remove_global_var
			days = 15
		}

		#This is used to keep track of the current number
		set_local_variable = {
			name = current_number
			value = 0
		}
		
		#This part gets the travelling composers ordered by experience.
		# The Composers that are not historical and are over the limit will be deleted.
		ordered_character_in_void = {
			limit = { has_variable = mr_is_travelling_composer_var }
			order_by = var:elgar_composer_experience
			max = 1000
			check_range_bounds = no

			change_local_variable = {
				name = current_number
				add = 1
			}

			if = {
				limit = {
					local_var:current_number > 20
					is_historical = no
				}
				free_character_from_void = no
			}
		}
	}
}

######COMPOSER######

#This effect kills the current composer
kill_composer_effect = {
	var:elgar_composer_var = {
		free_character_from_void = no
	}

	remove_variable = elgar_composer_var
}

#This effect makes the current composer a travelling Composer
set_composer_travelling_composer_effect = {
	var:elgar_composer_var = {
		add_trait = elgar_travelling_composer
		remove_variable = mr_is_composer_var
		set_variable = mr_is_travelling_composer_var
	}

	remove_variable = elgar_composer_var
	artists_set_up_travelling_composer_list_effect = yes
}

# Creates a new Composer without losing the old one
#This one was a little harder as the scope was only valid in the random_list
#Therefore a Variable is set to save the scope again. then gets deleted
create_new_composer_effect = {
	random_list = {
		4 = { #Hans Christian Lumbye, Denmark
			trigger = {
				NOT = { has_global_variable = elgar_lumbye_created_global_var }
				has_state_in_state_region = STATE_ZEALAND
				NOT = {
					cu:danish = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1865.5.2 #Age 55
				year >= 1829 #Moved to Copenhagen
			}
			create_character = {
				template = mr_den_lumbye_hans_christian_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_lumbye_created_global_var
		}
		2 = { #Louise Farrenc, France
			trigger = {
				NOT = { has_global_variable = elgar_farrenc_created_global_var }
				has_state_in_state_region = STATE_ILE_DE_FRANCE
				NOT = {
					cu:french = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1859.5.31 #Age 55
				year >= 1834 #First Compositions
			}
			create_character = {
				template = mr_fra_farrenc_louise_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_farrenc_created_global_var
		}
		2 = { #Clara Schumann, France
			trigger = {
				NOT = { has_global_variable = elgar_schumann_clara_created_global_var }
				has_state_in_state_region = STATE_SAXONY
				NOT = {
					cu:north_german = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1874.9.13 #Age 55
				year >= 1836 #Age 16
			}
			create_character = {
				template = mr_ger_schumann_clara_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_schumann_clara_created_global_var
		}
		4 = { #Giacomo Puccini, Italy
			trigger = {
				NOT = { has_global_variable = elgar_puccini_created_global_var }
				has_technology_researched = elgar_impressionism_tech
				c:ITA ?= this
				game_date < 1913.12.22 #Age 55
				year >= 1884 #First Opera
			}
			create_character = {
				template = mr_ita_puccini_giacomo_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_puccini_created_global_var
		}
		2 = { #Elfrida Andrée, Sweden
			trigger = {
				NOT = { has_global_variable = elgar_andree_created_global_var }
				OR = {
					has_state_in_state_region = STATE_GOTLAND
					has_state_in_state_region = STATE_SVEALAND
				}
				NOT = {
					cu:swedish = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1896.2.19 #Age 55
				year >= 1861 #Started working in Stockholm
			}
			create_character = {
				template = mr_swe_andree_elfrida_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_andree_created_global_var
		}
		4 = { #Franz Berwald, Sweden
			trigger = {
				NOT = { has_global_variable = elgar_berwald_created_global_var }
				has_state_in_state_region = STATE_SVEALAND
				NOT = {
					cu:swedish = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1851.7.23 #Age 55
				year >= 1821 #First Violin Concerto
			}
			create_character = {
				template = mr_swe_berwald_franz_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_berwald_created_global_var
		}
		4 = { #Ludvig Norman, Sweden
			trigger = {
				NOT = { has_global_variable = elgar_norman_created_global_var }
				has_state_in_state_region = STATE_SVEALAND
				NOT = {
					cu:swedish = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1886.8.28 #Age 55
				year >= 1857 #Teaching at the Swedish Music Academy
			}
			create_character = {
				template = mr_swe_norman_ludvig_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_norman_created_global_var
		}
		4 = { #Per August Ölander, Sweden
			trigger = {
				NOT = { has_global_variable = elgar_olander_created_global_var }
				has_state_in_state_region = STATE_SVEALAND
				NOT = {
					cu:swedish = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1879.1.8 #Age 55
				year >= 1850 #one of his first compositions
			}
			create_character = {
				template = mr_swe_olander_per_august_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_olander_created_global_var
		}
		4 = { #Otto Barblan, Switzerland
			trigger = {
				NOT = { has_global_variable = elgar_barblan_created_global_var }
				has_state_in_state_region = STATE_EAST_SWITZERLAND
				NOT = {
					cu:rumantsch = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1915.3.22 #Age 55
				year >= 1885 #Really started composing work
			}
			create_character = {
				template = mr_swi_barblan_otto_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_barblan_created_global_var
		}
		4 = { #Franz Xaver Schnyder von Wartensee, Switzerland
			trigger = {
				NOT = { has_global_variable = elgar_schnyder_von_wartensee_created_global_var }
				OR = {
					has_state_in_state_region = STATE_EAST_SWITZERLAND
					has_state_in_state_region = STATE_WEST_SWITZERLAND
					has_state_in_state_region = STATE_HESSE
				}
				NOT = {
					cu:alemannic = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1841.4.18 #Age 55
				year >= 1815 #Focus on music
			}
			create_character = {
				template = mr_swi_schnyder_von_wartensee_franz_xaver_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_schnyder_von_wartensee_created_global_var
		}
		4 = { #George Frederick Bristow, USA
			trigger = {
				NOT = { has_global_variable = elgar_bristow_created_global_var }
				has_state_in_state_region = STATE_NEW_YORK
				NOT = {
					cu:yankee = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1880.12.19 #Age 55
				year >= 1850 #Concert Master of the New York Philharmonic Society Orchestra
			}
			create_character = {
				template = mr_usa_bristow_george_frederick_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_bristow_created_global_var
		}
		4 = { #William Henry Fry, USA
			trigger = {
				NOT = { has_global_variable = elgar_fry_created_global_var }
				has_state_in_state_region = STATE_PENNSYLVANIA
				NOT = {
					cu:yankee = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1868.8.10 #Age 55
				year >= 1836 #Secretary of the Philharmonic Society
			}
			create_character = {
				template = mr_usa_fry_william_henry_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_fry_created_global_var
		}
		4 = { #Louis Moreau Gottschalk, USA
			trigger = {
				NOT = { has_global_variable = elgar_gottchalk_created_global_var }
				has_state_in_state_region = STATE_LOUISIANA
				NOT = {
					cu:dixie = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1884.5.8 #Age 55
				year >= 1853 #Return to the USA
			}
			create_character = {
				template = mr_usa_gottschalk_louis_moreau_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_gottchalk_created_global_var
		}
		4 = { #Mason Lowell, USA
			trigger = {
				NOT = { has_global_variable = elgar_lowell_created_global_var }
				has_state_in_state_region = STATE_MASSACHUSETTS
				NOT = {
					cu:yankee = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1847.1.8 #Age 55
				year >= 1822 #First Hymn rpublished
			}
			create_character = {
				template = mr_usa_mason_lowell_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_lowell_created_global_var
		}
		4 = { #Richard Storrs Willis, USA
			trigger = {
				NOT = { has_global_variable = elgar_willis_created_global_var }
				has_state_in_state_region = STATE_MASSACHUSETTS
				NOT = {
					cu:yankee = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1874.2.10 #Age 55
				year >= 1850 #composed "Church Chorals and Choir Studies"
			}
			create_character = {
				template = mr_usa_willis_richard_storrs_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_willis_created_global_var
		}
		3 = { #Teresa Carreño, Venezuela
			trigger = {
				NOT = { has_global_variable = elgar_carreno_created_global_var }
				has_state_in_state_region = STATE_MIRANDA
				NOT = {
					cu:venezuelan = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1908.12.22 #Age 55
				year >= 1872 #Started Concert Tours around that time
			}
			create_character = {
				template = mr_vnz_carreno_teresa_character_template
				save_scope_as = elgar_new_composer_scope
			}
			scope:elgar_new_composer_scope = {
				set_variable = mr_is_composer_var
				composer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = elgar_new_composer_var
				value = scope:elgar_new_composer_scope
			}

			set_global_variable = elgar_carreno_created_global_var
		}
		1 = { #Random Composer
			random_list = {
				1 = {
					create_character = {
						female = yes
						age = { 18 30 }
						trait_generation = {}
						save_scope_as = elgar_new_composer_scope
					}
					scope:elgar_new_composer_scope = {
						add_trait = elgar_composer
						set_variable = mr_is_composer_var
						composer_experience_set_up_effect = yes
						mr_trait_generation_composer_effect = yes
						place_character_in_void = 1200
					}
		
					set_variable = {
						name = elgar_new_composer_var
						value = scope:elgar_new_composer_scope
					}

					modifier = {
						if = {
							limit = { has_law = law_type:law_women_own_property }
							add = 3
						}
						if = {
							limit = { has_law = law_type:law_women_in_the_workplace }
							add = 7
						}
						if = {
							limit = { has_law = law_type:law_womens_suffrage }
							add = 14
						}
					}
				}
				99 = {
					create_character = {
						age = { 18 30 }
						trait_generation = {}
						save_scope_as = elgar_new_composer_scope
					}
					scope:elgar_new_composer_scope = {
						add_trait = elgar_composer
						set_variable = mr_is_composer_var
						composer_experience_set_up_effect = yes
						mr_trait_generation_composer_effect = yes
						place_character_in_void = 1200
					}
		
					set_variable = {
						name = elgar_new_composer_var
						value = scope:elgar_new_composer_scope
					}

					modifier = {
						if = {
							limit = { has_law = law_type:law_women_own_property }
							add = -3
						}
						if = {
							limit = { has_law = law_type:law_women_in_the_workplace }
							add = -7
						}
						if = {
							limit = { has_law = law_type:law_womens_suffrage }
							add = -14
						}
					}
				}
			}
		}
	}

	var:elgar_new_composer_var = {
		save_scope_as = elgar_new_composer_scope
	}
}

# Set new Composer as official Composer
elgar_set_new_composer_as_composer_effect = {
	custom_tooltip = {
		text = elgar_replace_composer_with_new_composer_tt
	
		if = {
			limit = {
				has_variable = elgar_composer_var
			}
			var:elgar_composer_var = {
				free_character_from_void = no
			}
		}

		set_variable = {
			name = elgar_composer_var
			value = scope:elgar_new_composer_scope
		}

		remove_variable = elgar_new_composer_var
	}
}

# Remove new Composer
elgar_remove_new_composer_effect = {
	scope:elgar_new_composer_scope = {
		free_character_from_void = no
	}

	remove_variable = elgar_new_composer_var
}

#This effect makes the new composer a travelling Composer
set_new_composer_travelling_composer_effect = {
	scope:elgar_new_composer_scope = {
		add_trait = elgar_travelling_composer
		remove_variable = mr_is_composer_var
		set_variable = mr_is_travelling_composer_var
		set_variable = { #Is used to prevent a country from getting that composer immediately afterwards
			name = elgar_composer_unavailable_for_this_var
			value = root
			years = 5
		}
	}

	remove_variable = elgar_new_composer_var
	artists_set_up_travelling_composer_list_effect = yes
}

# Used to set up the Experience of a character 
composer_experience_set_up_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = elgar_composer_experience
			}
		}
		set_variable = {
			name = elgar_composer_experience
			value = artists_composer_experience_set_up_value
		}
		if = { #Adds the Famous Composer Trait if Experience is above 500
			limit = {
				var:elgar_composer_experience >= 500
				NOT = {
					has_trait = elgar_great_composer
				}
			}
			remove_trait = elgar_composer
			add_trait = elgar_great_composer
		}
	}
}

#Composer Experience gain
composer_experience_gain_effect = { #adds XP to the Composer
	# Amount = amount of XP to add
	save_temporary_scope_value_as = { #This is used to display the amount in the tooltip
		name = xp_amount
		value = $AMOUNT$
	}

	if = {
		limit = {
			has_variable = elgar_composer_var #should only add experience if there actually is a Composer
		}
		custom_tooltip = {
			text = elgar_composer_experience_gain_tt
			if = {
				limit = {
					NOT = {
						var:elgar_composer_var = { #Fallback to make sure there are no errors if the Composer does not have the variable yet
							has_variable = elgar_composer_experience
						}
					}
				}
				var:elgar_composer_var = { #Sets the experience in case it was not set yet
					composer_experience_set_up_effect = yes
				}
			}
			var:elgar_composer_var = {
				change_variable = {
					name = elgar_composer_experience
					add = $AMOUNT$
				}
			}
		}
		var:elgar_composer_var = {
			if = {
				limit = {
					var:elgar_composer_experience >= 500
					NOT = {
						has_trait = elgar_great_composer
					}
				}
				root = {
					trigger_event = {
						id = artists.101
						popup = yes
					}
				}
			}
		}
	}
}

#Void Composer Experience gain
void_composer_experience_gain_effect = { #adds XP to the Composer
	# Amount = amount of XP to add
	save_temporary_scope_value_as = { #This is used to display the amount in the tooltip
		name = xp_amount
		value = $AMOUNT$
	}
	save_scope_as = elgar_travelling_composer_scope

	custom_tooltip = {
		text = elgar_void_composer_experience_gain_tt
		if = {
			limit = {
				NOT = { has_variable = elgar_composer_experience }
			}
			composer_experience_set_up_effect = yes
		}
		change_variable = {
			name = elgar_composer_experience
			add = $AMOUNT$
		}
	}
	if = {
		limit = {
			var:elgar_composer_experience >= 500
			NOT = {
				has_trait = elgar_great_composer
			}
		}
		remove_trait = elgar_composer
		add_trait = elgar_great_composer
	}
}

#Effect used to set the cost of the composer
#Use it in the character scope with root being a country.
elgar_composer_character_set_up_cost_effect = {
	if = {
		limit = { var:elgar_composer_experience >= 500 }
		root = {
			add_treasury = -25000 #TODO change cost
			#TODO add modifier with cost
		}
	}
	else_if = {
		limit = { var:elgar_composer_experience >= 450 }
		root = {
			add_treasury = -20000 #TODO change cost
			#TODO add modifier with cost
		}
	}
	else_if = {
		limit = { var:elgar_composer_experience >= 350 }
		root = {
			add_treasury = -15000 #TODO change cost
			#TODO add modifier with cost	
		}
	}
	else_if = {
		limit = { var:elgar_composer_experience >= 250 }
		root = {
			add_treasury = -10000 #TODO change cost
			#TODO add modifier with cost
		}
	}
	else_if = {
		limit = { var:elgar_composer_experience >= 150 }
		root = {
			add_treasury = -5000 #TODO change cost
			#TODO add modifier with cost
		}
	}
	else = {
		root = {
			add_treasury = -2500 #TODO change cost
			#TODO add modifier with cost
		}
	}
}

#Effect used to set the cost of the travelling composer
#Use it in the character scope with root being a country.
elgar_travelling_composer_character_set_up_cost_effect = {
	if = {
		limit = { var:elgar_composer_experience >= 500 }
		root = {
			add_treasury = -50000 #TODO change cost
			#TODO add modifier with cost
		}
	}
	else_if = {
		limit = { var:elgar_composer_experience >= 450 }
		root = {
			add_treasury = -40000 #TODO change cost
			#TODO add modifier with cost
		}
	}
	else_if = {
		limit = { var:elgar_composer_experience >= 350 }
		root = {
			add_treasury = -30000 #TODO change cost
			#TODO add modifier with cost	
		}
	}
	else_if = {
		limit = { var:elgar_composer_experience >= 250 }
		root = {
			add_treasury = -20000 #TODO change cost
			#TODO add modifier with cost
		}
	}
	else_if = {
		limit = { var:elgar_composer_experience >= 150 }
		root = {
			add_treasury = -10000 #TODO change cost
			#TODO add modifier with cost
		}
	}
	else = {
		root = {
			add_treasury = -5000 #TODO change cost
			#TODO add modifier with cost
		}
	}
}

#Effect used by the AI to hire a Travelling Composer
#!!! If you change this Effect, make sure to change it for the "mr_invite_composer_button" Button too !!!
elgar_ai_hire_composer_effect = {
	if = {
		limit = {
			NOT = {
				has_modifier = elgar_recently_hired_travelling_composer_modifier
				has_variable = elgar_composer_var
			}
			has_technology_researched = elgar_classicism_tech
			elgar_has_opera_size_x_trigger = { LEVEL = 1 }
		}

		#This if construct chooses the experience level of possible Composers
		if = { #All Composers possible
			limit = {
				elgar_tier_5_composer_trigger = yes
			}
			elgar_hire_travelling_composer_effect = { EXPERIENCE = 10000 }
		}
		else_if = { #Up to 500 Reputation
			limit = {
				elgar_tier_4_composer_trigger = yes
			}

			elgar_hire_travelling_composer_effect = { EXPERIENCE = 500 }			
		}
		else_if = { #Up to 450 Reputation
			limit = {
				elgar_tier_3_composer_trigger = yes
			}

			elgar_hire_travelling_composer_effect = { EXPERIENCE = 450 }		
		}
		else_if = { #Up to 350 Reputation
			limit = {
				elgar_tier_2_composer_trigger = yes
			}

			elgar_hire_travelling_composer_effect = { EXPERIENCE = 350 }		
		}
		else_if = { #Up to 250 Reputation
			limit = {
				elgar_tier_1_composer_trigger = yes
			}

			elgar_hire_travelling_composer_effect = { EXPERIENCE = 250 }		
		}
		else = { #Up to 150 Reputation
			elgar_hire_travelling_composer_effect = { EXPERIENCE = 150 }
		}
	}

	artists_set_up_travelling_composer_list_effect = yes
}

#This Effect is used to either directly choose a Travelling Composer or replace an existing one.
elgar_hire_travelling_composer_effect = {
	# EXPERIENCE = maximum experience of the composer
	if = {
		limit = { has_variable = elgar_composer_var }
		if = {
			limit = {
				any_character_in_void = {
					has_variable = mr_is_travelling_composer_var
					var:elgar_composer_experience < $EXPERIENCE$
					var:elgar_composer_experience >= elgar_compser_experience_plus_50_value
					NOT = {
						has_variable = elgar_composer_unavailable_for_this_var
						var:elgar_composer_unavailable_for_this_var = root
					}
				}
			}
			ordered_character_in_void = {
				order_by = var:elgar_composer_experience
				check_range_bounds = no

				limit = {
					has_variable = mr_is_travelling_composer_var
					var:elgar_composer_experience < $EXPERIENCE$
					elgar_national_composer_trigger = yes
					NOT = {
						has_variable = elgar_composer_unavailable_for_this_var
						var:elgar_composer_unavailable_for_this_var = root
					}
				}

				save_scope_as = chosen_composer

				root = {
					set_composer_travelling_composer_effect = yes
					set_variable = {
						name = elgar_composer_var
						value = scope:chosen_composer
					}
				}

				free_character_from_void = yes
				transfer_character = root
				remove_variable = mr_is_travelling_composer_var
				remove_trait = elgar_travelling_composer
				set_variable = mr_is_composer_var
				place_character_in_void = 1200
	
				root = {
					add_modifier = {
						name = elgar_recently_hired_travelling_composer_modifier
						years = 3
					}
				}
				
				elgar_travelling_composer_character_set_up_cost_effect = yes
			}
		}
	}
	else = {
		if = {
			limit = {
				any_character_in_void = {
					has_variable = mr_is_travelling_composer_var
					var:elgar_composer_experience < $EXPERIENCE$
					NOT = {
						has_variable = elgar_composer_unavailable_for_this_var
						var:elgar_composer_unavailable_for_this_var = root
					}
				}
			}
			ordered_character_in_void = {
				order_by = var:elgar_composer_experience
				check_range_bounds = no
	
				limit = {
					has_variable = mr_is_travelling_composer_var
					var:elgar_composer_experience < $EXPERIENCE$
					elgar_national_composer_trigger = yes
					NOT = {
						has_variable = elgar_composer_unavailable_for_this_var
						var:elgar_composer_unavailable_for_this_var = root
					}
				}
				
				save_scope_as = chosen_composer
	
				root = {
					set_variable = {
						name = elgar_composer_var
						value = scope:chosen_composer
					}
				}
				
				free_character_from_void = yes
				transfer_character = root
				remove_variable = mr_is_travelling_composer_var
				remove_trait = elgar_travelling_composer
				set_variable = mr_is_composer_var
				place_character_in_void = 1200
	
				root = {
					add_modifier = {
						name = elgar_recently_hired_travelling_composer_modifier
						years = 3
					}
				}
				scope:chosen_composer = {
					elgar_travelling_composer_character_set_up_cost_effect = yes
				}
			}
		}
	}
}

######Writer######

#This effect kills the current writer
kill_writer_effect = {
	var:manzoni_writer_var = {
		free_character_from_void = no
	}

	remove_variable = manzoni_writer_var
}

# Creates a new Writer without losing the old one
#This one was a little harder as the scope was only valid in the random_list
#Therefore a Variable is set to save the scope again. then gets deleted
create_new_writer_effect = {
	random_list = {
		1 = { #Random Writer
			create_character = {
				save_scope_as = manzoni_new_writer_scope
			}

			scope:manzoni_new_writer_scope = {
				add_trait = literary
				set_variable = mr_is_writer_var
				writer_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = manzoni_new_writer_var
				value = scope:manzoni_new_writer_scope
			}
		}
	}

	var:manzoni_new_writer_var = {
		save_scope_as = manzoni_new_writer_scope
	}
}

# Set new Writer as official Writer
manzoni_set_new_writer_as_writer_effect = {
	custom_tooltip = {
		text = manzoni_replace_writer_with_new_writer_tt
	
		if = {
			limit = {
				has_variable = manzoni_writer_var
			}
			var:manzoni_writer_var = {
				free_character_from_void = no
			}
		}

		set_variable = {
			name = manzoni_writer_var
			value = scope:manzoni_new_writer_scope
		}

		remove_variable = manzoni_new_writer_var
	}
}

# Remove new Writer
manzoni_remove_new_writer_effect = {
	scope:manzoni_new_writer_scope = {
		free_character_from_void = no
	}

	remove_variable = manzoni_new_writer_var
}

# Used to set up the Experience of a character 
writer_experience_set_up_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = manzoni_writer_experience
			}
		}
		if = {
			limit = {
				age > 30
			}
			set_variable = {
				name = manzoni_writer_experience
				value = age
			}
			change_variable = {
				name = manzoni_writer_experience
				subtract = 30
			}
			change_variable = {
				name = manzoni_writer_experience
				multiply = 10
			}
		}
		else = {
			set_variable = {
				name = manzoni_writer_experience
				value = 0
			}
		}
		if = { #Adds the Great Writer Trait if Experience is above 500
			limit = {
				var:manzoni_writer_experience >= 500
				NOT = {
					has_trait = manzoni_great_writer
				}
			}
			remove_trait = literary
			add_trait = manzoni_great_writer
		}
	}
}

#Writer Experience gain
writer_experience_gain_effect = { #adds XP to the Writer
	# Amount = amount of XP to add
	save_temporary_scope_value_as = { #This is used to display the amount in the tooltip
		name = xp_amount
		value = $AMOUNT$
	}

	if = {
		limit = {
			has_variable = manzoni_writer_var #should only add experience if there actually is a Writer
		}
		custom_tooltip = {
			text = manzoni_writer_experience_gain_tt
			if = {
				limit = {
					NOT = {
						var:manzoni_writer_var = { #Fallback to make sure there are no errors if the Writer does not have the variable yet
							has_variable = manzoni_writer_experience
						}
					}
				}
				var:manzoni_writer_var = { #Sets the experience in case it was not set yet
					writer_experience_set_up_effect = yes
				}
			}
			var:manzoni_writer_var = {
				change_variable = {
					name = manzoni_writer_experience
					add = $AMOUNT$
				}
			}
		}
		var:manzoni_writer_var = {
			if = {
				limit = {
					var:manzoni_writer_experience >= 500
					NOT = {
						has_trait = manzoni_great_writer
					}
				}
				root = {
					trigger_event = {
						id = artists.102
						popup = yes
					}
				}
			}
		}
	}
}

######Painter######

#This effect kills the current painter
kill_painter_effect = {
	var:klimt_painter_var = {
		free_character_from_void = no
	}

	remove_variable = klimt_painter_var
}

# Creates a new Painter without losing the old one
#This one was a little harder as the scope was only valid in the random_list
#Therefore a Variable is set to save the scope again. then gets deleted
create_new_painter_effect = {
	random_list = {
		4 = { #Adolf Hitler, Austria
			trigger = {
				NOT = { has_global_variable = klimt_hitler_created_global_var }
				has_global_variable = mr_hitler_painter
				has_state_in_state_region = STATE_AUSTRIA
				NOT = {
					cu:south_german = {
						culture_is_discriminated_in = root
					}
				}
				game_date < 1944.4.20 #Age 55
				year >= 1910 #three years after he failed the entrance exam of the Vienna Arts Academy
			}
			create_character = {
				template = mr_ger_hitler_painter_character_template

				save_scope_as = klimt_new_painter_scope
			}
			scope:klimt_new_painter_scope = {
				set_variable = klimt_hitler_character_var
				set_variable = mr_is_painter_var
				painter_experience_set_up_effect = yes
				place_character_in_void = 1200	
			}

			set_variable = {
				name = klimt_new_painter_var
				value = scope:klimt_new_painter_scope
			}

			set_global_variable = klimt_hitler_created_global_var
		}
		1 = { #Random Painter
			create_character = {
				save_scope_as = klimt_new_painter_scope
			}

			scope:klimt_new_painter_scope = {
				add_trait = klimt_painter
				set_variable = mr_is_painter_var
				painter_experience_set_up_effect = yes
				place_character_in_void = 1200
			}

			set_variable = {
				name = klimt_new_painter_var
				value = scope:klimt_new_painter_scope
			}
		}
	}

	var:klimt_new_painter_var = {
		save_scope_as = klimt_new_painter_scope
	}
}

# Set new Painter as official Painter
klimt_set_new_painter_as_painter_effect = {
	custom_tooltip = {
		text = klimt_replace_painter_with_new_painter_tt
	
		if = {
			limit = {
				has_variable = klimt_painter_var
			}
			var:klimt_painter_var = {
				free_character_from_void = no
			}
		}

		set_variable = {
			name = klimt_painter_var
			value = scope:klimt_new_painter_scope
		}

		remove_variable = klimt_new_painter_var
	}
}

# Remove new Painter
klimt_remove_new_painter_effect = {
	scope:klimt_new_painter_scope = {
		free_character_from_void = no
	}

	remove_variable = klimt_new_painter_var
}

# Used to set up the Experience of a character 
painter_experience_set_up_effect = {
	if = {
		limit = {
			NOT = {
				has_variable = klimt_painter_experience
			}
		}
		if = {
			limit = {
				age > 30
			}
			set_variable = {
				name = klimt_painter_experience
				value = age
			}
			change_variable = {
				name = klimt_painter_experience
				subtract = 30
			}
			change_variable = {
				name = klimt_painter_experience
				multiply = 10
			}
		}
		else = {
			set_variable = {
				name = klimt_painter_experience
				value = 0
			}
		}
		if = { #Adds the Great Painter Trait if Experience is above 500
			limit = {
				var:klimt_painter_experience >= 500
				NOT = {
					has_trait = klimt_great_painter
				}
			}
			remove_trait = klimt_painter
			add_trait = klimt_great_painter
		}
	}
}

#Painter Experience gain
painter_experience_gain_effect = { #adds XP to the Painter
	# Amount = amount of XP to add
	save_temporary_scope_value_as = { #This is used to display the amount in the tooltip
		name = xp_amount
		value = $AMOUNT$
	}

	if = {
		limit = {
			has_variable = klimt_painter_var #should only add experience if there actually is a Painter
		}
		custom_tooltip = {
			text = klimt_painter_experience_gain_tt
			if = {
				limit = {
					NOT = {
						var:klimt_painter_var = { #Fallback to make sure there are no errors if the Painter does not have the variable yet
							has_variable = klimt_painter_experience
						}
					}
				}
				var:klimt_painter_var = { #Sets the experience in case it was not set yet
					painter_experience_set_up_effect = yes
				}
			}
			var:klimt_painter_var = {
				change_variable = {
					name = klimt_painter_experience
					add = $AMOUNT$
				}
			}
		}
		var:klimt_painter_var = {
			if = {
				limit = {
					var:klimt_painter_experience >= 500
					NOT = {
						has_trait = klimt_great_painter
					}
				}
				root = {
					trigger_event = {
						id = artists.103
						popup = yes
					}
				}
			}
		}
	}
}
