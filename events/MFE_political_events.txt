namespace = MFE_political_events

# Based on https://github.com/Historical-Expansion-Mod/Greater-Flavor-Mod/blob/master/GFM/events/PoliticalEvents.txt

# Newspaper Publishes Slander
MFE_political_events.1 = {
	type = country_event
	placement = root
	title = MFE_political_events.1.t
	desc = MFE_political_events.1.d
	flavor = MFE_political_events.1.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/unspecific_signed_contract.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"

	cooldown = { months = long_cooldown }

	immediate = {
		ig:ig_intelligentsia = {
			save_scope_as = ig_intelligentsia
		}
	}

	trigger = {
		OR = {
			has_law = law_type:law_right_of_assembly
			has_law = law_type:law_protected_speech
		}
		has_technology_researched = mass_communication
	}

	option = {
		name = MFE_political_events.1.a
		default_option = yes
		# Suppress it, gain radicals and make integelsentia mad
		if = {
			limit = {
				exists = ig:ig_intelligentsia
				ig:ig_intelligentsia = { is_marginal = no }
			}
			ig:ig_intelligentsia = {
				add_modifier = {
					name = suppressed_newspaper_mod
					days = long_modifier_time
				}
			}
		}
		else = {
			add_radicals = {
				value = small_radicals
			}
		}
	}
	option = {
		name = MFE_political_events.1.b
		# Gain radicals but also gain some innovation modifier
		add_radicals = {
			value = small_radicals
		}
		add_modifier = {
			name = free_flowing_publications_mod
			days = long_modifier_time
		}
	}
}

# Harassment in Local Election
MFE_political_events.2 = {
	type = country_event
	placement = root
	title = MFE_political_events.2.t
	desc = MFE_political_events.2.d
	flavor = MFE_political_events.2.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"

	cooldown = { months = long_cooldown }
	trigger = {
		in_election_campaign = yes
		any_interest_group = {
			has_party = yes
		}
		any_active_party = {
			OR = {
				is_party_type = communist_party
				is_party_type = conservative_party
			}
		}
		any_active_party = {
			OR = {
				is_party_type = liberal_party
				is_party_type = social_democrat_party
			}
		}
	}
	cancellation_trigger = {
		in_election_campaign = no
	}
	immediate = {
		random_active_party = {
			limit = {
				OR = {
					is_party_type = communist_party
					is_party_type = conservative_party
				}
			}
			save_scope_as = harassing_party
		}
		random_active_party = {
			limit = {
				OR = {
					is_party_type = liberal_party
					is_party_type = social_democrat_party
				}
			}
			save_scope_as = harassed_party
		}
	}

	option = { # Defend harassed_party
		name = MFE_political_events.2.a
		default_option = yes
		scope:harassed_party = {
			add_momentum = momentum_small
		}
		scope:harassing_party = {
			add_momentum = momentum_small_decrease
		}
	}
	option = { # Nothing can be done for harassed_party
		name = MFE_political_events.2.b
		scope:harassed_party = {
			add_momentum = momentum_small_decrease
		}
		scope:harassing_party = {
			add_momentum = momentum_small
		}
		add_radicals = {
			value = medium_radicals
		}
	}
}

# Voting Fraud
MFE_political_events.3 = {
	type = country_event
	placement = root
	title = MFE_political_events.3.t
	desc = MFE_political_events.3.d
	flavor = MFE_political_events.3.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"

	cooldown = { months = long_cooldown }
	trigger = {
		in_election_campaign = yes
		OR = {
			has_law = law_type:law_census_voting
			has_law = law_type:law_universal_suffrage
		}
		any_active_party = {
			OR = {
				is_party_type = communist_party
				is_party_type = conservative_party
				is_party_type = liberal_party
				is_party_type = social_democrat_party
			}
		}
	}
	cancellation_trigger = {
		in_election_campaign = no
	}
	immediate = {
		random_active_party = {
			save_scope_as = party_1
		}
		random_active_party = {
			limit = {
				exists = scope:party_1
				NOT = { this = scope:party_1 }
			}
			save_scope_as = party_2
		}
	}

	option = { # party_1 clearly made up those votes...
		name = MFE_political_events.3.a
		default_option = yes
		scope:party_1 = {
			add_momentum = momentum_small_decrease
		}
		scope:party_2 = {
			add_momentum = momentum_small
		}
	}
	option = { # party_2 can not be trusted in these matters...
		name = MFE_political_events.3.b
		scope:party_2 = {
			add_momentum = momentum_small_decrease
		}
		scope:party_1 = {
			add_momentum = momentum_small
		}
	}
}

#### Trade Unions ####

# Worker's Committee

MFE_political_events.4 = {
	type = country_event
	placement = scope:workers_state
	title = MFE_political_events.4.t
	desc = MFE_political_events.4.d
	flavor = MFE_political_events.4.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		exists = ig:ig_trade_unions
		ig:ig_trade_unions = {
			is_insurrectionary = no
			is_revolutionary = no
			is_marginal = no
		}
		OR = {
			has_law = law_type:law_regulatory_bodies
			has_law = law_type:law_worker_protections
		}
	}

	immediate = {
		random_scope_state = {
			save_scope_as = workers_state
		}
		ig:ig_trade_unions = {
			save_scope_as = ig_tradeunions
		}
	}

	option = {  # We'll give into their demands
		name = MFE_political_events.4.a
		default_option = yes
		ig:ig_trade_unions = {
			add_modifier = {
				name = workers_committee_mod
				days = long_modifier_time
			}
		}
		add_modifier = {
			name = workers_committee_demands_mod
			days = long_modifier_time
		}
	}
	option = {  # This is unacceptable these meetings cannot continue
		name = MFE_political_events.4.b
		ig:ig_trade_unions = {
			add_modifier = {
				name = workers_committee_disallowed_mod
				days = long_modifier_time
			}
		}
		scope:workers_state = {
			add_radicals_in_state = {
				value = medium_radicals
			}
		}
	}
}

# Local Management Conflict


MFE_political_events.5 = {
	type = country_event
	placement = scope:conflict_state
	title = MFE_political_events.5.t
	desc = MFE_political_events.5.d
	flavor = MFE_political_events.5.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_capitalists_meeting.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_default.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		exists = ig:ig_trade_unions
		ig:ig_trade_unions = {
			is_insurrectionary = no
			is_revolutionary = no
			is_marginal = no
		}
		OR = {
			has_law = law_type:law_regulatory_bodies
			has_law = law_type:law_worker_protections
		}
		any_scope_state = {
			any_scope_building = {
				OR = {
					is_building_type = building_urban_center
					is_building_type = building_trade_center
				}
				cash_reserves_ratio > 0.5
				weekly_profit > 0
				occupancy >= 0.75
				level >= 5
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				any_scope_building = {
					OR = {
						is_building_type = building_urban_center
						is_building_type = building_trade_center
					}
					cash_reserves_ratio > 0.5
					weekly_profit > 0
					occupancy >= 0.75
					level >= 5
				}
			}
			save_scope_as = conflict_state
		}
	}

	option = {  # Nothing can be done about this...
		name = MFE_political_events.5.a
		default_option = yes
		scope:conflict_state = {
			add_radicals_in_state = {
				value = large_radicals
			}
		}
	}
	option = {  # We need to step in immediately
		name = MFE_political_events.5.b
		add_modifier = {
			name = local_management_conflict_mod
			days = short_modifier_time
		}
	}
}

#Public Meeting Held!

MFE_political_events.6 = {
	type = country_event
	placement = scope:random_state
	title = MFE_political_events.6.t
	desc = MFE_political_events.6.d
	flavor = MFE_political_events.6.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_capitalists_meeting.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_map.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		exists = ig:ig_trade_unions
		ig:ig_trade_unions = {
			is_insurrectionary = no
			is_revolutionary = no
			is_marginal = no
		}
		OR = {
			has_law = law_type:law_regulatory_bodies
			has_law = law_type:law_worker_protections
		}
	}

	immediate = {
		random_scope_state = {
			limit = { is_incorporated = yes }
			save_scope_as = random_state
		}
		ig:ig_trade_unions = {
			save_scope_as = ig_trade_unions
		}
	}

	option = {  # This is great!
		name = MFE_political_events.6.a
		default_option = yes
		ig:ig_trade_unions = {
			add_modifier = {
				name = public_meeting_ig_mod
				days = long_modifier_time
			}
		}
		add_modifier = {
			name = public_meeting_mod
			days = long_modifier_time
		}
	}
	option = {  # Do what we can to prevent this activity
		name = MFE_political_events.6.b
		ig:ig_trade_unions = {
			add_modifier = {
				name = public_meeting_disaster_mod
				days = long_modifier_time
			}
		}
		scope:random_state = {
			add_radicals_in_state = {
				value = large_radicals
			}
		}
	}
}

#Attack on The Workhouse

MFE_political_events.7 = {
	type = country_event
	placement = scope:attacked_state
	title = MFE_political_events.7.t
	desc = MFE_political_events.7.d
	flavor = MFE_political_events.7.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/vandalized_storefront"
	cooldown = { months = long_cooldown }
	trigger = {
		any_scope_state = {
			average_sol < 8
			MFE_has_building = {
				S = "2"
				T = "is_building_group = bg_manufacturing level >= 3"
				K = "2"
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				average_sol < 8
				MFE_has_building = {
					S = "2"
					T = "is_building_group = bg_manufacturing level >= 3"
					K = "2"
				}
			}
			random_scope_building = {
				limit = {
					MFE_has_building = {
						S = "3"
						T = "is_building_group = bg_manufacturing level >= 3"
						K = "2"
					}
				}
				save_scope_as = attacked_warehouse
				add_modifier = {
					name = attacked_warehouse_mod
					days = short_modifier_time
				}
			}
			save_scope_as = attacked_state
		}
	}

	option = {
		name = MFE_political_events.7.a
		default_option = yes
		add_radicals = {
			strata = poor
			value = small_radicals
		}
	}
	option = {
		name = MFE_political_events.7.b
		add_treasury = subtract_2_percent_of_credit
		add_loyalists = {
			value = small_radicals
			pop_type = laborers
		}
	}
}

#Workhouse Strike

MFE_political_events.8 = {
	type = country_event
	placement = scope:striking_warehouse_state
	title = MFE_political_events.8.t
	desc = MFE_political_events.8.d
	flavor = MFE_political_events.8.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/europenorthamerica/political_extremism"
	cooldown = { months = long_cooldown }
	trigger = {
		any_scope_state = {
			average_sol < 8
			MFE_has_building = {
				S = "2"
				T = "is_building_group = bg_manufacturing level >= 5"
				K = "2"
			}
		}
		OR = {
			has_law = law_type:law_regulatory_bodies
			has_law = law_type:law_worker_protections
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				average_sol < 8
				MFE_has_building = {
					S = "2"
					T = "is_building_group = bg_manufacturing level >= 5"
					K = "2"
				}
			}
			random_scope_building = {
				limit = {
					MFE_has_building = {
						S = "3"
						T = "is_building_group = bg_manufacturing level >= 5"
						K = "2"
					}
				}
				add_modifier = {
					name = attacked_warehouse_mod
					days = short_modifier_time
				}
			}
			save_scope_as = striking_warehouse_state
			add_radicals_in_state = {
				value = medium_radicals
			}
		}
	}

	option = {  # Send in the Police!
		name = MFE_political_events.8.a
		default_option = yes
		add_radicals = {
			strata = poor
			value = large_radicals
		}
	}
	option = {  # This is no big deal...
		name = MFE_political_events.8.b
		add_treasury = subtract_2_percent_of_credit
		add_loyalists = {
			value = 0.1
			pop_type = laborers
		}
	}
}


#### Voting System ####

# Professor Criticizes Voting Systems

MFE_political_events.9 = {
	type = country_event
	placement = scope:university_state
	title = MFE_political_events.9.t
	desc = MFE_political_events.9.d
	flavor = MFE_political_events.9.f

	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:professor

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/1Character_Banner"
	cooldown = { months = long_cooldown }
	trigger = {
		any_scope_state = {
			any_scope_building = {
				is_building_type = building_university
				level >= 5
			}
		}
		OR = {
			has_law = law_type:law_landed_voting
			has_law = law_type:law_wealth_voting
			has_law = law_type:law_census_voting
		}
		exists = ig:ig_intelligentsia
		ig:ig_intelligentsia = { is_marginal = no }
	}

	immediate = {
		random_scope_state = {
			limit = {
				any_scope_building = {
					is_building_type = building_university
					level >= 5
				}
			}
			random_scope_building = {
				limit = {
					is_building_type = building_university
					level >= 5
				}
				save_scope_as = bad_university
			}
			save_scope_as = university_state
		}
		create_character = {
			interest_group = ig_intelligentsia
			ideology = ideology_reformer
			save_scope_as = professor
		}
		ig:ig_intelligentsia = {
			save_scope_as = ig_intelligentsia
		}
	}

	option = {  # These are valid points
		name = MFE_political_events.9.a
		default_option = yes
		ig:ig_intelligentsia = {
			add_modifier = {
				name = professor_supported_mod
				days = long_modifier_time
			}
		}
	}
	option = {  # Suppress these ideas
		name = MFE_political_events.9.b
		ig:ig_intelligentsia = {
			add_modifier = {
				name = professor_suppressed_mod
				months = long_modifier_time
			}
		}
		scope:university_state = {
			add_radicals_in_state = {
				pop_type = academics
				value = very_large_radicals
			}
		}
	}
}

#### Policies ####

# Trade Policy - has free trade law

MFE_political_events.10 = {
	type = country_event
	placement = root
	title = MFE_political_events.10.t
	desc = MFE_political_events.10.d
	flavor = MFE_political_events.10.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/southamerica_factory_opening.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_trade.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = very_long_cooldown }
	trigger = {
		has_law = law_type:law_free_trade
		exists = ig:ig_industrialists
	}

	immediate = {
		add_treasury = 5_percent_of_credit
		ig:ig_industrialists = {
			save_scope_as = ig_industrialists
		}
	}

	option = {  # This is thanks to the Industrialists
		name = MFE_political_events.10.a
		default_option = yes
		ig:ig_industrialists = {
			add_modifier = {
				name = industrialists_trade_policy_approval_mod
				months = long_modifier_time
			}
		}
	}
	option = {  # The current ruler is to thank for this!
		name = MFE_political_events.10.b
		ig:ig_industrialists = {
			add_modifier = {
				name = industrialists_trade_policy_disapproval_mod
				months = long_modifier_time
			}
		}
		ruler = {
			add_trait = expert_political_operator
		}
	}
}

# Bread Riots - has protectionism trade law

MFE_political_events.11 = {
	type = country_event
	placement = scope:bread_riot_state
	title = MFE_political_events.11.t
	desc = MFE_political_events.11.d
	flavor = MFE_political_events.11.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_rich_and_poor.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		market_capital.market = {
			mg:grain = { market_goods_pricier > 0.25 }
		}
		has_law = law_type:law_protectionism
		any_scope_state = {
			average_sol < 8
			is_incorporated = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				average_sol < 8
				is_incorporated = yes
			}
			save_scope_as = bread_riot_state
			add_modifier = {
				name = bread_riot_sol_mod
				months = long_modifier_time
			}
		}
	}

	option = {  # Try to alleviate their hunger
		name = MFE_political_events.11.a
		default_option = yes
		add_modifier = {
			name = bread_riot_concessions_given_mod
			months = long_modifier_time
		}
		scope:bread_riot_state = {
			build_wheat_building = yes
		}
	}
	option = {  # If they want food they can buy it!
		name = MFE_political_events.11.b
		scope:bread_riot_state = {
			add_radicals_in_state = {
				strata = poor
				value = large_radicals
			}
		}
	}
}

# Bread Queues - has law_command_economy

MFE_political_events.12 = {
	type = country_event
	placement = scope:bread_queue_state
	title = MFE_political_events.12.t
	desc = MFE_political_events.12.d
	flavor = MFE_political_events.12.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/asia_dead_cattle_poor_harvest.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		market_capital.market = {
			mg:grain = { market_goods_pricier > 0.25 }
		}
		has_law = law_type:law_command_economy
		any_scope_state = {
			average_sol < 8
			is_incorporated = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				average_sol < 8
				is_incorporated = yes
			}
			save_scope_as = bread_queue_state
		}
	}

	option = {
		name = MFE_political_events.12.a
		default_option = yes
		ordered_scope_state = {
			limit = {
				any_scope_building = {
					is_grain_producing_building = yes
				}
			}
			order_by = state_population
			build_wheat_building = yes
		}
		add_treasury = subtract_2_percent_of_credit
	}
	option = {
		name = MFE_political_events.12.b
		scope:bread_queue_state = {
			add_radicals_in_state = {
				strata = poor
				value = large_radicals
			}
		}
	}
}

#Guns Cross The Border - has free trade law, will radacalize a bunch of pops because they have guns

MFE_political_events.13 = {
	type = country_event
	placement = scope:neighbor_neighbor_state
	title = MFE_political_events.13.t
	desc = MFE_political_events.13.d
	flavor = MFE_political_events.13.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_political_extremism.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_military.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"

	trigger = {
		has_law = law_type:law_free_trade
		any_neighbouring_state = {
			owner = {
				trigger_if = {
					limit = { exists = market_capital.market }
					market_capital.market = {
						mg:small_arms = {
							market_goods_delta >= 10
						}
					}
				}
				trigger_else = { always = no }
				NOT = { is_country_type = decentralized }
			}
		}
		NOT = { has_variable = guns_across_border }
	}

	immediate = {
		random_neighbouring_state = {
			limit = {
				owner = {
					market_capital.market = {
						mg:small_arms = {
							market_goods_delta >= 10
						}
					}
					NOT = { is_country_type = decentralized }
				}
			}
			save_scope_as = neighbor_state
			owner = {
				save_scope_as = neighbor_country
			}

			random_neighbouring_state = {
				limit = {
					owner = ROOT
				}
				save_scope_as = neighbor_neighbor_state
			}
		}
		set_variable = guns_across_border # Only happens once
	}

	option = {  # Little can be done in a free market...
		name = MFE_political_events.13.a
		default_option = yes
		scope:neighbor_neighbor_state = {
			add_radicals_in_state = {
				value = large_radicals
			}
		}
	}
	option = {  # Demand they Stop this Immediately
		name = MFE_political_events.13.b
		change_relations = { country = scope:neighbor_country value = -30 }
	}
}
# Local Business Fails - has interventionalism law

MFE_political_events.14 = {
	type = country_event
	placement = scope:failing_state
	title = MFE_political_events.14.t
	desc = MFE_political_events.14.d
	flavor = MFE_political_events.14.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/asia_factory_accident.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_default.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"

	trigger = {
		has_law = law_type:law_interventionism
		MFE_has_building = {
			S = "1"
			T = "is_building_group = bg_manufacturing level >= 4"
			K = "1"
		}
		NOT = { has_variable = buissness_failed_var }
	}

	immediate = {
		ig:ig_trade_unions = {
			save_scope_as = ig_trade_unions
		}
		set_variable = buissness_failed_var # Only happens once
		random_scope_state = {
			limit = {
				MFE_has_building = {
					S = "2"
					T = "is_building_group = bg_manufacturing level >= 4"
					K = "1"
				}
			}
			random_scope_building = {
				limit = {
					MFE_has_building = {
						S = "3"
						T = "is_building_group = bg_manufacturing level >= 4"
						K = "1"
					}
				}
				save_scope_as = failing_building
			}
			save_scope_as = failing_state
			add_modifier = {
				name = buissness_failed_state_mod
				months = long_modifier_time
			}
		}
	}

	option = {  # Send money to the state administrators
		name = MFE_political_events.14.a
		default_option = yes
		scope:failing_state = {
			add_modifier = {
				name = state_buissness_supported_mod
				months = long_modifier_time
			}
			add_radicals_in_state = {
				pop_type = laborers
				value = medium_radicals
			}
		}
	}
	option = {  # We need to support the People
		name = MFE_political_events.14.b
		trigger = {
			ig:ig_trade_unions = {
				is_insurrectionary = no
				is_revolutionary = no
			}
		}
		scope:failing_state = {
			add_modifier = {
				name = state_buissness_supported_mod
				months = long_modifier_time
			}
		}
		ig:ig_trade_unions = {
			add_modifier = {
				name = ig_gaining_support
				months = long_modifier_time
			}
		}
	}
}

# Recruitment Drive - is at war and has national militia law, increase conscription

MFE_political_events.15 = {
	type = country_event
	placement = scope:conscription_state
	title = MFE_political_events.15.t
	desc = MFE_political_events.15.d
	flavor = MFE_political_events.15.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/unspecific_military_parade.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_military.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		is_at_war = yes
		any_scope_war = {
			is_warleader = root
			num_country_dead = {
				target = root
				value >= 0
			}
		}
		any_scope_state = {
			any_scope_building = { is_building_type = building_conscription_center }
		}
		OR = {
			has_law = law_type:law_national_militia
			has_law = law_type:law_mass_conscription
		}
	}

	immediate = {
		ordered_scope_state = {
			limit = {
				any_scope_building = { is_building_type = building_conscription_center }
			}
			order_by = num_conscription_centers
			max = 1
			save_scope_as = conscription_state
		}
	}

	option = { # Go through with the recruitment drive
		name = MFE_political_events.15.a
		default_option = yes
		scope:conscription_state = {
			add_modifier = {
				name = state_recruitment_drive_mod
				months = short_modifier_time
			}
		}
	}
	option = { # We don't need the extra soldiers
		name = MFE_political_events.15.b
		scope:conscription_state = {
			add_loyalists_in_state = {
				value = 0.15
			}
		}
	}
}

# Secular Policies - has law_freedom_of_conscience or law_total_separation, make clergy pops radical

MFE_political_events.16 = {
	type = country_event
	placement = scope:religious_state
	title = MFE_political_events.16.t
	desc = MFE_political_events.16.d
	flavor = MFE_political_events.16.f

	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:ig_leader

	icon = "gfx/interface/icons/event_icons/event_industry.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		OR = {
			has_law = law_type:law_freedom_of_conscience
			has_law = law_type:law_total_separation
		}
		pop_type_percent_country = {
			pop_type = clergymen
			percent > 0.05
		}
		exists = ig:ig_devout
		ig:ig_devout = {
			is_marginal = no
			exists = leader
		}
		any_scope_state = {
			any_scope_pop = {
				is_pop_type = clergymen
			}
		}
	}

	immediate = {
		ig:ig_devout.leader = {
			save_scope_as = ig_leader
		}
		ordered_scope_state = {
			limit = {
				any_scope_pop = {
					is_pop_type = clergymen
				}
			}
			order_by = num_of_clergymen
			max = 1
			save_scope_as = religious_state
		}
	}

	option = {  # 'Convince' the Church to stay quiet
		name = MFE_political_events.16.a
		default_option = yes
		ig:ig_devout = {
			add_modifier = {
				name = ig_devout_bribed_mod
				months = long_modifier_time
			}
			leader = {
				if = {
					limit = {
						NOT = { has_trait = basic_political_operator }
					}
					add_trait = basic_political_operator
				}
			}
		}
		add_modifier = {
			name = bribed_interest_group_mod
			months = long_modifier_time
		}
	}
	option = {  # Do they not have faith in our policies?!
		name = MFE_political_events.16.b
		ig:ig_devout = {
			add_modifier = {
				name = ig_power_challenged
				months = long_modifier_time
			}
		}
		scope:religious_state = {
			add_radicals_in_state = {
				value = medium_radicals
				pop_type = clergymen
			}
		}
	}
}

# Protectionist Lobby - has law_free_trade, pops advocate for protectionism

MFE_political_events.17 = {
	type = country_event
	placement = root
	title = MFE_political_events.17.t
	desc = MFE_political_events.17.d
	flavor = MFE_political_events.17.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/unspecific_politicians_arguing.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_industry.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"

	trigger = {
		has_law = law_type:law_free_trade
		any_active_party = {
			is_party_type = conservative_party
		}
		exists = py:conservative_party
		any_interest_group = {
			is_member_of_party = owner.py:conservative_party
			is_in_government = yes
			law_stance = {
				law = law_type:law_protectionism
				value > neutral
			}
		}
		NOT = { has_variable = protectionist_lobby_var }
	}

	immediate = {
		set_variable = protectionist_lobby_var
		random_interest_group = {
			limit = {
			   is_member_of_party = owner.py:conservative_party
			   is_in_government = yes
			   law_stance = {
				   law = law_type:law_protectionism
				   value > neutral
			   }
			}
			save_scope_as = conservative_ig
		}
	}

	option = {  # Perhaps we can apply some more restrictions...
		name = MFE_political_events.17.a
		default_option = yes
		every_active_party = {
			limit = {
				is_party_type = conservative_party
			}
			add_momentum = momentum_small
		}
		scope:conservative_ig = {
			add_modifier = {
				name = ig_gaining_support
				months = long_modifier_time
			}
		}
	}
	option = {  # Who do they think they are...
		name = MFE_political_events.17.b
		every_active_party = {
			limit = {
				is_party_type = conservative_party
			}
			add_momentum = momentum_small_decrease
		}
		scope:conservative_ig = {
			add_modifier = {
				name = ig_power_challenged
				months = long_modifier_time
			}
		}
	}
}

# Free Trade & Repeal Society - has law_protectionism, pops advocate for free trade

MFE_political_events.18 = {
	type = country_event
	placement = root
	title = MFE_political_events.18.t
	desc = MFE_political_events.18.d
	flavor = MFE_political_events.18.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_capitalists_meeting.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_trade.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"

	trigger = {
		has_law = law_type:law_protectionism
		any_active_party = {
			is_party_type = liberal_party
		}
		exists = py:liberal_party
		any_interest_group = {
			is_member_of_party = owner.py:liberal_party
			is_in_government = yes
			law_stance = {
				law = law_type:law_free_trade
				value > neutral
			}
		}
		NOT = { has_variable = freetrade_lobby_var }
	}

	immediate = {
		set_variable = freetrade_lobby_var
		random_interest_group = {
			limit = {
			   is_member_of_party = owner.py:liberal_party
			   is_in_government = yes
			   law_stance = {
				   law = law_type:law_free_trade
				   value > neutral
			   }
			}
			save_scope_as = liberal_ig
		}
	}

	option = {  # Free Trade may be a good idea...
		name = MFE_political_events.18.a
		default_option = yes
		every_active_party = {
			limit = {
				is_party_type = liberal_party
			}
			add_momentum = momentum_small
			save_scope_as = liberal_party
		}
		scope:liberal_ig = {
			add_modifier = {
				name = ig_gaining_support
				months = long_modifier_time
			}
		}
	}
	option = {  # The [SCOPE.sParty('liberal_party').GetName] will not dictate our policy!
		name = MFE_political_events.18.b
		every_active_party = {
			limit = {
				is_party_type = liberal_party
			}
			add_momentum = momentum_small_decrease
		}
		scope:liberal_ig = {
			add_modifier = {
				name = ig_power_challenged
				months = long_modifier_time
			}
		}
	}
}

# Free Trade & Morals- has law_laissez_faire

MFE_political_events.19 = {
	type = country_event
	placement = root
	title = MFE_political_events.19.t
	desc = MFE_political_events.19.d
	flavor = MFE_political_events.19.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_capitalists_meeting.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_trade.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"

	trigger = {
		has_law = law_type:law_laissez_faire
		exists = ig:ig_industrialists
		ig:ig_industrialists = { is_powerful = yes }
		NOT = { has_variable = freetrade_morals_var }
	}

	immediate = {
		set_variable = freetrade_morals_var
	}

	option = { # Free Trade is the way
		name = MFE_political_events.19.a
		default_option = yes
		add_modifier = {
			name = free_trade_support_mod
			months = long_modifier_time
		}
		add_radicals = {
			pop_type = peasants
			value = large_radicals
		}
	}
	option = { # Perhaps they are right...
		name = MFE_political_events.19.b
		add_modifier = {
			name = free_trade_denied_mod
			months = long_modifier_time
		}
		add_radicals = {
			pop_type = peasants
			value = medium_radicals
		}
	}
}

# Trade Union Reform - has law_worker_protections

MFE_political_events.20 = {
	type = country_event
	placement = root
	title = MFE_political_events.20.t
	desc = MFE_political_events.20.d
	flavor = MFE_political_events.20.f

	duration = 3

	gui_window = event_window_2char

	left_icon = ruler
	right_icon = scope:trade_leader

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/2Characters"

	icon = "gfx/interface/icons/event_icons/event_trade.dds"

	trigger = {
		has_law = law_type:law_worker_protections
		exists = ig:ig_trade_unions
		ig:ig_trade_unions = {
			is_marginal = no
			is_in_government = yes
			exists = leader
		}
		NOT = { has_variable = unions_reform_var }
	}


	immediate = {
		set_variable = unions_reform_var
		ig:ig_trade_unions.leader = {
			save_scope_as = trade_leader
		}
		ig:ig_trade_unions = {
			save_scope_as = ig_trade_unions
		}
	}
	option = {  # This offer cannot be accepted
		name = MFE_political_events.20.a
		default_option = yes
		ig:ig_trade_unions = {
			add_modifier = {
				name = ig_power_challenged
				months = long_modifier_time
			}
		}
		add_radicals = {
			value = small_radicals
		}
	}
	option = {  # We will appease them...for now
		name = MFE_political_events.20.b
		ig:ig_trade_unions = {
			add_modifier = {
				name = ig_gaining_support
				months = long_modifier_time
			}
		}
	}
}

# Censorship Bureau Overworked has law_outlawed_dissent or law_censorship

MFE_political_events.21 = {
	type = country_event
	placement = root
	title = MFE_political_events.21.t
	desc = MFE_political_events.21.d
	flavor = MFE_political_events.21.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/southamerica_aristocrats.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"

	trigger = {
		OR = {
			has_law = law_type:law_outlawed_dissent
			has_law = law_type:law_censorship
		}
		any_interest_group = {
			is_in_government = yes
			law_stance = {
				law = law_type:law_censorship
				value > neutral
			}
		}
		bureaucracy > 0
		NOT = { has_variable = censorship_bureau_var }
	}

	immediate = {
		set_variable = censorship_bureau_var
		random_interest_group = {
			limit = {
				is_in_government = yes
				law_stance = {
					law = law_type:law_censorship
					value > neutral
				}
			}
			save_scope_as = censorship_ig
		}
	}

	option = {  # Well...We need to censor the people
		name = MFE_political_events.21.a
		default_option = yes
		add_modifier = {
			name = censorship_bureau_supported_mod
			months = long_modifier_time
		}
		scope:censorship_ig = {
			add_modifier = {
				name = censorship_supported_ig_mod
				months = long_modifier_time
			}
		}
	}
	option = {  # They can do without more support
		name = MFE_political_events.21.b
		add_modifier = {
			name = censorship_bureau_denied_funds_mod
			months = long_modifier_time
		}
		scope:censorship_ig = {
			add_modifier = {
				name = censorship_denied_funds_ig_mod
				months = long_modifier_time
			}
		}
	}
}

# Freemarketeering Criticized - has law_laissez_faire

MFE_political_events.22 = {
	type = country_event
	placement = root
	title = MFE_political_events.22.t
	desc = MFE_political_events.22.d
	flavor = MFE_political_events.22.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/middleeast_courtroom_upheaval.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_industry.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		any_active_party = {
			is_party_type = conservative_party
		}
		exists = py:conservative_party
		any_interest_group = {
			is_member_of_party = owner.py:conservative_party
			is_in_government = yes
			law_stance = {
				law = law_type:law_laissez_faire
				value < neutral
			}
		}
		any_interest_group = {
			has_ideology = ideology:ideology_laissez_faire
		}
		has_law = law_type:law_laissez_faire
	}

	immediate = {
		random_interest_group = {
			limit = {
				is_member_of_party = owner.py:conservative_party
				is_in_government = yes
				law_stance = {
					law = law_type:law_laissez_faire
					value < neutral
				}
			}
			save_scope_as = conservative_ig
		}
		random_interest_group = {
			limit = {
				has_ideology = ideology:ideology_laissez_faire
				NOT = { this = scope:conservative_ig }
			}
			save_scope_as = free_trade_ig
		}
		ig:ig_industrialists = {
			save_scope_as = ig_industrialists
		}
	}

	option = {  # The Free Market is the only way forward!
		name = MFE_political_events.22.a
		default_option = yes
		scope:free_trade_ig = {
			add_modifier = {
				name = ig_gaining_support
				months = long_modifier_time
			}
		}
		add_radicals = { value = medium_radicals }
	}
	option = {  # Things really aren't like they used to be...
		name = MFE_political_events.22.b
		scope:conservative_ig = {
			add_modifier = {
				name = ig_power_challenged
				months = long_modifier_time
			}
		}
	}
}

#### Suffrage ####

# based on https://github.com/Historical-Expansion-Mod/Greater-Flavor-Mod/blob/master/GFM/events/SuffragetteMovements.txt

# Anti-Slavery Convention - has law_slave_trade or law_legacy_slavery

MFE_political_events.23 = {
	type = country_event
	placement = root
	title = MFE_political_events.23.t
	desc = MFE_political_events.23.d
	flavor = MFE_political_events.23.f

	duration = 3

	gui_window = event_window_2char

	left_icon = scope:anti_slavery_ig.leader
	right_icon = scope:pro_slavery_ig.leader

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/2Characters"
	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"
	cooldown = { months = long_cooldown }
	trigger = {
		OR = {
			has_law = law_type:law_slave_trade
			has_law = law_type:law_legacy_slavery
		}
		any_interest_group = {
			is_in_government = yes
			OR = {
				has_ideology = ideology:ideology_pro_slavery
				leader = {
					has_ideology = ideology:ideology_slaver
				}
			}
		}
		any_interest_group = {
			is_in_government = yes
			OR = {
				has_ideology = ideology:ideology_anti_slavery
				leader = {
					has_ideology = ideology:ideology_abolitionist
				}
			}
		}
	}

	immediate = {
		random_interest_group = {
			limit = {
				is_in_government = yes
				OR = {
					has_ideology = ideology:ideology_anti_slavery
					leader = {
						has_ideology = ideology:ideology_abolitionist
					}
				}
			}
			save_scope_as = anti_slavery_ig
		}
		random_interest_group = {
			limit = {
				is_in_government = yes
				OR = {
					has_ideology = ideology:ideology_pro_slavery
					leader = {
						has_ideology = ideology:ideology_slaver
					}
				}
			}
			save_scope_as = pro_slavery_ig
		}
	}

	option = {  #There is little we can do
		name = MFE_political_events.23.a
		default_option = yes
		scope:anti_slavery_ig = {
			add_modifier = {
				name = ig_abolitionists_mad
				months = short_modifier_time
			}
		}
		scope:pro_slavery_ig = {
			add_modifier = {
				name = ig_slavers_happy
				months = short_modifier_time
			}
		}
	}
	option = {
		name = MFE_political_events.23.b
		scope:anti_slavery_ig = {
			add_modifier = {
				name = ig_abolitionists_happy
				months = short_modifier_time
			}
		}
		scope:pro_slavery_ig = {
			add_modifier = {
				name = ig_slavers_mad
				months = short_modifier_time
			}
		}
	}
}

# Education for Women - has law_no_womens_rights

MFE_political_events.24 = {
	type = country_event
	placement = root
	title = MFE_political_events.24.t
	desc = MFE_political_events.24.d
	flavor = MFE_political_events.24.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_sufferage.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_industry.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"

	trigger = {
		NOT = { has_variable = womens_education_demanded }
		has_law = law_type:law_no_womens_rights
		OR = {
			has_law = law_type:law_census_voting
			has_law = law_type:law_universal_suffrage
		}
		any_interest_group = {
			leader = { has_ideology = ideology:ideology_reformer}
		}
		any_interest_group = {
			OR = {
				is_interest_group_type = ig_rural_folk
				is_interest_group_type = ig_intelligentsia
				is_interest_group_type = ig_trade_unions
				is_interest_group_type = ig_petty_bourgeoisie
				is_interest_group_type = ig_industrialists
			}
			NOR = {
				leader = { has_ideology = ideology:ideology_reformer}
				leader = { has_ideology = ideology:ideology_feminist}
			}
		}
	}

	immediate = {
		set_variable = womens_education_demanded
	}

	option = {     # Education is a fundamental right!
		name = MFE_political_events.24.a
		default_option = yes
		random_list = {
			1 = {
				modifier = {
					if = {
						limit = {
							ig:ig_rural_folk = {
								leader = { has_ideology = ideology:ideology_feminist}
							}
						}
						add = -1
					}
				}
				ig:ig_rural_folk = { leader = { set_ideology = ideology:ideology_feminist } }
			}
			1 = {
				modifier = {
					if = {
						limit = {
							ig:ig_trade_unions = {
								leader = { has_ideology = ideology:ideology_feminist}
							}
						}
						add = -1
					}
				}
				ig:ig_trade_unions = { leader = { set_ideology = ideology:ideology_feminist } }
			}
			1 = {
				modifier = {
					if = {
						limit = {
							ig:ig_petty_bourgeoisie = {
								leader = { has_ideology = ideology:ideology_feminist}
							}
						}
						add = -1
					}
				}
				ig:ig_petty_bourgeoisie = { leader = { set_ideology = ideology:ideology_feminist } }
			}
			1 = {
				modifier = {
					if = {
						limit = {
							ig:ig_industrialists = {
								leader = { has_ideology = ideology:ideology_feminist}
							}
						}
						add = -1
					}
				}
				ig:ig_industrialists = { leader = { set_ideology = ideology:ideology_feminist } }
			}
			1 = {
				modifier = {
					if = {
						limit = {
							ig:ig_intelligentsia = {
								leader = { has_ideology = ideology:ideology_feminist}
							}
						}
						add = -1
					}
				}
				ig:ig_intelligentsia = { leader = { set_ideology = ideology:ideology_feminist } }
			}
		}
	}
	option = {     #  Incremental change is a safer path to progress.
		name = MFE_political_events.24.b
		random_list = {
			1 = {
				modifier = {
					if = {
						limit = {
							ig:ig_rural_folk = {
								leader = { has_ideology = ideology:ideology_reformer}
							}
						}
						add = -1
					}
				}
				ig:ig_rural_folk = { leader = { set_ideology = ideology:ideology_reformer } }
			}
			1 = {
				modifier = {
					if = {
						limit = {
							ig:ig_trade_unions = {
								leader = { has_ideology = ideology:ideology_reformer}
							}
						}
						add = -1
					}
				}
				ig:ig_trade_unions = { leader = { set_ideology = ideology:ideology_reformer } }
			}
			1 = {
				modifier = {
					if = {
						limit = {
							ig:ig_petty_bourgeoisie = {
								leader = { has_ideology = ideology:ideology_reformer}
							}
						}
						add = -1
					}
				}
				ig:ig_petty_bourgeoisie = { leader = { set_ideology = ideology:ideology_reformer } }
			}
			1 = {
				modifier = {
					if = {
						limit = {
							ig:ig_industrialists = {
								leader = { has_ideology = ideology:ideology_reformer}
							}
						}
						add = -1
					}
				}
				ig:ig_industrialists = { leader = { set_ideology = ideology:ideology_reformer } }
			}
			1 = {
				modifier = {
					if = {
						limit = {
							ig:ig_intelligentsia = {
								leader = { has_ideology = ideology:ideology_reformer}
							}
						}
						add = -1
					}
				}
				ig:ig_intelligentsia = { leader = { set_ideology = ideology:ideology_reformer } }
			}
		}
	}
}

# Hunger Strike - has law_women_in_the_workplace and can enact law_womens_suffrage

MFE_political_events.25 = {
	type = country_event
	placement = root
	title = MFE_political_events.25.t
	desc = MFE_political_events.25.d
	flavor = MFE_political_events.25.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_sufferage.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"

	trigger = {
		NOT = { has_variable = womens_rights_demanded }
		any_interest_group = {
			leader = { has_ideology = ideology:ideology_feminist}
		}
		NOT = { has_law = law_type:law_womens_suffrage }
		OR = {
			has_law = law_type:law_landed_voting
			has_law = law_type:law_wealth_voting
			has_law = law_type:law_census_voting
			has_law = law_type:law_universal_suffrage
		}
		NOT = {
			any_interest_group = {
				OR = {
					has_modifier = successful_protest
					has_modifier = arrested_protesters
				}
			}
		}
	}

	immediate = {
		ig:ig_industrialists = {
			save_scope_as = ig_industrialists
	}
		set_variable = womens_rights_demanded
		random_scope_character = {
			limit = {
				this = interest_group.leader
				has_ideology = ideology:ideology_feminist
			}
			save_scope_as = suffrage_leader
		}
	}

	option = {  # They make some good points.
		name = MFE_political_events.25.a
		default_option = yes
		every_interest_group = {
			limit = {
				leader = { has_ideology = ideology:ideology_feminist}
			}
			add_modifier = {
				name = successful_protest
				months = long_modifier_time
			}
		}
	}
	option = {  # Arrest these troublemakers.
		name = MFE_political_events.25.b
		every_interest_group = {
			limit = {
				leader = { has_ideology = ideology:ideology_feminist}
			}
			add_modifier = {
				name = arrested_protesters
				months = long_modifier_time
			}
		}
	}
}

##### Other #####
# based on https://github.com/Historical-Expansion-Mod/Greater-Flavor-Mod/blob/master/GFM/events/NationalistMovements.txt

# Local Poet

MFE_political_events.26 = {
	type = country_event
	placement = scope:arts_state
	title = MFE_political_events.26.t
	desc = MFE_political_events.26.d
	flavor = MFE_political_events.26.f
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:poet_guy

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		any_scope_state = {
			any_scope_building = {
				is_building_type = building_arts_academy
				level >= 3
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				any_scope_building = {
					is_building_type = building_arts_academy
					level >= 3
				}
			}
			save_scope_as = arts_state
		}
		create_character = {
			save_scope_as = poet_guy
		}
	}

	option = {  # Have Him Teach the Students
		name = MFE_political_events.26.a
		default_option = yes
		add_modifier = {
			name = local_poet_mod
			months = long_modifier_time
		}
	}
	option = {  # Well it doens't really matter anyway
		name = MFE_political_events.26.b
		trigger = {
			NOT = { has_technology_researched = realism }
			can_research = realism
		}
		add_technology_progress = { progress = 3000 technology = realism }
	}
}

# Underground Newspaper

MFE_political_events.27 = {
	type = country_event
	placement = scope:newspaper_state
	title = MFE_political_events.27.t
	desc = MFE_political_events.27.d
	flavor = MFE_political_events.27.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/unspecific_signed_contract.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		OR = {
			has_law = law_type:law_right_of_assembly
			has_law = law_type:law_protected_speech
		}
		any_scope_state = {
			is_incorporated = yes
			any_scope_building = {
				is_building_type = building_paper_mills
				level >= 2
			}
		}
		has_technology_researched = mass_communication
	}

	immediate = {
		ig:ig_intelligentsia = {
			save_scope_as = ig_intelligentsia
		}
		random_scope_state = {
			limit = {
				is_incorporated = yes
				any_scope_building = {
					is_building_type = building_paper_mills
					level >= 2
				}
			}
			save_scope_as = newspaper_state
		}
	}

	option = {
		name = MFE_political_events.27.a
		default_option = yes
		# Suppress it, gain radicals and make integelsentia mad
		if = {
			limit = {
				exists = ig:ig_intelligentsia
				ig:ig_intelligentsia = { is_marginal = no }
			}
			ig:ig_intelligentsia = {
				add_modifier = {
					name = suppressed_newspaper_mod
					days = long_modifier_time
				}
			}
		}
		else = {
			add_radicals = {
				value = small_radicals
			}
		}
	}
	option = {
		name = MFE_political_events.27.b
		# Gain radicals but also gain some innovation modifier
		add_radicals = {
			value = small_radicals
		}
		add_modifier = {
			name = free_flowing_publications_mod
			days = long_modifier_time
		}
	}
}

# Nobles Incite the peasantry - Does not have law_multicultural

MFE_political_events.28 = {
	type = country_event
	placement = scope:discriminated_state
	title = MFE_political_events.28.t
	desc = MFE_political_events.28.d
	flavor = MFE_political_events.28.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/middleeast_upperclass_party.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		NOT = { has_law = law_type:law_multicultural }
		institution_investment_level = {
			institution = institution_schools
			value < 2
		}
		any_scope_pop = {
			culture_accepted = no
		}
	}

	immediate = {
		ordered_scope_pop = {
			limit = {
				culture_accepted = no
			}
			order_by = {
				value = wealth
				multiply = -1
			}
			culture = { save_scope_as = discriminated_culture }
			state = { save_scope_as = discriminated_state }
		}
	}

	option = {  # That's actually pretty funny
		name = MFE_political_events.28.a
		default_option = yes
		add_radicals = {
			value = large_radicals
			culture = scope:discriminated_culture
		}
		scope:discriminated_state = {
			add_culture_standard_of_living_modifier = {
				culture = scope:discriminated_culture
				months = 13
				multiplier = -1
			}
		}
	}
	option = {  # Side with the [SCOPE.sCulture('discriminated_culture').GetName] People
		name = MFE_political_events.28.b
		add_loyalists = {
			value = small_radicals
			culture = scope:discriminated_culture
		}
		random_interest_group = {
			limit = {
				law_stance = {
					law = law_type:law_multicultural
					value < neutral
				}
				is_marginal = no
			}
			add_modifier = {
				name = segregation_eroding
				months = long_modifier_time
			}
		}
	}
}

# Local Merchants Upset

MFE_political_events.29 = {
	type = country_event
	placement = scope:merchants_state
	title = MFE_political_events.29.t
	desc = MFE_political_events.29.d
	flavor = MFE_political_events.29.f

	duration = 3

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_springtime_of_nations.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_trade.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		MFE_has_building = {
			S = "1"
			T = "is_building_type = building_trade_center level >= 10"
			K = "2"
		}
		OR = {
			has_law = law_type:law_mercantilism
			has_law = law_type:law_free_trade
		}
		any_interest_group = {
			is_in_government = yes
			law_stance = {
				law = law_type:law_free_trade
				value > neutral
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				MFE_has_building = {
					S = "2"
					T = "is_building_type = building_trade_center level >= 10"
					K = "2"
				}
			}
			save_scope_as = merchants_state
		}
		random_interest_group = {
			limit = {
				is_in_government = yes
				law_stance = {
					law = law_type:law_free_trade
					value > neutral
				}
			}
			save_scope_as = free_trade_ig
		}
	}

	option = {  # Support Free Trade!
		name = MFE_political_events.29.a
		default_option = yes
		scope:pro_free_trade_ig = {
			add_modifier = {
				name = free_market_ideologue
				months = short_modifier_time
			}
		}
	}
	option = {  # Our markets need all the advantages they can get!
		name = MFE_political_events.29.b
		add_modifier = {
			name = market_protectionism_mod
			months = short_modifier_time
		}
	}
}
