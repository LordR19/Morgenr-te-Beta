# Generated file, dont change manually or changes will be lost.

namespace = MFE_trade_good_events

# Bullets for [SCOPE.sW('active_war').GetName]
MFE_trade_good_events.1 = {
	type = country_event
	placement = scope:munitions_state
	title = "MFE_trade_good_events.1.t"
	desc = "MFE_trade_good_events.1.d"
	flavor = "MFE_trade_good_events.1.f"
	duration = 3
	icon = "gfx/event_icons/ammunition.dds"
	minor_left_icon = g:ammunition
	minor_right_icon = g:ammunition
	
	event_image = {
		video = "gfx/event_pictures/unspecific_gears_pistons.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/gears_pistons"
	cooldown = { months = long_cooldown }
	trigger = {
		any_scope_war = {
			count > 0
		}
		any_scope_building = {
			has_ammo_pm = yes
			is_building_type = building_munition_plants
			average_building_trigger = yes
			level >= 5
		}
	}
	
	immediate = {
		random_scope_war = {
			save_scope_as = active_war
		}
		random_scope_building = {
			limit = {
				has_ammo_pm = yes
				is_building_type = building_munition_plants
				average_building_trigger = yes
				level >= 5
			}
			save_scope_as = munitions_building
			state = {
				save_scope_as = munitions_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.1.a
		default_option = yes
		# Just in time for the war
		scope:munitions_building = {
			add_modifier = {
				name = MFE_lots_of_bullets_mod
				months = normal_modifier_time
			}
		}
	}
	
}

# [SCOPE.sC('ally').GetName] is short on bullets for [SCOPE.sW('active_war').GetName]
MFE_trade_good_events.2 = {
	type = country_event
	placement = scope:ammo_state
	title = "MFE_trade_good_events.2.t"
	desc = "MFE_trade_good_events.2.d"
	flavor = "MFE_trade_good_events.2.f"
	duration = 3
	icon = "gfx/event_icons/ammunition.dds"
	minor_left_icon = ruler
	minor_right_icon = scope:ally.ruler
	event_image = {
		trigger = {
			OR = {
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		video = "gfx/event_pictures/middleeast_upperclass_party.bk2"
	}
	event_image = {
		trigger = {
			ruler.culture = {
				OR = {
					has_discrimination_trait = iberian_culture_group
					has_discrimination_trait = lusophone
					has_discrimination_trait = hispanophone
				}
			}
		}
		video = "gfx/event_pictures/southamerica_aristocrats.bk2"
	}
	event_image = { trigger = { ruler.culture = { has_culture_graphics = african } } video = "gfx/event_pictures/africa_diplomats_negotiating.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = asian } } video = "gfx/event_pictures/asia_politician_parliament_motion.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = european } } video = "gfx/event_pictures/europenorthamerica_capitalists_meeting.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = mideast_indian } } video = "gfx/event_pictures/asia_politician_parliament_motion.bk2" }
	event_image = {
		# Default
		trigger = {
			NOR = {
				OR = {
					religion = rel:sunni
					religion = rel:shiite
				}
				ruler.culture = {
					OR = {
						has_culture_graphics = african
						has_culture_graphics = asian
						has_culture_graphics = european
						has_culture_graphics = mideast_indian
					}
				}
			}
		}
		video = "gfx/event_pictures/unspecific_politicians_arguing.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/southamerica/aristocrats"
	
	cooldown = { months = long_cooldown }
	trigger = {
		ally_in_war_short_on_goods_trigger = {
			goods = "ammunition"
		}
		market.mg:ammunition = {
			market_goods_has_goods_shortage = no
		}
		any_scope_building = {
			has_ammo_pm = yes
			is_building_type = building_munition_plants
			rich_building_trigger = yes
			level >= 5
		}
	}
	
	immediate = {
		ally_in_war_short_on_goods_effect = {
			goods = "ammunition"
		}
		random_scope_building = {
			limit = {
				has_ammo_pm = yes
				is_building_type = building_munition_plants
				rich_building_trigger = yes
				level >= 5
			}
			save_scope_as = ammo_building
			state = { save_scope_as = ammo_state }
		}
		scope:ally = {
			random_scope_building = {
				limit = {
					has_ammo_pm = yes
					is_building_type = building_munition_plants
				}
				save_scope_as = ally_ammo_building
				state = { save_scope_as = ally_ammo_state }
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.2.a
		default_option = yes
		# We can spare a few bullets
		set_obligation = {
			actor = scope:ally
			target = root
		}
		scope:ammo_building = {
			add_modifier = {
				name = MFE_sending_ally_bullets_mod
				months = normal_modifier_time
			}
		}
		scope:ally_ammo_building = {
			add_modifier = {
				name = MFE_ally_sent_bullets_mod
				months = normal_modifier_time
			}
		}
		scope:ally = {
			create_trade_route = {
				goods = ammunition
				level = 1
				direction = import
				target = root.market
			}
			#create_trade_route = {
			#	goods = ammunition
			#	level = 1
			#	import = yes
			#	origin = scope:ammo_state.state_region
			#	target = scope:ally_ammo_state.state_region
			#}
		}
	}
	
	option = {
		name = MFE_trade_good_events.2.b
	}
}

# [SCOPE.sC('ally').GetName] is short on artillery for [SCOPE.sW('active_war').GetName]
MFE_trade_good_events.3 = {
	type = country_event
	placement = scope:artillery_state
	title = "MFE_trade_good_events.3.t"
	desc = "MFE_trade_good_events.3.d"
	flavor = "MFE_trade_good_events.3.f"
	duration = 3
	icon = "gfx/event_icons/shell_gun.dds"
	minor_left_icon = ruler
	minor_right_icon = scope:ally.ruler
	event_image = {
		trigger = {
			OR = {
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		video = "gfx/event_pictures/middleeast_upperclass_party.bk2"
	}
	event_image = {
		trigger = {
			ruler.culture = {
				OR = {
					has_discrimination_trait = iberian_culture_group
					has_discrimination_trait = lusophone
					has_discrimination_trait = hispanophone
				}
			}
		}
		video = "gfx/event_pictures/southamerica_aristocrats.bk2"
	}
	event_image = { trigger = { ruler.culture = { has_culture_graphics = african } } video = "gfx/event_pictures/africa_diplomats_negotiating.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = asian } } video = "gfx/event_pictures/asia_politician_parliament_motion.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = european } } video = "gfx/event_pictures/europenorthamerica_capitalists_meeting.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = mideast_indian } } video = "gfx/event_pictures/asia_politician_parliament_motion.bk2" }
	event_image = {
		# Default
		trigger = {
			NOR = {
				OR = {
					religion = rel:sunni
					religion = rel:shiite
				}
				ruler.culture = {
					OR = {
						has_culture_graphics = african
						has_culture_graphics = asian
						has_culture_graphics = european
						has_culture_graphics = mideast_indian
					}
				}
			}
		}
		video = "gfx/event_pictures/unspecific_politicians_arguing.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/southamerica/aristocrats"
	
	cooldown = { months = long_cooldown }
	trigger = {
		ally_in_war_short_on_goods_trigger = {
			goods = "artillery"
		}
		market.mg:artillery = {
			market_goods_has_goods_shortage = no
		}
		any_scope_building = {
			has_artillery_pm = yes
			is_building_type = building_arms_industry
			rich_building_trigger = yes
			level >= 5
		}
	}
	
	immediate = {
		ally_in_war_short_on_goods_effect = {
			goods = "artillery"
		}
		random_scope_building = {
			limit = {
				has_artillery_pm = yes
				is_building_type = building_arms_industry
				rich_building_trigger = yes
				level >= 5
			}
			save_scope_as = artillery_building
			state = {
				save_scope_as = artillery_state
			}
		}
		scope:ally = {
			random_scope_building = {
				limit = {
					has_artillery_pm = yes
					is_building_type = building_arms_industry
				}
				save_scope_as = ally_artillery_building
				state = { save_scope_as = ally_artillery_state }
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.3.a
		default_option = yes
		# We can spare a few artillery pieces
		set_obligation = {
			actor = scope:ally
			target = root
		}
		scope:artillery_building = {
			add_modifier = {
				name = MFE_sending_ally_artillery_mod
				months = normal_modifier_time
			}
		}
		scope:ally_artillery_building = {
			add_modifier = {
				name = MFE_ally_sent_artillery_mod
				months = normal_modifier_time
			}
		}
		scope:ally = {
			create_trade_route = {
				goods = artillery
				level = 1
				direction = import
				target = root.market
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.3.b
	}
}

# Materials for Artillery Shells dissapear from the factory in [SCOPE.sS('arms_state').GetName]
MFE_trade_good_events.4 = {
	type = country_event
	placement = scope:artillery_state
	title = "MFE_trade_good_events.4.t"
	desc = "MFE_trade_good_events.4.d"
	flavor = "MFE_trade_good_events.4.f"
	duration = 3
	icon = "gfx/event_icons/artillery.dds"
	event_image = {
		video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/vandalized_storefront"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		market.mg:artillery = {
			market_goods_has_goods_shortage = no
		}
		any_scope_building = {
			has_artillery_pm = yes
			is_building_type = building_arms_industry
			average_building_trigger = yes
			level >= 5
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				has_artillery_pm = yes
				is_building_type = building_arms_industry
				average_building_trigger = yes
				level >= 5
			}
			state = {
				save_scope_as = artillery_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.4.a
		default_option = yes
		# Hopefully they did not fall into the wrong hands...
		scope:artillery_state = {
			add_modifier = {
				name = MFE_artillery_stolen_from_state_mod
				months = normal_modifier_time
			}
		}
	}
	
}

# Farms in [SCOPE.sS('arable_state').GetName] having a great season
MFE_trade_good_events.5 = {
	type = country_event
	placement = scope:arable_state
	title = "MFE_trade_good_events.5.t"
	desc = "MFE_trade_good_events.5.d"
	flavor = "MFE_trade_good_events.5.f"
	duration = 3
	icon = "gfx/event_icons/peasants.dds"
	event_image = { trigger = { var:picture = 1 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_A_Storm_in_the_Rocky_Mountains_Mt_Rosalie.dds" }
	event_image = { trigger = { var:picture = 2 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_Puget_Sound_on_the_Pacific_Coast.dds" }
	event_image = { trigger = { var:picture = 3 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_Valley_of_the_Yosemite.dds" }
	event_image = { trigger = { var:picture = 4 } texture = "gfx/event_pictures/paintings/landscapes/Asher_Brown_Durand_The_Catskills.dds" }
	event_image = { trigger = { var:picture = 5 } texture = "gfx/event_pictures/paintings/landscapes/Asher_Durand_Kindred_Spirits.dds" }
	event_image = { trigger = { var:picture = 6 } texture = "gfx/event_pictures/paintings/landscapes/A_Bit_of_the_Roman_Aqueduct.dds" }
	event_image = { trigger = { var:picture = 7 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Cairn_in_Snow.dds" }
	event_image = { trigger = { var:picture = 8 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Der_einsame_Baum.dds" }
	event_image = { trigger = { var:picture = 9 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Morgen_im_Riesengebirge.dds" }
	event_image = { trigger = { var:picture = 10 } texture = "gfx/event_pictures/paintings/landscapes/Church_Heart_of_the_Andes.dds" }
	event_image = { trigger = { var:picture = 11 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Arch_of_Nero_1846.dds" }
	event_image = { trigger = { var:picture = 12 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Genesee_Scenery_1847.dds" }
	event_image = { trigger = { var:picture = 13 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Lake_with_Dead_Trees.dds" }
	event_image = { trigger = { var:picture = 14 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_The_Oxbow.dds" }
	event_image = { trigger = { var:picture = 15 } texture = "gfx/event_pictures/paintings/landscapes/Constable_Stratford_Mill.dds" }
	event_image = { trigger = { var:picture = 16 } texture = "gfx/event_pictures/paintings/landscapes/Frederic_Edwin_Church_The_Andes_of_Ecuador.dds" }
	event_image = { trigger = { var:picture = 17 } texture = "gfx/event_pictures/paintings/landscapes/Frogner_Manor_by_I_C_Dahl_for_Benjamin_Wegner.dds" }
	event_image = { trigger = { var:picture = 18 } texture = "gfx/event_pictures/paintings/landscapes/George_Inness_The_Lackawanna_Valley.dds" }
	event_image = { trigger = { var:picture = 19 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_Golding_Constables_Flower_Garden.dds" }
	event_image = { trigger = { var:picture = 20 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_The_Hay_Wain.dds" }
	event_image = { trigger = { var:picture = 21 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_Wivenhoe_Park.dds" }
	event_image = { trigger = { var:picture = 22 } texture = "gfx/event_pictures/paintings/landscapes/Karl_Friedrich_Schinkel_Gotischer_Dom_am_Wasser.dds" }
	event_image = { trigger = { var:picture = 23 } texture = "gfx/event_pictures/paintings/landscapes/Kensett_John_F_Lake_George.dds" }
	event_image = { trigger = { var:picture = 24 } texture = "gfx/event_pictures/paintings/landscapes/Landscape_with_Rainbow.dds" }
	event_image = { trigger = { var:picture = 25 } texture = "gfx/event_pictures/paintings/landscapes/Looking_Down_Yosemite_Valley.dds" }
	event_image = { trigger = { var:picture = 26 } texture = "gfx/event_pictures/paintings/landscapes/rockymountains.dds" }
	event_image = { trigger = { var:picture = 27 } texture = "gfx/event_pictures/paintings/landscapes/The_Subsiding_of_the_Waters_of_the_Deluge.dds" }
	event_image = { trigger = { var:picture = 28 } texture = "gfx/event_pictures/paintings/landscapes/The_Valley_of_Wyoming.dds" }
	event_image = { trigger = { var:picture = 29 } texture = "gfx/event_pictures/paintings/landscapes/The_White_Horse_by_John_Constable.dds" }
	event_image = { trigger = { var:picture = 30 } texture = "gfx/event_pictures/paintings/landscapes/Thomas_Cole_Il_Penseroso.dds" }
	event_image = { trigger = { var:picture = 31 } texture = "gfx/event_pictures/paintings/landscapes/Twilight_in_the_Wilderness_by_Frederic_Edwin_Church.dds" }
	event_image = { trigger = { var:picture = 32 } texture = "gfx/event_pictures/paintings/landscapes/View_of_Fort_Putnam.dds" }
	event_image = { trigger = { var:picture = 33 } texture = "gfx/event_pictures/paintings/landscapes/westernfrontier.dds" }
	event_image = { trigger = { var:picture = 34 } texture = "gfx/event_pictures/paintings/landscapes/yosemete.dds" }
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/europenorthamerica/gold_prospectors"
	
	cooldown = { months = long_cooldown }
	trigger = {
		has_food_shortage = yes
		any_scope_building = {
			state = {
				arable_land > 100
			}
			rich_building_trigger = yes
			level >= 10
		}
	}
	
	immediate = {
		get_landscape_picture = yes
		random_scope_building = {
			limit = {
				state = {
					arable_land > 75
				}
				is_farm = yes
				rich_building_trigger = yes
				level >= 10
			}
			state = {
				save_scope_as = arable_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.5.a
		default_option = yes
		# There couldn't have been a better time
		scope:arable_state = {
			ordered_scope_building = {
				limit = {
					is_farm = yes
				}
				order_by = level
				max = 3
				add_modifier = {
					name = MFE_propering_farms_mod
					months = normal_modifier_time
				}
			}
		}
	}
	
}

# Madman at the Tank Factory in [SCOPE.sS('tank_state').GetName]
MFE_trade_good_events.6 = {
	type = country_event
	placement = scope:tank_state
	title = "MFE_trade_good_events.6.t"
	desc = "MFE_trade_good_events.6.d"
	flavor = "MFE_trade_good_events.6.f"
	duration = 3
	icon = "gfx/event_icons/mobile_armor.dds"
	minor_left_icon = g:tanks
	minor_right_icon = g:tanks
	event_image = {
		video = "gfx/event_pictures/unspecific_devastation.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/destruction"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		any_scope_building = {
			is_building_type = building_war_machine_industry
			has_active_production_method = pm_tank_production
			occupancy >= 0.5
			level >= 1
			level < 7
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				is_building_type = building_war_machine_industry
				has_active_production_method = pm_tank_production
				occupancy >= 0.5
				level >= 1
				level < 7
			}
			state = {
				save_scope_as = tank_state
			}
		}
		scope:tank_state = {
			remove_building = building_war_machine_industry
		}
	}
	
	option = {
		name = MFE_trade_good_events.6.a
		default_option = yes
		# Hopefully they get over it
		scope:tank_state = {
			add_modifier = {
				name = MFE_tank_factory_destruction_mod
				months = normal_modifier_time
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.6.b
	}
}

# Private Planes bring Rich Investors in [SCOPE.sS('plane_state').GetName]
MFE_trade_good_events.7 = {
	type = country_event
	placement = scope:plane_state
	title = "MFE_trade_good_events.7.t"
	desc = "MFE_trade_good_events.7.d"
	flavor = "MFE_trade_good_events.7.f"
	duration = 3
	icon = "gfx/event_icons/aeroplanes.dds"
	event_image = {
		video = "gfx/event_pictures/unspecific_airPlane.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/airplane"
	
	cooldown = { months = long_cooldown }
	trigger = {
		any_scope_building = {
			has_active_production_method = pm_aeroplane_production
			rich_building_trigger = yes
			level >= 3
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				has_active_production_method = pm_aeroplane_production
				rich_building_trigger = yes
				level >= 3
			}
			state = {
				save_scope_as = plane_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.7.a
		default_option = yes
		# It's a great time to live in [SCOPE.GetRootScope.GetCountry.GetName]
		scope:plane_state = {
			add_modifier = {
				name = MFE_plane_investors_state_mod
				months = normal_modifier_time
			}
		}
	}
	
}

# Poor quality iron in the boats of [SCOPE.sS('ironclad_state').GetName]
MFE_trade_good_events.8 = {
	type = country_event
	placement = scope:ironclad_state
	title = "MFE_trade_good_events.8.t"
	desc = "MFE_trade_good_events.8.d"
	flavor = "MFE_trade_good_events.8.f"
	duration = 3
	icon = "gfx/interface/icons/event_icons/event_scales.dds"
	event_image = {
		texture = "gfx/event_pictures/paintings/harbors/The_Paying_out_Machinery_in_the_Stern_of_the_Great_Eastern.dds"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/steam_ship"
	
	cooldown = { months = long_cooldown }
	trigger = {
		any_scope_building = {
			has_ironclad_pm = yes
			poor_building_trigger = yes
		}
	}
	
	immediate = {
		get_harbor_picture = yes
		random_scope_building = {
			limit = {
				has_ironclad_pm = yes
				poor_building_trigger = yes
			}
			save_scope_as = ironclad_building
			state = {
				save_scope_as = ironclad_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.8.a
		default_option = yes
		# Hopefully the iron gets better
		scope:ironclad_building = {
			add_modifier = {
				name = MFE_ironclad_badiron_mod
				months = normal_modifier_time
			}
		}
	}
	
}

# Grain shortage in [SCOPE.sS('grain_state').GetName] is causing trouble
MFE_trade_good_events.9 = {
	type = country_event
	placement = scope:grain_state
	title = "MFE_trade_good_events.9.t"
	desc = "MFE_trade_good_events.9.d"
	flavor = "MFE_trade_good_events.9.f"
	duration = 3
	icon = "gfx/interface/icons/event_icons/event_trade.dds"
	event_image = {
		video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/vandalized_storefront"
	
	cooldown = { months = long_cooldown }
	trigger = {
		any_scope_building = {
			has_grain_pm = yes
			cash_reserves_ratio > 0.25
			weekly_profit < 1
			occupancy >= 0.1
			level >= 4
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				has_grain_pm = yes
				cash_reserves_ratio > 0.25
				weekly_profit < 1
				occupancy >= 0.1
				level >= 4
			}
			state = {
				save_scope_as = grain_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.9.a
		default_option = yes
		# Do they really need food to live?
		scope:grain_state = {
			add_modifier = {
				name = MFE_starving_state_mod
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = MFE_trade_good_events.9.b
		# Redirect some funds to [SCOPE.sS('grain_state').GetName]
		scope:grain_state = {
			add_modifier = {
				name = MFE_starving_state_aid_sent_mod
				months = normal_modifier_time
			}
		}
		add_modifier = {
			name = MFE_aiding_starving_state_mod
			months = normal_modifier_time
		}
	}
	option = {
		name = MFE_trade_good_events.9.c
		# Last I checked there was plenty of cake to eat in the shops of [SCOPE.sS('grain_state').GetName]
		trigger = {
			ruler = {
				OR = {
					has_trait = wrathful
					has_trait = cruel
				}
			}
		}
		scope:grain_state = {
			add_modifier = {
				name = MFE_low_food_cake_mod
				months = normal_modifier_time
			}
		}
	}
	
}

# The fish in [SCOPE.sS('fish_state').GetName] is far too fishy
MFE_trade_good_events.10 = {
	type = country_event
	placement = scope:fish_state
	title = "MFE_trade_good_events.10.t"
	desc = "MFE_trade_good_events.10.d"
	flavor = "MFE_trade_good_events.10.f"
	duration = 3
	icon = "gfx/event_icons/human_rights.dds"
	minor_left_icon = g:fish
	minor_right_icon = g:fish
	event_image = { trigger = { var:picture = 1 } texture = "gfx/event_pictures/paintings/harbors/Fitz_Henry_Lane_Castine_Harbor_and_Town.dds" }
	event_image = { trigger = { var:picture = 2 } texture = "gfx/event_pictures/paintings/harbors/San_Diego.dds" }
	event_image = { trigger = { var:picture = 3 } texture = "gfx/event_pictures/paintings/harbors/Stage_Fort_across_Gloucester_Harbor.dds" }
	event_image = { trigger = { var:picture = 4 } texture = "gfx/event_pictures/paintings/harbors/The_Golden_State_Entering_New_York_Harbor.dds" }
	event_image = { trigger = { var:picture = 5 } texture = "gfx/event_pictures/paintings/harbors/The_Paying_out_Machinery_in_the_Stern_of_the_Great_Eastern.dds" }
	event_image = { trigger = { var:picture = 6 } texture = "gfx/event_pictures/paintings/harbors/The_Russian_Ship_of_the_Line_Asow_and_a_Frigate_at_Anchor_in_the_Roads_of_Elsinore.dds" }
	event_image = { trigger = { var:picture = 7 } texture = "gfx/event_pictures/paintings/harbors/View_from_the_Quai_dOrsay.dds" }
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/steam_ship"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		any_scope_building = {
			is_building_type = building_fishing_wharf
			level >= 4
		}
	}
	
	immediate = {
		get_harbor_picture = yes
		random_scope_building = {
			limit = {
				is_building_type = building_fishing_wharf
				level >= 4
			}
			save_scope_as = fish_building
			state = {
				save_scope_as = fish_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.10.a
		default_option = yes
		# How can fish be too fishy?
		scope:fish_building = {
			add_modifier = {
				name = MFE_very_fishy_fish_mod
				months = long_modifier_time
			}
		}
	}
	
}

# Man O Wars in [SCOPE.sS('ship_state').GetName] are ready for war
MFE_trade_good_events.11 = {
	type = country_event
	placement = scope:ship_state
	title = "MFE_trade_good_events.11.t"
	desc = "MFE_trade_good_events.11.d"
	flavor = "MFE_trade_good_events.11.f"
	duration = 3
	icon = "gfx/event_icons/man_o_wars.dds"
	event_image = {
		video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/vandalized_storefront"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		is_at_war = no
		any_scope_building = {
			has_manowar_pm = yes
			level >= 3
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				has_manowar_pm = yes
				level >= 3
			}
			state = {
				save_scope_as = ship_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.11.a
		default_option = yes
	}
}

# Fine fabrics of [SCOPE.sS('fabric_state').GetName]
MFE_trade_good_events.12 = {
	type = country_event
	placement = scope:fabric_state
	title = "MFE_trade_good_events.12.t"
	desc = "MFE_trade_good_events.12.d"
	flavor = "MFE_trade_good_events.12.f"
	duration = 3
	icon = "gfx/event_icons/economic_dominance.dds"
	event_image = { trigger = { var:picture = 1 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_A_Storm_in_the_Rocky_Mountains_Mt_Rosalie.dds" }
	event_image = { trigger = { var:picture = 2 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_Puget_Sound_on_the_Pacific_Coast.dds" }
	event_image = { trigger = { var:picture = 3 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_Valley_of_the_Yosemite.dds" }
	event_image = { trigger = { var:picture = 4 } texture = "gfx/event_pictures/paintings/landscapes/Asher_Brown_Durand_The_Catskills.dds" }
	event_image = { trigger = { var:picture = 5 } texture = "gfx/event_pictures/paintings/landscapes/Asher_Durand_Kindred_Spirits.dds" }
	event_image = { trigger = { var:picture = 6 } texture = "gfx/event_pictures/paintings/landscapes/A_Bit_of_the_Roman_Aqueduct.dds" }
	event_image = { trigger = { var:picture = 7 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Cairn_in_Snow.dds" }
	event_image = { trigger = { var:picture = 8 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Der_einsame_Baum.dds" }
	event_image = { trigger = { var:picture = 9 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Morgen_im_Riesengebirge.dds" }
	event_image = { trigger = { var:picture = 10 } texture = "gfx/event_pictures/paintings/landscapes/Church_Heart_of_the_Andes.dds" }
	event_image = { trigger = { var:picture = 11 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Arch_of_Nero_1846.dds" }
	event_image = { trigger = { var:picture = 12 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Genesee_Scenery_1847.dds" }
	event_image = { trigger = { var:picture = 13 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Lake_with_Dead_Trees.dds" }
	event_image = { trigger = { var:picture = 14 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_The_Oxbow.dds" }
	event_image = { trigger = { var:picture = 15 } texture = "gfx/event_pictures/paintings/landscapes/Constable_Stratford_Mill.dds" }
	event_image = { trigger = { var:picture = 16 } texture = "gfx/event_pictures/paintings/landscapes/Frederic_Edwin_Church_The_Andes_of_Ecuador.dds" }
	event_image = { trigger = { var:picture = 17 } texture = "gfx/event_pictures/paintings/landscapes/Frogner_Manor_by_I_C_Dahl_for_Benjamin_Wegner.dds" }
	event_image = { trigger = { var:picture = 18 } texture = "gfx/event_pictures/paintings/landscapes/George_Inness_The_Lackawanna_Valley.dds" }
	event_image = { trigger = { var:picture = 19 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_Golding_Constables_Flower_Garden.dds" }
	event_image = { trigger = { var:picture = 20 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_The_Hay_Wain.dds" }
	event_image = { trigger = { var:picture = 21 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_Wivenhoe_Park.dds" }
	event_image = { trigger = { var:picture = 22 } texture = "gfx/event_pictures/paintings/landscapes/Karl_Friedrich_Schinkel_Gotischer_Dom_am_Wasser.dds" }
	event_image = { trigger = { var:picture = 23 } texture = "gfx/event_pictures/paintings/landscapes/Kensett_John_F_Lake_George.dds" }
	event_image = { trigger = { var:picture = 24 } texture = "gfx/event_pictures/paintings/landscapes/Landscape_with_Rainbow.dds" }
	event_image = { trigger = { var:picture = 25 } texture = "gfx/event_pictures/paintings/landscapes/Looking_Down_Yosemite_Valley.dds" }
	event_image = { trigger = { var:picture = 26 } texture = "gfx/event_pictures/paintings/landscapes/rockymountains.dds" }
	event_image = { trigger = { var:picture = 27 } texture = "gfx/event_pictures/paintings/landscapes/The_Subsiding_of_the_Waters_of_the_Deluge.dds" }
	event_image = { trigger = { var:picture = 28 } texture = "gfx/event_pictures/paintings/landscapes/The_Valley_of_Wyoming.dds" }
	event_image = { trigger = { var:picture = 29 } texture = "gfx/event_pictures/paintings/landscapes/The_White_Horse_by_John_Constable.dds" }
	event_image = { trigger = { var:picture = 30 } texture = "gfx/event_pictures/paintings/landscapes/Thomas_Cole_Il_Penseroso.dds" }
	event_image = { trigger = { var:picture = 31 } texture = "gfx/event_pictures/paintings/landscapes/Twilight_in_the_Wilderness_by_Frederic_Edwin_Church.dds" }
	event_image = { trigger = { var:picture = 32 } texture = "gfx/event_pictures/paintings/landscapes/View_of_Fort_Putnam.dds" }
	event_image = { trigger = { var:picture = 33 } texture = "gfx/event_pictures/paintings/landscapes/westernfrontier.dds" }
	event_image = { trigger = { var:picture = 34 } texture = "gfx/event_pictures/paintings/landscapes/yosemete.dds" }
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/europenorthamerica/gold_prospectors"
	
	cooldown = { months = long_cooldown }
	trigger = {
		any_scope_building = {
			has_good_fabric_pm = yes
			level >= 7
		}
	}
	
	immediate = {
		get_landscape_picture = yes
		random_scope_building = {
			limit = {
				has_good_fabric_pm = yes
				level >= 7
			}
			state = {
				save_scope_as = fabric_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.12.a
		default_option = yes
	}
}

# Fire in the sawmills of [SCOPE.sS('sawmill_fire_state').GetName]
MFE_trade_good_events.13 = {
	type = country_event
	placement = scope:sawmill_fire_state
	title = "MFE_trade_good_events.13.t"
	desc = "MFE_trade_good_events.13.d"
	flavor = "MFE_trade_good_events.13.f"
	duration = 3
	icon = "gfx/interface/icons/event_icons/event_fire.dds"
	event_image = {
		video = "gfx/event_pictures/unspecific_fire.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/destruction"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		any_scope_building = {
			has_active_production_method = pm_saw_mills
			level >= 5
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				has_active_production_method = pm_saw_mills
				level >= 5
			}
			state = {
				save_scope_as = sawmill_fire_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.13.a
		default_option = yes
	}
}

# Hardwood in [SCOPE.sS('hardwood_state').GetName] is extremely hard
MFE_trade_good_events.14 = {
	type = country_event
	placement = scope:hardwood_state
	title = "MFE_trade_good_events.14.t"
	desc = "MFE_trade_good_events.14.d"
	flavor = "MFE_trade_good_events.14.f"
	duration = 3
	icon = "gfx/event_icons/unit_attack.dds"
	event_image = {
		video = "gfx/event_pictures/europenorthamerica_gold_prospectors.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/europenorthamerica/gold_prospectors"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		any_scope_building = {
			has_active_production_method = pm_hardwood
			level >= 5
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				has_active_production_method = pm_hardwood
				level >= 5
			}
			state = {
				save_scope_as = hardwood_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.14.a
		default_option = yes
	}
}

# Entire Grocery chain robbed in grand organized crime in [SCOPE.sS('grocery_state').GetName]
MFE_trade_good_events.15 = {
	type = country_event
	placement = scope:grocery_state
	title = "MFE_trade_good_events.15.t"
	desc = "MFE_trade_good_events.15.d"
	flavor = "MFE_trade_good_events.15.f"
	duration = 3
	icon = "gfx/event_icons/supply_low.dds"
	event_image = {
		video = "gfx/event_pictures/unspecific_vandalized_storefront.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/vandalized_storefront"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		market_capital.market.mg:groceries = { 
			market_goods_pricier > 0.25
		}
		any_scope_building = {
			has_groceries_pm = yes
			poor_building_trigger = yes
			level >= 5
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				has_groceries_pm = yes
				poor_building_trigger = yes
				level >= 5
			}
			state = {
				save_scope_as = grocery_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.15.a
		default_option = yes
	}
}

# People in [SCOPE.sS('clothes_state').GetName] can't afford to wear clothes
MFE_trade_good_events.16 = {
	type = country_event
	placement = scope:clothes_state
	title = "MFE_trade_good_events.16.t"
	desc = "MFE_trade_good_events.16.d"
	flavor = "MFE_trade_good_events.16.f"
	duration = 3
	icon = "gfx/event_icons/anarchy.dds"
	event_image = {
		video = "gfx/event_pictures/europenorthamerica_rich_and_poor.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/europenorthamerica/rich_and_poor"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		market_capital.market.mg:clothes = { 
			market_goods_pricier > 0.25
			market_goods_has_goods_shortage = yes
			market_goods_shortage_ratio < 0.15
		}
		any_scope_building = {
			has_clothes_pm = yes
			poor_building_trigger = yes
			level >= 2
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				has_clothes_pm = yes
				poor_building_trigger = yes
				level >= 2
			}
			state = {
				save_scope_as = clothes_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.16.a
		default_option = yes
	}
}

# [SCOPE.GetRootScope.GetCountry.GetRuler.GetFullName] dies after sitting on chair while visiting the furniture factory in [SCOPE.sS('furniture_state').GetName]
MFE_trade_good_events.17 = {
	type = country_event
	placement = scope:furniture_state
	title = "MFE_trade_good_events.17.t"
	desc = "MFE_trade_good_events.17.d"
	flavor = "MFE_trade_good_events.17.f"
	duration = 3
	icon = "gfx/interface/icons/event_icons/event_skull.dds"
	event_image = {
		video = "gfx/event_pictures/unspecific_factory_closed.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/factory_closed"
	
	weight_multiplier = {
		base = -1
		modifier = {
			factor = -100
			ruler = {
				has_trait = cautious
			}
		}
		modifier = {
			factor = 2
			ruler = {
				has_trait = reckless
			}
		}
	}
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		capital = {
			exists = b:building_furniture_manufacturies
			b:building_furniture_manufacturies = {
				poor_building_trigger = yes
				level >= 1
			}
		}
	}
	
	immediate = {
		capital = {
			save_scope_as = furniture_state
		}
	}
	
	option = {
		name = MFE_trade_good_events.17.a
		default_option = yes
	}
}

# Extreme production of paper in [SCOPE.sS('paper_state').GetName] awes the world
MFE_trade_good_events.18 = {
	type = country_event
	placement = scope:paper_state
	title = "MFE_trade_good_events.18.t"
	desc = "MFE_trade_good_events.18.d"
	flavor = "MFE_trade_good_events.18.f"
	duration = 3
	icon = "gfx/event_icons/literature.dds"
	event_image = {
		video = "gfx/event_pictures/southamerica_factory_opening.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/southamerica/factory_opening"
	
	trigger = {
		NOT = { has_variable = paper_world_event_happened }
		any_scope_building = {
			is_building_type = building_paper_mills
			level >= 30
		}
	}
	
	immediate = {
		set_variable = paper_world_event_happened
		random_scope_building = {
			limit = {
				is_building_type = building_paper_mills
				level >= 30
			}
			save_scope_as = huge_paper_factory
			state = {
				save_scope_as = paper_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.18.a
		default_option = yes
	}
}

# The disappearing stars of [SCOPE.sS('power_state').GetName]
MFE_trade_good_events.19 = {
	type = country_event
	placement = scope:power_state
	title = "MFE_trade_good_events.19.t"
	desc = "MFE_trade_good_events.19.d"
	flavor = "MFE_trade_good_events.19.f"
	duration = 3
	icon = "gfx/event_icons/lightbulbs.dds"
	event_image = { trigger = { var:picture = 1 } texture = "gfx/event_pictures/paintings/cities/An_Overshot_Mill_in_Wales_James_Ward.dds" }
	event_image = { trigger = { var:picture = 2 } texture = "gfx/event_pictures/paintings/cities/Cole_Thomas_View_of_Florence_from_San_Miniato_1837.dds" }
	event_image = { trigger = { var:picture = 3 } texture = "gfx/event_pictures/paintings/cities/The_945_Accommodation.dds" }
	event_image = { trigger = { var:picture = 4 } texture = "gfx/event_pictures/paintings/cities/Thomas_Malton_the_Younger_High_Street_Oxford.dds" }
	event_image = { trigger = { var:picture = 5 } texture = "gfx/event_pictures/paintings/cities/Thomas_Malton_the_Younger_High_Street_Oxford.dds" }
	event_image = { trigger = { var:picture = 6 } texture = "gfx/event_pictures/paintings/cities/Venise_La_Piazetta.dds" }
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/africa/city_center"
	
	trigger = {
		NOT = { has_variable = electricity_stars_event_happened }
		any_scope_building = {
			is_building_type = building_power_plant
			level >= 5
		}
	}
	
	immediate = {
		get_city_picture = yes
		set_variable = electricity_stars_event_happened
		random_scope_building = {
			limit = {
				is_building_type = building_power_plant
				level >= 5
			}
			save_scope_as = power_plant
			state = {
				save_scope_as = power_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.19.a
		default_option = yes
	}
}

# Huge explosion in sulfur mines in [SCOPE.sS('sulfur_state').GetName] destroys the mine and kills workers
MFE_trade_good_events.20 = {
	type = country_event
	placement = scope:sulfur_state
	title = "MFE_trade_good_events.20.t"
	desc = "MFE_trade_good_events.20.d"
	flavor = "MFE_trade_good_events.20.f"
	duration = 3
	icon = "gfx/event_icons/raid_convoys.dds"
	event_image = {
		trigger = {
			OR = {
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		video = "gfx/event_pictures/middleeast_engineer_blueprint.bk2"
	}
	event_image = {
		trigger = {
			ruler.culture = {
				OR = {
					has_discrimination_trait = iberian_culture_group
					has_discrimination_trait = lusophone
					has_discrimination_trait = hispanophone
				}
			}
		}
		video = "gfx/event_pictures/southamerica_factory_opening.bk2"
	}
	event_image = { trigger = { ruler.culture = { has_culture_graphics = african } } video = "gfx/event_pictures/africa_construction_colony.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = asian } } video = "gfx/event_pictures/asia_farmers_market.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = european } } video = "gfx/event_pictures/europenorthamerica_london_center.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = mideast_indian } } video = "gfx/event_pictures/asia_farmers_market.bk2" }
	event_image = {
		# Default
		trigger = {
			NOR = {
				OR = {
					religion = rel:sunni
					religion = rel:shiite
				}
				ruler.culture = {
					OR = {
						has_culture_graphics = african
						has_culture_graphics = asian
						has_culture_graphics = european
						has_culture_graphics = mideast_indian
					}
				}
			}
		}
		video = "gfx/event_pictures/unspecific_gears_pistons.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/europenorthamerica/london_center"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		any_scope_building = {
			is_building_type = building_sulfur_mine
			mine_is_using_explosives = yes
			level >= 2
			level < 10
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				is_building_type = building_sulfur_mine
				mine_is_using_explosives = yes
				level >= 2
				level < 10
			}
			state = {
				save_scope_as = sulfur_state
				remove_building = building_sulfur_mine
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.20.a
		default_option = yes
	}
}

# Huge explosion in lead mines in [SCOPE.sS('lead_state').GetName] destroys the mine and kills workers
MFE_trade_good_events.21 = {
	type = country_event
	placement = scope:lead_state
	title = "MFE_trade_good_events.21.t"
	desc = "MFE_trade_good_events.21.d"
	flavor = "MFE_trade_good_events.21.f"
	duration = 3
	icon = "gfx/interface/icons/event_icons/event_skull.dds"
	event_image = {
		trigger = {
			OR = {
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		video = "gfx/event_pictures/middleeast_engineer_blueprint.bk2"
	}
	event_image = {
		trigger = {
			ruler.culture = {
				OR = {
					has_discrimination_trait = iberian_culture_group
					has_discrimination_trait = lusophone
					has_discrimination_trait = hispanophone
				}
			}
		}
		video = "gfx/event_pictures/southamerica_factory_opening.bk2"
	}
	event_image = { trigger = { ruler.culture = { has_culture_graphics = african } } video = "gfx/event_pictures/africa_construction_colony.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = asian } } video = "gfx/event_pictures/asia_farmers_market.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = european } } video = "gfx/event_pictures/europenorthamerica_london_center.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = mideast_indian } } video = "gfx/event_pictures/asia_farmers_market.bk2" }
	event_image = {
		# Default
		trigger = {
			NOR = {
				OR = {
					religion = rel:sunni
					religion = rel:shiite
				}
				ruler.culture = {
					OR = {
						has_culture_graphics = african
						has_culture_graphics = asian
						has_culture_graphics = european
						has_culture_graphics = mideast_indian
					}
				}
			}
		}
		video = "gfx/event_pictures/unspecific_gears_pistons.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/europenorthamerica/london_center"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		any_scope_building = {
			is_building_type = building_lead_mine
			mine_is_using_explosives = yes
			level >= 2
			level < 8
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				is_building_type = building_lead_mine
				mine_is_using_explosives = yes
				level >= 2
				level < 8
			}
			state = {
				save_scope_as = lead_state
				remove_building = building_sulfur_mine
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.21.a
		default_option = yes
	}
}

# Lead from the mines in [SCOPE.sS('lead_state').GetName] has shown up in the water
MFE_trade_good_events.22 = {
	type = country_event
	placement = scope:lead_state
	title = "MFE_trade_good_events.22.t"
	desc = "MFE_trade_good_events.22.d"
	flavor = "MFE_trade_good_events.22.f"
	duration = 3
	icon = "gfx/event_icons/icon_kill.dds"
	event_image = { trigger = { var:picture = 1 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_A_Storm_in_the_Rocky_Mountains_Mt_Rosalie.dds" }
	event_image = { trigger = { var:picture = 2 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_Puget_Sound_on_the_Pacific_Coast.dds" }
	event_image = { trigger = { var:picture = 3 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_Valley_of_the_Yosemite.dds" }
	event_image = { trigger = { var:picture = 4 } texture = "gfx/event_pictures/paintings/landscapes/Asher_Brown_Durand_The_Catskills.dds" }
	event_image = { trigger = { var:picture = 5 } texture = "gfx/event_pictures/paintings/landscapes/Asher_Durand_Kindred_Spirits.dds" }
	event_image = { trigger = { var:picture = 6 } texture = "gfx/event_pictures/paintings/landscapes/A_Bit_of_the_Roman_Aqueduct.dds" }
	event_image = { trigger = { var:picture = 7 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Cairn_in_Snow.dds" }
	event_image = { trigger = { var:picture = 8 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Der_einsame_Baum.dds" }
	event_image = { trigger = { var:picture = 9 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Morgen_im_Riesengebirge.dds" }
	event_image = { trigger = { var:picture = 10 } texture = "gfx/event_pictures/paintings/landscapes/Church_Heart_of_the_Andes.dds" }
	event_image = { trigger = { var:picture = 11 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Arch_of_Nero_1846.dds" }
	event_image = { trigger = { var:picture = 12 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Genesee_Scenery_1847.dds" }
	event_image = { trigger = { var:picture = 13 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Lake_with_Dead_Trees.dds" }
	event_image = { trigger = { var:picture = 14 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_The_Oxbow.dds" }
	event_image = { trigger = { var:picture = 15 } texture = "gfx/event_pictures/paintings/landscapes/Constable_Stratford_Mill.dds" }
	event_image = { trigger = { var:picture = 16 } texture = "gfx/event_pictures/paintings/landscapes/Frederic_Edwin_Church_The_Andes_of_Ecuador.dds" }
	event_image = { trigger = { var:picture = 17 } texture = "gfx/event_pictures/paintings/landscapes/Frogner_Manor_by_I_C_Dahl_for_Benjamin_Wegner.dds" }
	event_image = { trigger = { var:picture = 18 } texture = "gfx/event_pictures/paintings/landscapes/George_Inness_The_Lackawanna_Valley.dds" }
	event_image = { trigger = { var:picture = 19 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_Golding_Constables_Flower_Garden.dds" }
	event_image = { trigger = { var:picture = 20 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_The_Hay_Wain.dds" }
	event_image = { trigger = { var:picture = 21 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_Wivenhoe_Park.dds" }
	event_image = { trigger = { var:picture = 22 } texture = "gfx/event_pictures/paintings/landscapes/Karl_Friedrich_Schinkel_Gotischer_Dom_am_Wasser.dds" }
	event_image = { trigger = { var:picture = 23 } texture = "gfx/event_pictures/paintings/landscapes/Kensett_John_F_Lake_George.dds" }
	event_image = { trigger = { var:picture = 24 } texture = "gfx/event_pictures/paintings/landscapes/Landscape_with_Rainbow.dds" }
	event_image = { trigger = { var:picture = 25 } texture = "gfx/event_pictures/paintings/landscapes/Looking_Down_Yosemite_Valley.dds" }
	event_image = { trigger = { var:picture = 26 } texture = "gfx/event_pictures/paintings/landscapes/rockymountains.dds" }
	event_image = { trigger = { var:picture = 27 } texture = "gfx/event_pictures/paintings/landscapes/The_Subsiding_of_the_Waters_of_the_Deluge.dds" }
	event_image = { trigger = { var:picture = 28 } texture = "gfx/event_pictures/paintings/landscapes/The_Valley_of_Wyoming.dds" }
	event_image = { trigger = { var:picture = 29 } texture = "gfx/event_pictures/paintings/landscapes/The_White_Horse_by_John_Constable.dds" }
	event_image = { trigger = { var:picture = 30 } texture = "gfx/event_pictures/paintings/landscapes/Thomas_Cole_Il_Penseroso.dds" }
	event_image = { trigger = { var:picture = 31 } texture = "gfx/event_pictures/paintings/landscapes/Twilight_in_the_Wilderness_by_Frederic_Edwin_Church.dds" }
	event_image = { trigger = { var:picture = 32 } texture = "gfx/event_pictures/paintings/landscapes/View_of_Fort_Putnam.dds" }
	event_image = { trigger = { var:picture = 33 } texture = "gfx/event_pictures/paintings/landscapes/westernfrontier.dds" }
	event_image = { trigger = { var:picture = 34 } texture = "gfx/event_pictures/paintings/landscapes/yosemete.dds" }
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/europenorthamerica/gold_prospectors"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		any_scope_building = {
			is_building_type = building_lead_mine
			level >= 8
		}
	}
	
	immediate = {
		get_landscape_picture = yes
		random_scope_building = {
			limit = {
				is_building_type = building_lead_mine
				level >= 8
			}
			state = {
				save_scope_as = lead_state
			}
		}
	}
	option = {
		name = MFE_trade_good_events.22.a
		default_option = yes
	}
}

# The beginning of a new age...led by rubber
MFE_trade_good_events.23 = {
	type = country_event
	placement = scope:rubber_state
	title = "MFE_trade_good_events.23.t"
	desc = "MFE_trade_good_events.23.d"
	flavor = "MFE_trade_good_events.23.f"
	duration = 3
	icon = "gfx/event_icons/rubber.dds"
	minor_left_icon = g:rubber
	minor_right_icon = g:rubber
	event_image = { trigger = { var:picture = 1 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_A_Storm_in_the_Rocky_Mountains_Mt_Rosalie.dds" }
	event_image = { trigger = { var:picture = 2 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_Puget_Sound_on_the_Pacific_Coast.dds" }
	event_image = { trigger = { var:picture = 3 } texture = "gfx/event_pictures/paintings/landscapes/Albert_Bierstadt_Valley_of_the_Yosemite.dds" }
	event_image = { trigger = { var:picture = 4 } texture = "gfx/event_pictures/paintings/landscapes/Asher_Brown_Durand_The_Catskills.dds" }
	event_image = { trigger = { var:picture = 5 } texture = "gfx/event_pictures/paintings/landscapes/Asher_Durand_Kindred_Spirits.dds" }
	event_image = { trigger = { var:picture = 6 } texture = "gfx/event_pictures/paintings/landscapes/A_Bit_of_the_Roman_Aqueduct.dds" }
	event_image = { trigger = { var:picture = 7 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Cairn_in_Snow.dds" }
	event_image = { trigger = { var:picture = 8 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Der_einsame_Baum.dds" }
	event_image = { trigger = { var:picture = 9 } texture = "gfx/event_pictures/paintings/landscapes/Caspar_David_Friedrich_Morgen_im_Riesengebirge.dds" }
	event_image = { trigger = { var:picture = 10 } texture = "gfx/event_pictures/paintings/landscapes/Church_Heart_of_the_Andes.dds" }
	event_image = { trigger = { var:picture = 11 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Arch_of_Nero_1846.dds" }
	event_image = { trigger = { var:picture = 12 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Genesee_Scenery_1847.dds" }
	event_image = { trigger = { var:picture = 13 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_Lake_with_Dead_Trees.dds" }
	event_image = { trigger = { var:picture = 14 } texture = "gfx/event_pictures/paintings/landscapes/Cole_Thomas_The_Oxbow.dds" }
	event_image = { trigger = { var:picture = 15 } texture = "gfx/event_pictures/paintings/landscapes/Constable_Stratford_Mill.dds" }
	event_image = { trigger = { var:picture = 16 } texture = "gfx/event_pictures/paintings/landscapes/Frederic_Edwin_Church_The_Andes_of_Ecuador.dds" }
	event_image = { trigger = { var:picture = 17 } texture = "gfx/event_pictures/paintings/landscapes/Frogner_Manor_by_I_C_Dahl_for_Benjamin_Wegner.dds" }
	event_image = { trigger = { var:picture = 18 } texture = "gfx/event_pictures/paintings/landscapes/George_Inness_The_Lackawanna_Valley.dds" }
	event_image = { trigger = { var:picture = 19 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_Golding_Constables_Flower_Garden.dds" }
	event_image = { trigger = { var:picture = 20 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_The_Hay_Wain.dds" }
	event_image = { trigger = { var:picture = 21 } texture = "gfx/event_pictures/paintings/landscapes/John_Constable_Wivenhoe_Park.dds" }
	event_image = { trigger = { var:picture = 22 } texture = "gfx/event_pictures/paintings/landscapes/Karl_Friedrich_Schinkel_Gotischer_Dom_am_Wasser.dds" }
	event_image = { trigger = { var:picture = 23 } texture = "gfx/event_pictures/paintings/landscapes/Kensett_John_F_Lake_George.dds" }
	event_image = { trigger = { var:picture = 24 } texture = "gfx/event_pictures/paintings/landscapes/Landscape_with_Rainbow.dds" }
	event_image = { trigger = { var:picture = 25 } texture = "gfx/event_pictures/paintings/landscapes/Looking_Down_Yosemite_Valley.dds" }
	event_image = { trigger = { var:picture = 26 } texture = "gfx/event_pictures/paintings/landscapes/rockymountains.dds" }
	event_image = { trigger = { var:picture = 27 } texture = "gfx/event_pictures/paintings/landscapes/The_Subsiding_of_the_Waters_of_the_Deluge.dds" }
	event_image = { trigger = { var:picture = 28 } texture = "gfx/event_pictures/paintings/landscapes/The_Valley_of_Wyoming.dds" }
	event_image = { trigger = { var:picture = 29 } texture = "gfx/event_pictures/paintings/landscapes/The_White_Horse_by_John_Constable.dds" }
	event_image = { trigger = { var:picture = 30 } texture = "gfx/event_pictures/paintings/landscapes/Thomas_Cole_Il_Penseroso.dds" }
	event_image = { trigger = { var:picture = 31 } texture = "gfx/event_pictures/paintings/landscapes/Twilight_in_the_Wilderness_by_Frederic_Edwin_Church.dds" }
	event_image = { trigger = { var:picture = 32 } texture = "gfx/event_pictures/paintings/landscapes/View_of_Fort_Putnam.dds" }
	event_image = { trigger = { var:picture = 33 } texture = "gfx/event_pictures/paintings/landscapes/westernfrontier.dds" }
	event_image = { trigger = { var:picture = 34 } texture = "gfx/event_pictures/paintings/landscapes/yosemete.dds" }
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/europenorthamerica/gold_prospectors"
	
	trigger = {
		NOT = { has_variable = rubber_boom_started_var }
		year < 1870
		any_scope_building = {
			is_building_type = building_rubber_plantation
			level >= 3
		}
	}
	
	immediate = {
		get_landscape_picture = yes
		set_variable = rubber_boom_started_var
		random_scope_building = {
			limit = {
				is_building_type = building_rubber_plantation
				level >= 3
			}
			state = {
				save_scope_as = rubber_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.23.a
		default_option = yes
	}
}

# Black Gold of [SCOPE.sS('oil_state').GetName]
MFE_trade_good_events.24 = {
	type = country_event
	placement = scope:oil_state
	title = "MFE_trade_good_events.24.t"
	desc = "MFE_trade_good_events.24.d"
	flavor = "MFE_trade_good_events.24.f"
	duration = 3
	icon = "gfx/event_icons/oil.dds"
	minor_left_icon = g:oil
	minor_right_icon = g:oil
	event_image = {
		video = "gfx/event_pictures/middleeast_oil_derricks.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/middleeast/oil_derricks"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		any_scope_building = {
			is_building_type = building_oil_rig
			level >= 5
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				is_building_type = building_oil_rig
				level >= 5
			}
			state = {
				save_scope_as = oil_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.24.a
		default_option = yes
	}
}

# Steel Factory Destroying communities of [SCOPE.sS('steel_state').GetName]
MFE_trade_good_events.25 = {
	type = country_event
	placement = scope:steel_state
	title = "MFE_trade_good_events.25.t"
	desc = "MFE_trade_good_events.25.d"
	flavor = "MFE_trade_good_events.25.f"
	duration = 3
	icon = "gfx/event_icons/manufacturies.dds"
	event_image = {
		trigger = {
			OR = {
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		video = "gfx/event_pictures/middleeast_engineer_blueprint.bk2"
	}
	event_image = {
		trigger = {
			ruler.culture = {
				OR = {
					has_discrimination_trait = iberian_culture_group
					has_discrimination_trait = lusophone
					has_discrimination_trait = hispanophone
				}
			}
		}
		video = "gfx/event_pictures/southamerica_factory_opening.bk2"
	}
	event_image = { trigger = { ruler.culture = { has_culture_graphics = african } } video = "gfx/event_pictures/africa_construction_colony.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = asian } } video = "gfx/event_pictures/asia_farmers_market.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = european } } video = "gfx/event_pictures/europenorthamerica_london_center.bk2" }
	event_image = { trigger = { ruler.culture = { has_culture_graphics = mideast_indian } } video = "gfx/event_pictures/asia_farmers_market.bk2" }
	event_image = {
		# Default
		trigger = {
			NOR = {
				OR = {
					religion = rel:sunni
					religion = rel:shiite
				}
				ruler.culture = {
					OR = {
						has_culture_graphics = african
						has_culture_graphics = asian
						has_culture_graphics = european
						has_culture_graphics = mideast_indian
					}
				}
			}
		}
		video = "gfx/event_pictures/unspecific_gears_pistons.bk2"
	}
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/europenorthamerica/london_center"
	
	cooldown = { months = very_long_cooldown }
	trigger = {
		any_scope_building = {
			rich_building_trigger = yes
			is_building_type = building_steel_mills
			level >= 5
		}
	}
	
	immediate = {
		random_scope_building = {
			limit = {
				rich_building_trigger = yes
				is_building_type = building_steel_mills
				level >= 5
			}
			state = {
				save_scope_as = steel_state
			}
		}
	}
	
	option = {
		name = MFE_trade_good_events.25.a
		default_option = yes
	}
}
