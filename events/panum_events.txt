#################
# PANUM EVENTS  #
#################

#by Lord R & Marco Dandolo

###################

namespace = panum

###################

######JEs & HISTORICAL#######

#Panum 11: The Germ Theory

######PHYSICIAN ACTIONS######

#Panum 51: Describe Local Disease
#Panum 52: Describe Foreign Disease
#Panum 53: Treat Local Disease
#Panum 54: Treat Foreign Disease
#Panum 55: Event informing the player that foreign disease description is possible
#Panum 56: Event informing the player that foreign disease treatment is possible

######CHOLERA######

### Cholera Epidemic ###

#Panum 100: The Cholera Epidemic in YEAR
#Panum 101: Cholera in STATE
#Panum 102: Cholera spreads to COUNTRY
#Panum 103: Cholera in Factory
#Panum 104: CHARACTER gets Cholera!
#Panum 105: The Exodus of the Rich
#Panum 106: Opposition tries to exploit cholera
#Panum 107: Mass Graves
#Panum 108: Cholera Hospitals
#Panum 109: Public Panic
#Panum 110: Common Purpose
#Panum 111: The Horror
#Panum 112: A Glimmer of Hope
#Panum 120: Cholera epidemic over

### Cholera Description ###

#Panum 121: Cholera Hint (hidden)
#Panum 122: Cholera Incubation
#Panum 123: Cholera Symptoms
#Panum 124: Cholera Asiatica
#Panum 130: Cholera Description

### Generic unfinished/expedition events ###

#Panum 131: Unfinished Description
#Panum 132: News from the Medical Observation Expedition (hidden)
#Panum 133: Unfinished Description (Expedition)
#Panum 134: Unfinished Treatment
#Panum 135: News from the Medical Research Expedition (hidden)
#Panum 136: Unfinished Treatment (Expedition)
#Panum 137: Expedition wants to research Disease
#Panum 138: Disease Description (Expedition)
#Panum 139: Disease Treatment (Expedition)

### Cholera Treatment ###

#Panum 140: Cholera Treatment
#Panum 141: The Brewery
#Panum 142: Creatures of Habit
#Panum 143: The odd ones
#Panum 144: The filters
#Panum 145: Brown Water
#Panum 146: The First Death
#Panum 147: The Pit
#Panum 148: The Mansion
#Panum 149: The Tiny Death
#Panum 150: A Hands on Matter

#Panum 151: The Tool Factory
#Panum 152: The Jar
#Panum 153: Misplaced
#Panum 154: The Copycat killer
#Panum 155: The Miasma ...?
#Panum 156: Deconstructed
#Panum 157: Contamined

#Panum 161: A spot of gin
#Panum 162: Bottom's up
#Panum 163: A Map to success
#Panum 164: Fire and Fury
#Panum 165: The Heart of Infection
#Panum 166: The Power of Prayer
#Panum 167: Safe over sorry
#Panum 168: Restless Labor

######TUBERCULOSIS######

### Tuberculosis Epidemic ###

#Panum 200: Tuberculosis epidemic
#Panum 201: Tuberculosis in STATE
#Panum 202: A hereditary disease?
#Panum 203: Spitting on the streets
#Panum 204: ARTIST gets Tuberculosis
#Panum 205: Tuberculosis Sanatorium
#Panum 206: The disease of the proletarians
#Panum 207: Religious Initiative
#Panum 208: The white plague takes its toll
#Panum 220: Tuberculosis epidemic over

### Tuberculosis Description ###

#Panum 221: Tuberculosis Hint (hidden)
#Panum 222: Tuberculosis Incubation
#Panum 223: Tuberculosis Symptoms
#Panum 224: Tuberculosis and Scrofula
#Panum 230: Tuberculosis Description

### Tuberculosis Treatment ###

#Panum 240: Tuberculosis Treatment

######SMALLPOX######

### Smallpox Epidemic ###

#Panum 300: Smallpox epidemic
#Panum 301: Smallpox in STATE
#Panum 302: Smallpox spreads to COUNTRY
#Panum 303: Smallpox out of control
#Panum 320: Smallpox epidemic over

### Smallpox Description ###

#Panum 321: Smallpox Hint (hidden)
#Panum 322: Smallpox Incubation and Symptoms
#Panum 323: Chickenpox or Smallpox?
#Panum 324: The Difference between Measles and Smallpox
#Panum 330: Smallpox Description

### Smallpox Treatment ###

#Panum 340: Smallpox Treatment

######TYPHUS######

### Typhus Epidemic ###

#Panum 400: Typhus epidemic
#Panum 401: Typhus in STATE
#Panum 402: A disease of moral corruption?
#Panum 403: Quarantine
#Panum 404: Filthy Sheds
#Panum 405: Riots against Fever Sheds
#Panum 406: Unburied Corpses
#Panum 407: Typhus in Barracks
#Panum 408: Tormented in illness, not in war
#Panum 420: Typhus epidemic over

### Typhus Description ###

#Panum 421: Typhus Hint (hidden)
#Panum 422: Typhus Symptoms & Incubation
#Panum 423: The Camp Fever
#Panum 424: Typhus: Two Diseases in one?
#Panum 430: Typhus Description

### Typhus Treatment ###

#Panum 440: Typhus Treatment

######YELLOW FEVER######

### Yellow Fever Epidemic ###

#Panum 500: Yellow Fever epidemic
#Panum 501: Yellow Fever in STATE
#Panum 502: A contagious disease?
#Panum 503: Yellow Fever affects Plantations
#Panum 504: Evacuation
#Panum 505: Yellow Fever spreads to Barracks
#Panum 506: Sailor's sickness
#Panum 507: Black Vomit
#Panum 520: Yellow Fever epidemic over

### Yellow Fever Description ###

#Panum 521: Yellow Fever Hint (hidden)
#Panum 522: Two Courses of Yellow Fever
#Panum 523: Yellow Fever Seasons
#Panum 524: A Local Disease?
#Panum 530: Yellow Fever Description

### Yellow Fever Treatment ###

#Panum 540: Yellow Fever Treatment

#Panum 1000: Calls for Medical Reforms

### Medical System Expansion ###

#Panum 2101: Medical System Expanded
#Panum 2102: Specialist Clinic in STATE
#Panum 2103: Hospital in STATE

### Medical Research ###

#Panum 2201: Medical Research - Germ Theory

### Character Treatment ###

#Panum 2301: Successful Treatment
#Panum 2302: Neutral Treatment
#Panum 2303: Botched Treatment

#################################################################################

######JEs & HISTORICAL#######

#Panum 11: The Germ Theory
panum.11 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.11.t

	desc = panum.11.d

	flavor = panum.11.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_germ_theory.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
	}

	option = {	#
		name = panum.11.g
		panum_add_germ_theory_effect = yes
	}

	after = {
	}
}

######PHYSICIAN ACTIONS######

#Panum 51: Describe Local Disease
panum.51 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.51.t

	desc = panum.51.d

	flavor = panum.51.f
	
	duration = 3

	placement = scope:panum_disease_state

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cancellation_trigger = {
		panum_has_epidemic_trigger = no
	}

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		random_scope_state = {
			limit = {
				panum_state_has_epidemic_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#
		name = panum.51.g
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		panum_set_je_description_local_effect = yes
	}

	after = {
		remove_variable = panum_physician_action_active_var
	}
}

#Panum 52: Describe Foreign Disease
panum.52 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.52.t

	desc = panum.52.d

	flavor = panum.52.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cancellation_trigger = {
		panum_can_describe_foreign_disease_trigger = no
	}

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		if = {
			limit = {
				any_country = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_cholera
				}
			}
			random_country = {
				limit = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_cholera
				}
				save_scope_as = panum_cholera_country_scope
			}
		}
		if = {
			limit = {
				any_country = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_tuberculosis
				}
			}
			random_country = {
				limit = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_tuberculosis
				}
				save_scope_as = panum_tuberculosis_country_scope
			}
		}
		if = {
			limit = {
				any_country = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_smallpox
				}
			}
			random_country = {
				limit = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_smallpox
				}
				save_scope_as = panum_smallpox_country_scope
			}
		}
		if = {
			limit = {
				any_country = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_typhus
				}
			}
			random_country = {
				limit = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_typhus
				}
				save_scope_as = panum_typhus_country_scope
			}
		}
		if = {
			limit = {
				any_country = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_yellow_fever
				}
			}
			random_country = {
				limit = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_yellow_fever
				}
				save_scope_as = panum_yellow_fever_country_scope
			}
		}
	}

	option = {	#Cholera Country
		name = panum.52.g
		default_option =yes
		trigger = {
			exists = scope:panum_cholera_country_scope
			panum_has_cholera_description_trigger = no
		}
		add_journal_entry = {
			type = je_panum_cholera_description_expedition
			target = scope:panum_cholera_country_scope
		}
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		hidden_effect = {
			scope:panum_cholera_country_scope = {
				trigger_event = {
					id = panum.137
				}
			}
		}
	}

	option = {	#Tuberculosis Country
		name = panum.52.h
		trigger = {
			exists = scope:panum_tuberculosis_country_scope
			panum_has_tuberculosis_description_trigger = no
		}
		add_journal_entry = {
			type = je_panum_tuberculosis_description_expedition
			target = scope:panum_tuberculosis_country_scope
		}
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		hidden_effect = {
			scope:panum_tuberculosis_country_scope = {
				trigger_event = {
					id = panum.137
				}
			}
		}
	}

	option = {	#Smallpox Country
		name = panum.52.i
		trigger = {
			exists = scope:panum_smallpox_country_scope
			panum_has_smallpox_description_trigger = no
		}
		add_journal_entry = {
			type = je_panum_smallpox_description_expedition
			target = scope:panum_smallpox_country_scope
		}
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		hidden_effect = {
			scope:panum_smallpox_country_scope = {
				trigger_event = {
					id = panum.137
				}
			}
		}
	}

	option = {	#Typhus Country
		name = panum.52.j
		trigger = {
			exists = scope:panum_typhus_country_scope
			panum_has_typhus_description_trigger = no
		}
		add_journal_entry = {
			type = je_panum_typhus_description_expedition
			target = scope:panum_typhus_country_scope
		}
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		hidden_effect = {
			scope:panum_typhus_country_scope = {
				trigger_event = {
					id = panum.137
				}
			}
		}
	}

	option = {	#Yellow Fever Country
		name = panum.52.k
		trigger = {
			exists = scope:panum_yellow_fever_country_scope
			panum_has_yellow_fever_description_trigger = no
		}
		add_journal_entry = {
			type = je_panum_yellow_fever_description_expedition
			target = scope:panum_yellow_fever_country_scope
		}
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		hidden_effect = {
			scope:panum_yellow_fever_country_scope = {
				trigger_event = {
					id = panum.137
				}
			}
		}
	}

	after = {
		remove_variable = panum_physician_action_active_var
	}
}

#Panum 53: Treat Local Disease
panum.53 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.53.t

	desc = panum.53.d

	flavor = panum.53.f
	
	duration = 3

	placement = scope:panum_disease_state

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cancellation_trigger = {
		panum_has_epidemic_trigger = no
	}

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		random_scope_state = {
			limit = {
				panum_state_has_epidemic_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#
		name = panum.51.g
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		panum_set_je_treatment_local_effect = yes
	}

	after = {
		remove_variable = panum_physician_action_active_var
	}
}

#Panum 54: Treat Foreign Disease
panum.54 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.54.t

	desc = panum.54.d

	flavor = panum.52.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cancellation_trigger = {
		panum_can_find_foreign_treatment_trigger = no
	}

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		if = {
			limit = {
				any_country = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_cholera
				}
			}
			random_country = {
				limit = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_cholera
				}
				save_scope_as = panum_cholera_country_scope
			}
		}
		if = {
			limit = {
				any_country = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_tuberculosis
				}
			}
			random_country = {
				limit = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_tuberculosis
				}
				save_scope_as = panum_tuberculosis_country_scope
			}
		}
		if = {
			limit = {
				any_country = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_smallpox
				}
			}
			random_country = {
				limit = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_smallpox
				}
				save_scope_as = panum_smallpox_country_scope
			}
		}
		if = {
			limit = {
				any_country = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_typhus
				}
			}
			random_country = {
				limit = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_typhus
				}
				save_scope_as = panum_typhus_country_scope
			}
		}
		if = {
			limit = {
				any_country = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_yellow_fever
				}
			}
			random_country = {
				limit = {
					has_diplomatic_relevance = ROOT
					has_journal_entry = je_panum_yellow_fever
				}
				save_scope_as = panum_yellow_fever_country_scope
			}
		}
	}

	option = {	#Cholera Country
		name = panum.52.g
		default_option =yes
		trigger = {
			exists = scope:panum_cholera_country_scope
			panum_has_cholera_description_trigger = yes
			panum_has_cholera_treatment_trigger = no
		}
		add_journal_entry = {
			type = je_panum_cholera_treatment_expedition
			target = scope:panum_cholera_country_scope
		}
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		hidden_effect = {
			scope:panum_cholera_country_scope = {
				trigger_event = {
					id = panum.137
				}
			}
		}
	}

	option = {	#Tuberculosis Country
		name = panum.52.h
		trigger = {
			exists = scope:panum_tuberculosis_country_scope
			panum_has_tuberculosis_description_trigger = yes
			panum_has_tuberculosis_treatment_trigger = no
		}
		add_journal_entry = {
			type = je_panum_tuberculosis_treatment_expedition
			target = scope:panum_tuberculosis_country_scope
		}
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		hidden_effect = {
			scope:panum_tuberculosis_country_scope = {
				trigger_event = {
					id = panum.137
				}
			}
		}
	}

	option = {	#Smallpox Country
		name = panum.52.i
		trigger = {
			exists = scope:panum_smallpox_country_scope
			panum_has_smallpox_description_trigger = yes
			panum_has_smallpox_treatment_trigger = no
		}
		add_journal_entry = {
			type = je_panum_smallpox_treatment_expedition
			target = scope:panum_smallpox_country_scope
		}
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		hidden_effect = {
			scope:panum_smallpox_country_scope = {
				trigger_event = {
					id = panum.137
				}
			}
		}
	}

	option = {	#Typhus Country
		name = panum.52.j
		trigger = {
			exists = scope:panum_typhus_country_scope
			panum_has_typhus_description_trigger = yes
			panum_has_typhus_treatment_trigger = no
		}
		add_journal_entry = {
			type = je_panum_typhus_treatment_expedition
			target = scope:panum_typhus_country_scope
		}
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		hidden_effect = {
			scope:panum_typhus_country_scope = {
				trigger_event = {
					id = panum.137
				}
			}
		}
	}

	option = {	#Yellow Fever Country
		name = panum.52.k
		trigger = {
			exists = scope:panum_yellow_fever_country_scope
			panum_has_yellow_fever_description_trigger = yes
			panum_has_yellow_fever_treatment_trigger = no
		}
		add_journal_entry = {
			type = je_panum_yellow_fever_treatment_expedition
			target = scope:panum_yellow_fever_country_scope
		}
		var:panum_physician_var = {
			set_character_busy_and_immortal = yes
		}
		hidden_effect = {
			scope:panum_yellow_fever_country_scope = {
				trigger_event = {
					id = panum.137
				}
			}
		}
	}

	after = {
		remove_variable = panum_physician_action_active_var
	}
}

#Panum 55: Event informing the player that foreign disease description is possible
panum.55 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.55.t

	desc = panum.55.d

	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_cholera.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
	}

	immediate = {
	}

	option = {	#Send our Physician immediately!
		name = panum.55.g
		default_option = yes

		set_variable = panum_physician_action_active_var
		set_variable = panum_physician_describe_disease_foreign_active_var
		trigger_event = { 
			id = panum.52
			popup = yes
		}
	}

	option = {	#Not right now.
		name = panum.55.h
		default_option = yes
	}

	option = {	#Only fire notifications
		name = panum.55.h
		default_option = yes

		custom_tooltip = {
			text = panum_foreign_disease_research_only_notification_tt
			set_variable = panum_foreign_disease_research_only_notification_var
		}
	}

	option = {	#No more reminders
		name = panum.55.i
		default_option = yes

		custom_tooltip = {
			text = panum_foreign_disease_research_no_notification_tt
			set_variable = panum_foreign_disease_research_no_notification_var
		}
	}

	after = {
	}
}

#Panum 56: Event informing the player that foreign disease treatment is possible
panum.56 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.56.t

	desc = panum.56.d

	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_cholera.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
	}

	immediate = {
	}

	option = {	#Send our Physician immediately!
		name = panum.55.g
		default_option = yes

		set_variable = panum_physician_action_active_var
		set_variable = panum_physician_find_treatment_foreign_active_var
		trigger_event = { 
			id = panum.54
			popup = yes 
		}
	}

	option = {	#Not right now.
		name = panum.55.h
		default_option = yes
	}

	option = {	#Only fire notifications
		name = panum.55.i
		default_option = yes

		custom_tooltip = {
			text = panum_foreign_disease_research_only_notification_tt
			set_variable = panum_foreign_disease_research_only_notification_var
		}
	}

	option = {	#No more reminders
		name = panum.55.j
		default_option = yes

		custom_tooltip = {
			text = panum_foreign_disease_research_no_notification_tt
			set_variable = panum_foreign_disease_research_no_notification_var
		}
	}

	after = {
	}
}

#################################################################################

######CHOLERA######

#Panum 100: The Cholera Epidemic in YEAR
panum.100 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.100.t

	desc = panum.100.d

	flavor = panum.100.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_cholera.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
		panum_country_can_have_cholera_trigger = yes
	}

	immediate = {
		panum_set_number_of_cholera_states_effect = yes
		panum_set_cholera_state_effect = yes
	}

	option = {	#Cholera!
		name = panum.100.g
		default_option = yes
		panum_add_cholera_modifier_effect = yes
		add_journal_entry = {
			type = je_panum_cholera
		}
	}


	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			any_neighbouring_state = {
				panum_state_has_cholera_trigger = yes
			}
			factor = 100
		}
		modifier = {
			any_country  = {
				any_scope_state = {
					panum_state_has_cholera_trigger = yes
				}
				is_adjacent_to_country = ROOT
			}
			factor = 100
		}
		modifier = {
			has_journal_entry = je_famine
			factor = 5
		}
		modifier = {
			has_journal_entry = je_sol_1
			factor = 5
		}
		modifier = {
			any_scope_state = {
				total_urbanization > 2500
			}
			factor = 2
		}
		modifier = {
			any_scope_state = {
				total_urbanization > 2000
			}
			factor = 1.5
		}
		modifier = {
			any_scope_state = {
				total_urbanization > 1500
			}
			factor = 1.5
		}
		modifier = {
			any_scope_state = {
				total_urbanization > 1000
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				total_urbanization > 900
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				total_urbanization > 800
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				total_urbanization > 700
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				total_urbanization > 600
			}
			factor = 1.1
		}
		modifier = {
			has_law = law_type:law_no_health_system
			factor = 1.5
		}
		modifier = {
			has_law = law_type:law_charitable_health_system
			factor = 0.8
		}
		modifier = {
			has_law = law_type:law_private_health_insurance
			factor = 0.65
		}
		modifier = {
			has_law = law_type:law_public_health_insurance
			factor = 0.5
		}
		modifier = {
			has_technology_researched = modern_sewerage
			factor = 0.5
		}
	}
}

#Panum 101: Cholera in STATE
panum.101 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	trigger = {
		panum_state_can_have_cholera_trigger = yes
		NAND = {
			panum_has_cholera_treatment_trigger = yes
			var:panum_number_of_cholera_states_var <= 3
		}
	}

	immediate = {
		panum_add_number_of_cholera_states_effect = yes
		panum_set_cholera_state_effect = yes
		panum_add_cholera_modifier_effect = yes
		post_notification = panum_epidemic_spread_notification
	}


	after = {
	}
}

#Panum 102: Cholera spreads to COUNTRY
panum.102 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.102.t

	desc = panum.102.d

	flavor = panum.100.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_cholera.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		any_country = {
			panum_country_can_have_cholera_trigger = yes
			is_adjacent_to_country = ROOT
		}
	}

	immediate = {
		random_country = {
			limit = {
				panum_country_can_have_cholera_trigger = yes
				is_adjacent_to_country = ROOT
			}
			save_scope_as = panum_infected_country
		}
	}

	option = {	#This plague is completely out of control!
		name = panum.102.g
		default_option = yes
		add_modifier = {
			name = panum_useless_plague_fighter_modifier
			years = 2
		}
		scope:panum_infected_country = {
			trigger_event = {
				id = panum.100
			}
		}
	}


	after = {
	}
}

#Panum 103: Cholera in Factory
panum.103 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.103.t

	desc = panum.103.d

	flavor = panum.103.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_cholera.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		any_scope_state = {
			panum_state_has_cholera_trigger = yes
			any_scope_building = {
				is_building_group = bg_manufacturing
			}
			NOT = {
				any_scope_building = {
					is_building_group = bg_manufacturing
					has_modifier = panum_factory_quarantine_modifier
				}
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
				any_scope_building = {
					is_building_group = bg_manufacturing
				}
				NOT = {
					any_scope_building = {
						is_building_group = bg_manufacturing
						has_modifier = panum_factory_quarantine_modifier
					}
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Quarantine the Factories!
		name = panum.103.g
		default_option = yes
		scope:panum_disease_state = {
			every_scope_building = {
				limit = {
					is_building_group = bg_manufacturing
				}
				add_modifier = {
					name = panum_factory_quarantine_modifier
					days = 365
				}
			}
		}
	}

	option = {	#The factories must continue to run, at all costs!
		name = panum.103.h
		default_option = yes
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				pop_type = laborers
				percent = 0.005
			}
		}
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				pop_type = machinists
				percent = 0.003
			}
		}
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				pop_type = engineers
				percent = 0.001
			}
		}
	}


	after = {
	}
}

#Panum 104: CHARACTER gets Cholera!
panum.104 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.104.t

	desc = panum.104.d

	flavor = panum.104.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:disease_victim_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		any_scope_character = {
			NOR = {
				has_trait = panum_cholera
				has_variable = panum_cholera_immunity_var
			}
		}
	}

	immediate = {
		random_scope_character = {
			limit = {
				NOR = {
					has_trait = panum_cholera
					has_variable = panum_cholera_immunity_var
				}
			}
			save_scope_as = disease_victim_scope
		}
	}

	option = {	#Ensures the best possible treatment!
		name = panum.104.g
		default_option = yes
		add_modifier = {
			name = panum_personal_treatment_cost_modifier
		}
		scope:disease_victim_scope = {
			add_trait = panum_cholera
			add_modifier = {
				name = panum_personal_treatment_modifier
			}
		}
	}

	option = {	#Call Doctor Hasenbein!
		name = panum.104.h
		trigger = {
			has_variable = panum_physician_var
		}
		scope:disease_victim_scope = {
			set_variable = panum_cholera_immunity_var
		}
	}

	option = {	#He's not that important...
		name = panum.104.i
		scope:disease_victim_scope = {
			add_trait = panum_cholera
		}
		random_list = {
			3 = {}
			1 = { 
				scope:disease_victim_scope = {
					kill_character = yes
				}
			}
		}
	}


	after = {
	}
}

#Panum 105: The Exodus of the Rich
panum.105 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.105.t

	desc = panum.105.d

	flavor = panum.105.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_cholera.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		any_scope_state = {
			panum_state_has_cholera_trigger = yes
			NOR = {
				has_modifier = panum_the_great_equalizer_modifier
				has_modifier = panum_unjust_death_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
				NOT = {
					has_modifier = panum_the_great_equalizer_modifier
					has_modifier = panum_unjust_death_modifier
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Let them go.
		name = panum.105.g
		default_option = yes
		add_treasury = 100000
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_unjust_death_modifier
			}
			add_radicals_in_state = {
				value = 0.01
				strata = poor
			}
		}
	}

	option = {	#There is a motive we call him THE GREAT EQUALIZER.
		name = panum.105.h
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_the_great_equalizer_modifier
			}
		}
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				pop_type = capitalists
				percent = 0.003
			}
		}
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				pop_type = aristocrats
				percent = 0.003
			}
		}
	}


	after = {
	}
}

#Panum 106: Opposition tries to exploit cholera
panum.106 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.106.t

	desc = panum.106.d

	flavor = panum.106.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_opposition_leader

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 6
	}

	trigger = {
		
	}

	immediate = {
		random_interest_group = {
			limit = {
    			is_in_government = no
	        }
			save_scope_as = panum_opposition_ig
			leader = {
				save_scope_as = panum_opposition_leader
			}
		}
	}

	option = {	#You're right, we're wrong. Now let's fight the epidemic!
		name = panum.106.g
		scope:panum_opposition_ig = {
			add_modifier = {
				name = manzoni_political_tailwind_modifier
				years = 5
			}
		}
	}

	option = {	#This government has the situation perfectly under control.
		name = panum.106.h
		default_option = yes
		add_modifier = {
			name = panum_epidemic_lies_modifier
			years = 3
		}
	}


	after = {
	}
}

#Panum 107: Mass Graves
panum.107 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.107.t

	desc = panum.107.d

	flavor = panum.107.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_cholera.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		any_scope_state = {
			panum_state_has_cholera_trigger = yes
			NOR = {
				has_modifier = panum_mass_graves_modifier
				has_modifier = panum_slow_burials_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
				NOT = {
					has_modifier = panum_mass_graves_modifier
					has_modifier = panum_slow_burials_modifier
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#We have no time to waste with the funerals!
		name = panum.107.g
		default_option = yes
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_mass_graves_modifier
			}
			add_radicals_in_state = {
				value = 0.02
				strata = poor
			}
		}
	}

	option = {	#Everyone deserves a dignified burial.
		name = panum.107.h
		if = {
			limit = {
				is_player = yes
			}
			add_treasury = -100000
		}
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_slow_burials_modifier
			}
		}
	}


	after = {
	}
}

#Panum 108: Cholera Hospitals
panum.108 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.108.t

	desc = panum.108.d

	flavor = panum.108.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_cholera.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		NOT = {
			has_modifier = panum_cholera_hospitals_modifier
		}
		any_scope_state = {
			panum_state_has_cholera_trigger = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
				NOT = {
					has_modifier = panum_cholera_hospitals_modifier
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Beat them in the hospitals if you have to!
		name = panum.108.g
		default_option = yes
		add_modifier = {
			name = panum_cholera_hospitals_modifier
		}
		scope:panum_disease_state = {
			add_radicals_in_state = {
				value = 0.01
				strata = poor
			}
		}
		ai_chance = {
			base = 100 #AI will always take this option to get a Physician
		}
	}

	option = {	#You can't force these stubborn oxen to live.
		name = panum.108.h
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				strata = poor
				percent = 0.002
			}
		}
		ai_chance = {
			base = 0
		}
	}


	after = {
	}
}

#Panum 109: Public Panic
panum.109 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.109.t

	desc = panum.109.d

	flavor = panum.109.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_cholera.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 4
	}

	trigger = {
		any_scope_state = {
			panum_state_has_cholera_trigger = yes
			NOT = {
				has_modifier = panum_public_panic_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
				NOT = {
					has_modifier = panum_public_panic_modifier
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Damnable fear!
		name = panum.109.g
		default_option = yes
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_public_panic_modifier
			}
			add_radicals_in_state = {
				value = 0.03
			}
		}
	}

	after = {
	}
}

#Panum 110: Common Purpose
panum.110 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.110.t

	desc = panum.110.d

	flavor = panum.110.f
	
	duration = 3

	placement = scope:panum_disease_state

	gui_window = event_window_2char

	left_icon = scope:panum_opposition_leader
	right_icon = scope:panum_government_leader

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 8
	}

	trigger = {
		any_scope_state = {
			panum_state_has_cholera_trigger = yes
			has_modifier = panum_public_panic_modifier
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
				has_modifier = panum_public_panic_modifier
			}
			save_scope_as = panum_disease_state
		}
		random_interest_group = {
			limit = {
    			is_in_government = no
	        }
			save_scope_as = panum_opposition_ig
			leader = {
				save_scope_as = panum_opposition_leader
			}
		}
		random_interest_group = {
			limit = {
    			is_in_government = yes
	        }
			save_scope_as = panum_government_ig
			leader = {
				save_scope_as = panum_government_leader
			}
		}
	}

	option = {	#We stand united!
		name = panum.110.g
		default_option = yes
		scope:panum_disease_state = {
			remove_modifier = panum_public_panic_modifier
			add_loyalists_in_state = {
				value = 0.05
			}
		}
		scope:panum_opposition_ig = {
			add_modifier = {
				name = panum_common_purpose_modifier
				years = 3
			}
		}
		scope:panum_government_ig = {
			add_modifier = {
				name = panum_common_purpose_modifier
				years = 3
			}
		}
	}

	after = {
	}
}

#Panum 111: The Horror
panum.111 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.111.t

	desc = panum.111.d

	flavor = panum.111.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_cholera.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 4
	}

	trigger = {
		any_scope_state = {
			OR = {
				has_modifier = panum_epidemic_cholera_deadly_modifier
				has_modifier = panum_epidemic_cholera_severe_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				OR = {
					has_modifier = panum_epidemic_cholera_deadly_modifier
					has_modifier = panum_epidemic_cholera_severe_modifier
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#How many more dead?!
		name = panum.111.g
		default_option = yes
		if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_cholera_severe_modifier
				}
			}
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.0025
				}
			}
		}
		else = {
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.005
				}
			}
		}
	}

	after = {
	}
}

#Panum 112: A Glimmer of Hope
panum.112 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.112.t

	desc = panum.112.d

	flavor = panum.112.f
	
	duration = 3

	placement = scope:panum_disease_state

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_new_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 12
	}

	trigger = {
		panum_has_physician = no
		has_modifier = panum_cholera_hospitals_modifier
		any_scope_state = {
			panum_state_has_cholera_trigger = yes
		}
	}

	immediate = {
		create_new_physician_effect = yes
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Give him an official position immediately!
		name = panum.112.g
		default_option = yes
		panum_set_new_physician_as_physician_effect = yes
		ai_chance = {
			base = 100 #AI will always take the Physician
		}
	}

	option = {	#The doctor should train future generations to fight the next epidemic.
		name = panum.112.h
		panum_medium_add_technology = yes
		dubois_add_x_academy_progress = { AMOUNT = 30 }
		if = {
			limit = {
				panum_has_cholera_treatment_trigger = no
			}
			panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 3 }
		}

		panum_remove_new_physician_effect = yes
		ai_chance = {
			base = 0
		}
	}

	after = {
	}
}

#Panum 120: Cholera epidemic over
panum.120 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.120.t

	desc = panum.120.d

	flavor = panum.120.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_cholera.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
	}

	immediate = {
	}

	option = {	#But at what cost?
		name = panum.120.g
		default_option = yes
	}


	after = {
	}
}

#Panum 121: Cholera Hint (hidden)
panum.121 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	cooldown = {
		months = 1
	}

	immediate = {
		panum_add_x_cholera_description_clues_effect = { AMOUNT = 1 }
		post_notification = panum_description_progress_notification
	}
}

#Panum 122: Cholera Incubation
panum.122 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.122.t

	desc = panum.122.d

	flavor = panum.122.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_cholera_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 123: Cholera Symptoms
panum.123 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.123.t

	desc = panum.123.d

	flavor = panum.123.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_cholera_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 124: Cholera Asiatica
panum.124 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.124.t

	desc = panum.124.d

	flavor = panum.124.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Precisely observed.
		name = panum.124.g
		default_option = yes
		panum_add_x_cholera_description_clues_effect = { AMOUNT = 3 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 130: Cholera Description
#panum.130 = {
#	dlc = dlc_morgenrote
#
#	type = country_event
#
#	title = panum.138.t
#
#	desc = panum.138.d
#
#	flavor = panum.138.f
#	
#	duration = 3
#
#	gui_window = event_window_1char_tabloid
#
#	left_icon = scope:panum_physician_scope
#
#	icon = "gfx/interface/icons/event_icons/event_medicine.dds"
#
#	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
#
#	immediate = {
#		var:panum_physician_var = {
#			save_scope_as = panum_physician_scope
#		}
#		#Sets up a variable that sets the description title
#		set_variable = {
#			name = panum_description_title_randomizer_var
#			value = { 1 10 }
#		}
#		round_variable = {
#			name = panum_description_title_randomizer_var
#			nearest = 1
#		}
#	}
#
#	option = {	#Now we know the beast better.
#		name = panum.138.g
#		panum_add_cholera_description_effect = yes
#		var:panum_physician_var = {
#			set_character_busy_and_immortal = no
#		}
#	}
#
#	after = {
#		remove_variable = panum_description_title_randomizer_var
#		remove_variable = panum_disease_title_var
#	}
#}

#Panum 131: Unfinished Description
panum.131 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.131.t

	desc = panum.131.d

	flavor = panum.131.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
	}

	option = {	#Now we know the beast better.
		name = panum.131.g
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
	}
}

#Panum 132: News from the Medical Observation Expedition (hidden)
panum.132 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	immediate = {
		panum_add_description_expedition_clue_effect = yes
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				OR = {
					has_trait = dubois_naturalist
					has_trait = dubois_naturalist_experienced
					has_trait = dubois_naturalist_famous
				}
			}
			add = 1
		}
	}
}

#Panum 133: Unfinished Description (Expedition)
panum.133 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.133.t

	desc = panum.133.d

	flavor = panum.131.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
	}

	option = {	#Now we know the beast better.
		name = panum.131.g
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
	}
}

#Panum 134: Unfinished Treatment
panum.134 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.131.t

	desc = panum.134.d

	flavor = panum.134.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
	}

	option = {	#Now we know the beast better.
		name = panum.134.g
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
	}
}

#Panum 135: News from the Medical Research Expedition (hidden)
panum.135 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	immediate = {
		panum_add_treatment_expedition_clue_effect = yes
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				OR = {
					has_trait = dubois_naturalist
					has_trait = dubois_naturalist_experienced
					has_trait = dubois_naturalist_famous
				}
			}
			add = 1
		}
	}
}

#Panum 136: Unfinished Treatment (Expedition)
panum.136 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.133.t

	desc = panum.136.d

	flavor = panum.134.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
	}

	option = {	#Now we know the beast better.
		name = panum.134.g
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
	}
}

#Panum 137: Expedition wants to research Disease
panum.137 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.137.t

	desc = panum.137.d

	flavor = panum.137.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_clinic.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cancellation_trigger = {
		has_modifier = panum_foreign_medical_expedition_modifier
	}

	trigger = {
		NOT = {
			has_modifier = panum_foreign_medical_expedition_modifier
		}
	}

	immediate = {
	}

	option = {	#Welcome these brave men and women.
		name = panum.137.g
		add_modifier = {
			name = panum_foreign_medical_expedition_modifier
			months = 6
		}
	}

	after = {
	}
}

#Panum 138: Disease Description (Expedition)
panum.138 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.138.t

	desc = panum.138.d

	flavor = panum.138.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		#Sets up a variable that sets the description title
		set_variable = {
			name = panum_description_title_randomizer_var
			value = { 1 10 }
		}
		round_variable = {
			name = panum_description_title_randomizer_var
			nearest = 1
		}
	}

	option = {	#DISEASE is losing its horror.
		name = panum.138.g
		panum_add_disease_description_effect = yes
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
		remove_variable = panum_description_title_randomizer_var
		remove_variable = panum_disease_title_var
	}
}

#Panum 139: Disease Treatment (Expedition)
panum.139 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.139.t

	desc = panum.139.d

	flavor = panum.139.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		#Sets up a variable that sets the treatment title
		set_variable = {
			name = panum_treatment_title_randomizer_var
			value = { 1 10 }
		}
		round_variable = {
			name = panum_treatment_title_randomizer_var
			nearest = 1
		}
	}

	option = {	#DISEASE is losing its horror.
		name = panum.139.g
		panum_add_disease_treatment_effect = yes
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
		remove_variable = panum_treatment_title_randomizer_var
		remove_variable = panum_disease_title_var
	}
}

#Panum 140: Cholera Treatment
panum.140 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.140.t

	desc = panum.140.d

	flavor = panum.140.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		#Sets up a variable that sets the treatment title
		set_variable = {
			name = panum_treatment_title_randomizer_var
			value = { 1 10 }
		}
		round_variable = {
			name = panum_treatment_title_randomizer_var
			nearest = 1
		}
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Cholera is losing its horror.
		name = panum.140.g
		panum_add_cholera_treatment_effect = yes
		panum_add_x_germ_theory_clues_effect = { AMOUNT = 8 }
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
		if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_cholera_deadly_modifier
				}
			}
			scope:panum_disease_state = {
				remove_modifier = panum_epidemic_cholera_deadly_modifier
			}
		}
		if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_cholera_severe_modifier
				}
			}
			scope:panum_disease_state = {
				remove_modifier = panum_epidemic_cholera_severe_modifier
			}
		}
		if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_cholera_normal_modifier
				}
			}
			scope:panum_disease_state = {
				remove_modifier = panum_epidemic_cholera_normal_modifier
			}
		}
		if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_cholera_mild_modifier
				}
			}
			scope:panum_disease_state = {
				remove_modifier = panum_epidemic_cholera_mild_modifier
			}
		}
	}

	after = {
		remove_variable = panum_treatment_title_randomizer_var
		remove_variable = panum_disease_title_var
	}
}

### The Cholera Treatment Events were written by Caekdaemon ###

#Panum 141: The Brewery
panum.141 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.141.t

	desc = panum.141.d

	flavor = panum.141.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_1.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	option = {	#Precisely observed.
		name = panum.141.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 3 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 1
		}
	}
}

#Panum 142: Creatures of Habit
panum.142 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.142.t

	desc = panum.142.d

	flavor = panum.142.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_2.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.142.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 2 }
		panum_add_x_germ_theory_clues_effect = { AMOUNT = 1 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 1
		}
	}
}

#Panum 143: The odd ones
panum.143 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.143.t

	desc = panum.143.d

	flavor = panum.143.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_3.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	option = {	#Precisely observed.
		name = panum.143.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 2 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 1
		}
	}
}

#Panum 144: The filters
panum.144 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.144.t

	desc = panum.144.d

	flavor = panum.144.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_4.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.144.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 1 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 1
		}
	}
}

#Panum 145: Brown Water
panum.145 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.145.t

	desc = panum.145.d

	flavor = panum.145.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_5.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.145.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 1 }
	}

	option = {	#There has to be more to it.
		name = panum.145.h
		panum_add_x_germ_theory_clues_effect = { AMOUNT = 1 }
	}

	option = {	#There has to be more to it.
		name = panum.145.i
		theiler_add_x_cholera_pathogen_clues_effect = { AMOUNT = 1 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 1
		}
	}
}

#Panum 146: The First Death
panum.146 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.146.t

	desc = panum.146.d

	flavor = panum.146.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_1.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	option = {	#Precisely observed.
		name = panum.146.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 1 }
		random_list = {
			80 = {}
			20 = {
				var:panum_physician_var ?= {
					add_trait = alcoholic
				}
			}
		}
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 1
		}
	}
}

#Panum 147: The Pit
panum.147 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.147.t

	desc = panum.147.d

	flavor = panum.147.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_2.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	option = {	#Precisely observed.
		name = panum.147.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 1 }
	}

	option = {	#Precisely observed.
		name = panum.147.h
		default_option = yes
		panum_add_x_germ_theory_clues_effect = { AMOUNT = 1 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 1
		}
	}
}

#Panum 148: The Mansion
panum.148 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.148.t

	desc = panum.148.d

	flavor = panum.148.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_3.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.148.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 3 }
		panum_add_x_germ_theory_clues_effect = { AMOUNT = 1 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 1
		}
	}
}

#Panum 149: The Tiny Death
panum.149 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.149.t

	desc = panum.149.d

	flavor = panum.149.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_4.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.149.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 4 }
		panum_add_x_germ_theory_clues_effect = { AMOUNT = 2 }
	}

	option = {	#This discovery goes far beyond cholera.
		name = panum.149.h
		panum_add_x_germ_theory_clues_effect = { AMOUNT = 4 }
		theiler_add_x_cholera_pathogen_clues_effect = { AMOUNT = 2 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 1
		}
	}
}

#Panum 150: A Hands on Matter
panum.150 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.150.t

	desc = panum.150.d

	flavor = panum.150.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_5.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.150.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 1 }
		panum_add_x_germ_theory_clues_effect = { AMOUNT = 1 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 1
		}
	}
}

#Panum 151: The Tool Factory
panum.151 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.151.t

	desc = panum.151.d

	flavor = panum.151.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_1.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
		panum_has_miasma_theory_trigger = yes
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.151.g
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = -2 }
	}

	option = {	#Precisely observed.
		name = panum.151.h
		default_option = yes
		panum_add_x_germ_theory_clues_effect = { AMOUNT = -1 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 152: The Jar
panum.152 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.152.t

	desc = panum.152.d

	flavor = panum.152.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_2.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.152.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = -1 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 153: Misplaced
panum.153 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.153.t

	desc = panum.153.d

	flavor = panum.153.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_3.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.153.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = -1 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 154: The Copycat killer
panum.154 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.154.t

	desc = panum.154.d

	flavor = panum.154.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_4.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.154.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = -2 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 155: The Miasma ...?
panum.155 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.155.t

	desc = panum.155.d

	flavor = panum.155.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_5.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
		panum_has_miasma_theory_trigger = yes
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.155.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = -1 }
		panum_add_x_germ_theory_clues_effect = { AMOUNT = -3 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 156: Deconstructed
panum.156 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.156.t

	desc = panum.156.d

	flavor = panum.156.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_1.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.156.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = -1 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 157: Contamined
panum.157 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.157.t

	desc = panum.157.d

	flavor = panum.157.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_2.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
		NOT = {
			var:panum_physician_var ?= {
				has_trait = panum_cholera
			}
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.157.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = -1 }
		var:panum_physician_var = {
			add_trait = panum_cholera
		}
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 161: A spot of gin
panum.161 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.161.t

	desc = panum.161.d

	flavor = panum.161.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_1.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
		var:panum_physician_var ?= {
			has_trait = alcoholic
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.161.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 2 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 162: Bottom's up
panum.162 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.162.t

	desc = panum.162.d

	flavor = panum.162.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_2.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
		var:panum_physician_var ?= {
			has_trait = reckless
		}
		NOT = {
			var:panum_physician_var ?= {
				has_trait = panum_cholera
			}
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.162.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 4 }
		var:panum_physician_var = {
			add_trait = panum_cholera
		}
		random_list = {
			65 = {}
			35 = { 
				var:panum_physician_var = {
					kill_physician_effect = yes
				}
			}
		}
	}

	option = {	#Dissuade the doctor from this foolhardy maneuver!
		name = panum.162.h
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = -1 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 163: A Map to success
panum.163 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.163.t

	desc = panum.163.d

	flavor = panum.163.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_3.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
		var:panum_physician_var ?= {
			has_trait = meticulous
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.163.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 3 }
		panum_small_add_technology = yes
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 164: Fire and Fury
panum.164 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.164.t

	desc = panum.164.d

	flavor = panum.164.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_4.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
		var:panum_physician_var ?= {
			has_trait = wrathful
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.164.g
		default_option = yes
		random_list = {
			1 = { panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 1 } }
			1 = { panum_add_x_cholera_treatment_clues_effect = { AMOUNT = -1 } }
		}
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 165: The Heart of Infection
panum.165 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.165.t

	desc = panum.165.d

	flavor = panum.165.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_5.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
		var:panum_physician_var ?= {
			has_trait = brave
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.165.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 1 }
		panum_add_x_germ_theory_clues_effect = { AMOUNT = 1 }
		random_list = {
			90 = {}
			10 = { 
				var:panum_physician_var ?= {
					add_trait = panum_cholera
				}
			}
		}
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 166: The Power of Prayer
panum.166 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.166.t

	desc = {
		triggered_desc = {
			trigger = {
				OR = {
					religion = rel:protestant
					religion = rel:catholic
					religion = rel:orthodox
					religion = rel:oriental_orthodox
				}
			}
			desc = panum.166.d_christian
		}
		triggered_desc = {
			trigger = {
				OR = {
					religion = rel:sunni
					religion = rel:shiite
				}
			}
			desc = panum.166.d_muslim
		}
		triggered_desc = {
			trigger = {
				NOR = {
					religion = rel:protestant
					religion = rel:catholic
					religion = rel:orthodox
					religion = rel:oriental_orthodox
					religion = rel:sunni
					religion = rel:shiite
				}
			}
			desc = panum.166.d_other
		}
	}

	flavor = {
		triggered_desc = {
			trigger = {
				OR = {
					religion = rel:protestant
					religion = rel:catholic
					religion = rel:orthodox
					religion = rel:oriental_orthodox
				}
			}
			desc = panum.166.f_christian
		}
		triggered_desc = {
			trigger = {
				OR = {
					religion = rel:sunni
					religion = rel:shiite
				}
			}
			desc = panum.166.f_muslim
		}
		triggered_desc = {
			trigger = {
				NOR = {
					religion = rel:protestant
					religion = rel:catholic
					religion = rel:orthodox
					religion = rel:oriental_orthodox
					religion = rel:sunni
					religion = rel:shiite
				}
			}
			desc = panum.166.f_other
		}
	}
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_2.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
		var:panum_physician_var ?= {
			has_trait = pious
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}

	option = {	#Precisely observed.
		name = panum.166.g_christian
		trigger = {
			OR = {
				religion = rel:protestant
				religion = rel:catholic
				religion = rel:orthodox
				religion = rel:oriental_orthodox
			}
		}
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 2 }
	}

	option = {	#Precisely observed.
		name = panum.166.g_muslim
		trigger = {
			OR = {
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 2 }
	}

	option = {	#Precisely observed.
		name = panum.166.g_other
		trigger = {
			NOR = {
				religion = rel:protestant
				religion = rel:catholic
				religion = rel:orthodox
				religion = rel:oriental_orthodox
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 2 }
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 167: Safe over sorry
panum.167 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.167.t

	desc = panum.167.d

	flavor = panum.167.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_3.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
		var:panum_physician_var ?= {
			has_trait = cautious
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.167.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = -1 }
		var:panum_physician_var = {
			add_modifier = {
				name = panum_physician_health_bonus_modifier
				years = 2
			}
		}
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#Panum 168: Restless Labor
panum.168 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.168.t

	desc = panum.168.d

	flavor = panum.168.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_investigation_4.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2 #Should not happen again in this epidemic
	}

	trigger = {
		NOT = {
			has_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		}
		var:panum_physician_var ?= {
			has_trait = persistent
		}
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Precisely observed.
		name = panum.168.g
		default_option = yes
		panum_add_x_cholera_treatment_clues_effect = { AMOUNT = 1 }
		var:panum_physician_var = {
			add_modifier = {
				name = panum_physician_health_malus_modifier
				years = 2
			}
		}
	}

	after = {
		remove_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
	}
}

#################################################################################

######TUBERCULOSIS######

#Panum 200: Tuberculosis epidemic
panum.200 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.200.t

	desc = panum.200.d

	flavor = panum.200.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_tuberculosis.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
		panum_country_can_have_tuberculosis_trigger = yes
	}

	immediate = {
		panum_set_number_of_tuberculosis_states_effect = yes
		panum_set_tuberculosis_state_effect = yes
	}

	option = {	#Tuberculosis!
		name = panum.200.g
		default_option = yes
		panum_add_tuberculosis_modifier_effect = yes
		add_journal_entry = {
			type = je_panum_tuberculosis
		}
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			any_neighbouring_state = {
				panum_state_has_tuberculosis_trigger = yes
			}
			factor = 10
		}
		modifier = {
			has_journal_entry = je_famine
			factor = 5
		}
		modifier = {
			has_journal_entry = je_sol_1
			factor = 5
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 15
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 10
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 9
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 8
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 7
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 6
				}
			}
			factor = 1.1
		}
		modifier = {
			has_law = law_type:law_no_health_system
			factor = 1.5
		}
		modifier = {
			has_law = law_type:law_charitable_health_system
			factor = 0.8
		}
		modifier = {
			has_law = law_type:law_private_health_insurance
			factor = 0.65
		}
		modifier = {
			has_law = law_type:law_public_health_insurance
			factor = 0.5
		}
		modifier = {
			has_technology_researched = pasteurization
			factor = 0.1
		}
	}
}

#Panum 201: Tuberculosis in STATE
panum.201 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	trigger = {
		var:panum_number_of_tuberculosis_states_var <= 3
		panum_state_can_have_tuberculosis_trigger = yes
	}

	immediate = {
		panum_set_tuberculosis_state_effect = yes
		panum_add_number_of_tuberculosis_states_effect = yes
		panum_add_tuberculosis_modifier_effect = yes
		post_notification = panum_epidemic_spread_notification
	}

	after = {
	}
}

#Panum 202: A hereditary disease?
panum.202 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.202.t

	desc = panum.202.d

	flavor = panum.202.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_tuberculosis.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2
	}

	trigger = {
		NOT = {
			panum_has_tuberculosis_treatment_trigger = yes
		}
		any_scope_state = {
			panum_state_has_tuberculosis_trigger = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_tuberculosis_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#It is a hereditary disease and there is nothing we can do.
		name = panum.202.g
		default_option = yes
		random_list = {
			1 = {}
			1 = {
				scope:panum_disease_state = {
					kill_population_percent_in_state = {
						percent = 0.002
					}
				}
			}
		}
	}

	option = {	#It is a contagious disease and we must do everything we can to stop it from spreading!
		name = panum.202.h
		set_variable = {
			name = panum_tuberculosis_contagious_var
			years = 3
		}
		every_scope_state = {
			limit = {
				panum_state_has_tuberculosis_trigger = yes
			}
			add_modifier = {
				name = panum_tuberculosis_quarantine_modifier
			}
			add_radicals_in_state = {
				value = 0.01
			}
		}
	}


	after = {
	}
}

#Panum 203: Spitting on the streets
panum.203 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.203.t

	desc = panum.203.d

	flavor = panum.203.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_tuberculosis.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 5
	}

	trigger = {
		any_scope_state = {
			panum_state_has_tuberculosis_trigger = yes
			NOT = {
				has_modifier = panum_forbidden_spitting_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_tuberculosis_trigger = yes
				NOT = {
					has_modifier = panum_forbidden_spitting_modifier
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Ban this disgusting habit!
		name = panum.203.g
		default_option = yes
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_forbidden_spitting_modifier
				days = 100
			}
			add_radicals_in_state = {
				value = 0.01
				strata = poor
			}
		}
	}

	option = {	#Announce a draconian ban and make the evildoers pay!
		name = panum.203.h
		default_option = yes
		add_treasury = 100000
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_forbidden_spitting_modifier
				days = 365
			}
			add_radicals_in_state = {
				value = 0.02
				strata = poor
			}
		}
	}

	option = {	#Spitting is a human nature that cannot be banned.
		name = panum.203.i
		default_option = yes
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				strata = poor
				percent = 0.003
			}
		}
	}


	after = {
	}
}

#Panum 204: ARTIST gets Tuberculosis
panum.204 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.204.t

	desc = panum.204.d

	flavor = panum.204.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:disease_victim_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		OR = {
			AND = {
				has_variable = elgar_composer_var
				var:elgar_composer_var ?= {
					NOR = {
						has_trait = panum_tuberculosis
						has_variable = panum_tuberculosis_immunity_var
					}
				}
			}
			AND = {
				has_variable = manzoni_writer_var
				var:manzoni_writer_var ?= {
					NOR = {
						has_trait = panum_tuberculosis
						has_variable = panum_tuberculosis_immunity_var
					}
				}
			}
			AND = {
				has_variable = klimt_painter_var
				var:klimt_painter_var ?= {
					NOR = {
						has_trait = panum_tuberculosis
						has_variable = panum_tuberculosis_immunity_var
					}
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				has_variable = elgar_composer_var
				var:elgar_composer_var ?= {
					NOR = {
						has_trait = panum_tuberculosis
						has_variable = panum_tuberculosis_immunity_var
					}
				}
			}
			var:elgar_composer_var ?= {
				save_scope_as = disease_victim_scope
			}
		}
		else_if = {
			limit = {
				has_variable = manzoni_writer_var
				var:manzoni_writer_var ?= {
					NOR = {
						has_trait = panum_tuberculosis
						has_variable = panum_tuberculosis_immunity_var
					}
				}
			}
			var:manzoni_writer_var ?= {
				save_scope_as = disease_victim_scope
			}
		}
		else = {
			var:klimt_painter_var ?= {
				save_scope_as = disease_victim_scope
			}
		}
	}

	option = {	#Ensures the best possible treatment!
		name = panum.104.g
		default_option = yes
		add_modifier = {
			name = panum_personal_treatment_cost_modifier
		}
		scope:disease_victim_scope = {
			add_trait = panum_tuberculosis
			add_modifier = {
				name = panum_personal_treatment_modifier
			}
		}
	}

	option = {	#Call Doctor Hasenbein!
		name = panum.104.h
		trigger = {
			has_variable = panum_physician_var
		}
		scope:disease_victim_scope = {
			set_variable = panum_tuberculosis_immunity_var
		}
	}

	option = {	#Wouldn't that be an inspiring occasion for a requiem?
		name = panum.204.i
		trigger = {
			scope:disease_victim_scope = {
				has_variable = mr_is_composer_var
			}
		}
		scope:disease_victim_scope = {
			add_trait = panum_tuberculosis
		}
		elgar_add_x_music_tradition_unscaled_effect = { AMOUNT = 20 }
		composer_experience_gain_effect = { AMOUNT = 10 }
		random_list = {
			3 = {}
			1 = { 
				scope:disease_victim_scope = {
					kill_composer_effect = yes
				}
			}
		}
	}

	option = {	#But hasn't tuberculosis always been the subject of writers?
		name = panum.204.j
		trigger = {
			scope:disease_victim_scope = {
				has_variable = mr_is_writer_var
			}
		}
		scope:disease_victim_scope = {
			add_trait = panum_tuberculosis
		}
		manzoni_add_x_literary_tradition_unscaled_effect = { AMOUNT = 10 }
		writer_experience_gain_effect = { AMOUNT = 10 }
		random_list = {
			3 = {}
			1 = { 
				scope:disease_victim_scope = {
					kill_writer_effect = yes
				}
			}
		}
	}

	option = {	#But doesn't this very sickness encourage to visualize misery?
		name = panum.204.k
		trigger = {
			scope:disease_victim_scope = {
				has_variable = mr_is_painter_var
			}
		}
		scope:disease_victim_scope = {
			add_trait = panum_tuberculosis
		}
		klimt_add_x_painting_tradition_unscaled_effect = { AMOUNT = 15 }
		painter_experience_gain_effect = { AMOUNT = 10 }
		random_list = {
			3 = {}
			1 = { 
				scope:disease_victim_scope = {
					kill_painter_effect = yes
				}
			}
		}
	}


	after = {
	}
}

#Panum 205: Tuberculosis Sanatorium
panum.205 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.205.t

	desc = panum.205.d

	flavor = panum.205.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_tuberculosis.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 5
	}

	trigger = {
		NOT = {
			any_scope_state = {
				has_building = building_panum_tuberculosis_sanatorium
			}
		}
		any_scope_state = {
			panum_state_has_tuberculosis_trigger = yes
		}
		OR = {
			dubois_has_mountains = yes
			agassiz_has_terrain_mountains = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_tuberculosis_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
		if = {
			limit = {
				ROOT ?= c:SWI
				mr_country_owns_grisons_trigger = yes #Davos
			}
			random_scope_state = {
				limit = {
					mr_state_in_grisons_trigger = yes
				}
				save_scope_as = panum_davos_scope
			}
		}
		else_if = {
			limit = {
				OR = {
					ROOT ?= c:PRU
					ROOT ?= c:GER
				}
				any_scope_state = {
					state_region = s:STATE_SILESIA #Görbersdorf
				}
			}
			random_scope_state = {
				limit = {
					state_region = s:STATE_SILESIA
				}
				save_scope_as = panum_davos_scope
			}
		}
		else = {
			random_scope_state = {
				limit = {
					is_incorporated = yes
					OR = {
						has_state_trait = state_trait_scottish_highlands
						has_state_trait = state_trait_cascades
						has_state_trait = state_trait_sierra_nevada
						has_state_trait = state_trait_rocky_mountains
						has_state_trait = state_trait_sierra_madre_occidental
						has_state_trait = state_trait_sierra_madre_oriental
						has_state_trait = state_trait_central_american_cordilleras
						has_state_trait = state_trait_wasatch_range
						has_state_trait = state_trait_andes
						has_state_trait = state_trait_alps_mountains
						has_state_trait = state_trait_caucasus_mountains
						has_state_trait = state_trait_atlas_mountains
						has_state_trait = state_trait_zagros_mountains
						has_state_trait = state_trait_alborz_mountains
						has_state_trait = state_trait_baluchistan_mountains
						has_state_trait = state_trait_himalayas_mountains
						has_state_trait = state_trait_great_dividing_range
						has_state_trait = dubois_state_trait_mount_whitney
						has_state_trait = dubois_state_trait_citlaltepetl
						has_state_trait = dubois_state_trait_mount_logan
						has_state_trait = dubois_state_trait_mount_mckinley
						has_state_trait = dubois_state_trait_chimborazo
						has_state_trait = dubois_state_trait_illimani
						has_state_trait = dubois_state_trait_huascaran
						has_state_trait = dubois_state_trait_aconcagua
						has_state_trait = dubois_state_trait_aneto
						has_state_trait = dubois_state_trait_aiguille_verte
						#has_state_trait = dubois_state_trait_matterhorn
						has_state_trait = dubois_state_trait_dufourspitze
						has_state_trait = dubois_state_trait_shkara
						has_state_trait = dubois_state_trait_mount_cameroon
						has_state_trait = dubois_state_trait_mount_stanley
						has_state_trait = dubois_state_trait_batian
						has_state_trait = dubois_state_trait_kibo
						has_state_trait = dubois_state_trait_kaufmann_peak
						has_state_trait = dubois_state_trait_kabru
						has_state_trait = dubois_state_trait_kamet
						has_state_trait = dubois_state_trait_chogolisa
						#has_state_trait = dubois_state_trait_mount_everest
						has_state_trait = dubois_state_trait_mount_cook
						has_state_trait = dubois_state_trait_mount_wilhelm
					}
				}
				save_scope_as = panum_davos_scope
			}
		}
	}

	option = {	#Build a Sanatorium in STATE!
		name = panum.205.g
		default_option = yes
		if = {
			limit = {
				is_player = yes
			}
			add_treasury = -100000
		}
		scope:panum_davos_scope = {
			start_building_construction = building_panum_tuberculosis_sanatorium
		}

		ai_chance = {
			base = 80
		}
	}

	option = {	#This is all just luxurious charlatanry.
		name = panum.205.h

		ai_chance = {
			base = 20
			modifier = {
				trigger = {
					ROOT ?= c:SWI
				}
				add = -20
			}
		}
	}


	after = {
	}
}

#Panum 206: The disease of the proletarians
panum.206 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.206.t

	desc = panum.206.d

	flavor = panum.206.f
	
	duration = 3

	placement = scope:panum_disease_state

	gui_window = event_window_1char_tabloid

	left_icon = scope:union_leader

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 4
	}

	trigger = {
		any_scope_state = {
			panum_state_has_tuberculosis_trigger = yes
			NOT = {
				has_modifier = panum_help_against_tuberculosis_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_tuberculosis_trigger = yes
				NOT = {
					has_modifier = panum_help_against_tuberculosis_modifier
				}
			}
			save_scope_as = panum_disease_state
		}
		ig:ig_trade_unions = {
			save_scope_as = trade_unions_ig 
			leader = {
				save_scope_as = union_leader
			}
		}
	}

	option = {	#Maybe the poor should just wash themselves more?
		name = panum.206.g
		default_option = yes
		scope:trade_unions_ig = {
			add_modifier = {
				name = manzoni_political_tailwind_modifier
				years = 3
			}
		}
		scope:panum_disease_state = {
			add_radicals_in_state = {
				value = 0.01
				strata = poor
			}
		}
	}

	option = {	#Selective improvements in this area are warranted.
		name = panum.206.h
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_help_against_tuberculosis_modifier
			}
		}
	}

	option = {	#The question of health care is a national matter.
		name = panum.206.i
		every_interest_group = {
			limit = {
				law_stance = {
					law = law_type:law_public_health_insurance
					value > neutral
				}
			}
			add_modifier = {
				name = panum_supports_health_care_initiative_modifier
				years = 3
			}
			add_modifier = {
				name = manzoni_political_tailwind_modifier
				years = 3
			}
		}
		every_interest_group = {
			limit = {
				law_stance = {
					law = law_type:law_public_health_insurance
					value < neutral
				}
			}
			add_modifier = {
				name = panum_opposes_health_care_initiative_modifier
				years = 3
			}
		}
	}

	option = {	#Applause for this initiative!
		name = panum.206.j
		trigger = {
			scope:trade_unions_ig = {
				is_in_government = yes
			}
		}
		scope:trade_unions_ig = {
			add_modifier = {
				name = panum_praised_for_tuberculosis_initiative_modifier
				years = 3
			}
		}
	}


	after = {
	}
}

#Panum 207: Religious Initiative
panum.207 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.207.t

	desc = panum.207.d

	flavor = panum.207.f
	
	duration = 3

	placement = scope:panum_disease_state

	gui_window = event_window_1char_tabloid

	left_icon = scope:devout_leader

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 4
	}

	trigger = {
		any_scope_state = {
			panum_state_has_tuberculosis_trigger = yes
			NOT = {
				has_modifier = panum_tuberculosis_hospital_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_tuberculosis_trigger = yes
				NOT = {
					has_modifier = panum_tuberculosis_hospital_modifier
				}
			}
			save_scope_as = panum_disease_state
		}
		ig:ig_devout = {
			save_scope_as = devout_ig
			leader = {
				save_scope_as = devout_leader
			}
		}
	}

	option = {	#These storytellers are just trying to gain influence!
		name = panum.207.g
		default_option = yes
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				percent = 0.001
			}
		}
	}

	option = {	#Applause for this initiative!
		name = panum.206.j
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_tuberculosis_hospital_modifier
			}
		}
		scope:devout_ig = {
			add_modifier = {
				name = panum_praised_for_tuberculosis_initiative_modifier
				years = 3
			}
			add_modifier = {
				name = manzoni_political_tailwind_modifier
				years = 3
			}
		}
	}


	after = {
	}
}

#Panum 208: The white plague takes its toll
panum.208 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.208.t

	desc = panum.208.d

	flavor = panum.208.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_tuberculosis.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 6
	}

	trigger = {
		any_scope_state = {
			panum_state_has_tuberculosis_trigger = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_tuberculosis_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Will this never end?
		name = panum.208.g
		default_option = yes
		if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_tuberculosis_severe_modifier
				}
			}
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.003
				}
			}
		}
		else_if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_tuberculosis_normal_modifier
				}
			}
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.002
				}
			}
		}
		else = {
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.001
				}
			}
		}
	}

	after = {
	}
}

#Panum 209: The Tuberculosis Doctor
panum.209 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.209.t

	desc = panum.209.d

	flavor = panum.112.f
	
	duration = 3

	placement = scope:panum_disease_state

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_new_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 12
	}

	trigger = {
		panum_has_physician = no
		any_scope_state = {
			has_building = building_panum_tuberculosis_sanatorium
		}
		any_scope_state = {
			panum_state_has_tuberculosis_trigger = yes
		}
	}

	immediate = {
		create_new_physician_effect = yes
		random_scope_state = {
			limit = {
				panum_state_has_cholera_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Give him an official position immediately!
		name = panum.112.g
		default_option = yes
		panum_set_new_physician_as_physician_effect = yes
		ai_chance = {
			base = 100 #AI will always take the Physician
		}
	}

	option = {	#The doctor should train future generations to fight the next epidemic.
		name = panum.112.h
		panum_medium_add_technology = yes
		dubois_add_x_academy_progress = { AMOUNT = 30 }
		if = {
			limit = {
				panum_has_tuberculosis_treatment_trigger = no
			}
			panum_add_x_tuberculosis_treatment_clues_effect = { AMOUNT = 3 }
		}

		panum_remove_new_physician_effect = yes
		ai_chance = {
			base = 0
		}
	}

	after = {
	}
}

#Panum 220: Tuberculosis epidemic over
panum.220 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.220.t

	desc = panum.220.d

	flavor = panum.220.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_tuberculosis.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
	}

	immediate = {
	}

	option = {	#But at what cost?
		name = panum.120.g
		default_option = yes
	}


	after = {
	}
}

#Panum 221: Tuberculosis Hint (hidden)
panum.221 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	cooldown = {
		months = 1
	}

	immediate = {
		panum_add_x_tuberculosis_description_clues_effect = { AMOUNT = 1 }
		post_notification = panum_description_progress_notification
	}
}

#Panum 222: Tuberculosis Incubation
panum.222 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.222.t

	desc = panum.222.d

	flavor = panum.222.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_tuberculosis_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 223: Tuberculosis Symptoms
panum.223 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.223.t

	desc = panum.223.d

	flavor = panum.223.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_tuberculosis_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 224: Tuberculosis and Scrofula
panum.224 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.224.t

	desc = panum.224.d

	flavor = panum.224.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Precisely observed.
		name = panum.124.g
		default_option = yes
		panum_add_x_tuberculosis_description_clues_effect = { AMOUNT = 3 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 230: Tuberculosis Description
#panum.230 = {
#	dlc = dlc_morgenrote
#
#	type = country_event
#
#	title = panum.138.t
#
#	desc = panum.138.d
#
#	flavor = panum.138.f
#	
#	duration = 3
#
#	gui_window = event_window_1char_tabloid
#
#	left_icon = scope:panum_physician_scope
#
#	icon = "gfx/interface/icons/event_icons/event_medicine.dds"
#
#	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
#
#	immediate = {
#		var:panum_physician_var = {
#			save_scope_as = panum_physician_scope
#		}
#		#Sets up a variable that sets the description title
#		set_variable = {
#			name = panum_description_title_randomizer_var
#			value = { 1 10 }
#		}
#		round_variable = {
#			name = panum_description_title_randomizer_var
#			nearest = 1
#		}
#	}
#
#	option = {	#Now we know the beast better.
#		name = panum.138.g
#		panum_add_tuberculosis_description_effect = yes
#		var:panum_physician_var = {
#			set_character_busy_and_immortal = no
#		}
#	}
#
#	after = {
#		remove_variable = panum_description_title_randomizer_var
#		remove_variable = panum_disease_title_var
#	}
#}

#Panum 240: Tuberculosis Treatment
panum.240 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.140.t

	desc = panum.140.d

	flavor = panum.140.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		#Sets up a variable that sets the treatment title
		set_variable = {
			name = panum_treatment_title_randomizer_var
			value = { 1 10 }
		}
		round_variable = {
			name = panum_treatment_title_randomizer_var
			nearest = 1
		}
	}

	option = {	#Tuberculosis is losing its horror.
		name = panum.140.g
		panum_add_tuberculosis_treatment_effect = yes
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
		remove_variable = panum_treatment_title_randomizer_var
		remove_variable = panum_disease_title_var
	}
}

#################################################################################

######SMALLPOX######

#Panum 300: Smallpox epidemic
panum.300 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.300.t

	desc = panum.300.d

	flavor = panum.300.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_smallpox.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
		panum_country_can_have_smallpox_trigger = yes
	}

	immediate = {
		panum_set_number_of_smallpox_states_effect = yes
		panum_set_smallpox_state_effect = yes
	}

	option = {	#Smallpox!
		name = panum.300.g
		default_option = yes
		panum_add_smallpox_modifier_effect = yes
		add_journal_entry = {
			type = je_panum_smallpox
		}
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			any_neighbouring_state = {
				panum_state_has_smallpox_trigger = yes
			}
			factor = 10
		}
		modifier = {
			has_journal_entry = je_famine
			factor = 5
		}
		modifier = {
			has_journal_entry = je_sol_1
			factor = 5
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 15
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 10
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 9
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 8
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 7
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 6
				}
			}
			factor = 1.1
		}
		modifier = {
			has_law = law_type:law_no_health_system
			factor = 1.5
		}
		modifier = {
			has_law = law_type:law_charitable_health_system
			factor = 0.8
		}
		modifier = {
			has_law = law_type:law_private_health_insurance
			factor = 0.65
		}
		modifier = {
			has_law = law_type:law_public_health_insurance
			factor = 0.5
		}
		modifier = {
			has_technology_researched = panum_vaccination_tech
			factor = 0.1
		}
	}
}

#Panum 301: Smallpox in STATE
panum.301 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	trigger = {
		panum_state_can_have_smallpox_trigger = yes
		NAND = {
			panum_has_smallpox_treatment_trigger = yes
			var:panum_number_of_smallpox_states_var <= 3
		}
	}

	immediate = {
		panum_add_number_of_smallpox_states_effect = yes
		panum_set_smallpox_state_effect = yes
		panum_add_smallpox_modifier_effect = yes
		post_notification = panum_epidemic_spread_notification
	}

	after = {
	}
}

#Panum 302: Smallpox spreads to COUNTRY
panum.302 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.302.t

	desc = panum.302.d

	flavor = panum.300.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_smallpox.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		any_country = {
			panum_country_can_have_smallpox_trigger = yes
			is_adjacent_to_country = ROOT
		}
	}

	immediate = {
		random_country = {
			limit = {
				panum_country_can_have_smallpox_trigger = yes
				is_adjacent_to_country = ROOT
			}
			save_scope_as = panum_infected_country
		}
	}

	option = {	#This plague is completely out of control!
		name = panum.302.g
		default_option = yes
		add_modifier = {
			name = panum_useless_plague_fighter_modifier
			years = 2
		}
		scope:panum_infected_country = {
			trigger_event = {
				id = panum.300
			}
		}
	}


	after = {
	}
}

#Panum 303: Smallpox out of control
panum.303 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.303.t

	desc = panum.303.d

	flavor = panum.303.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_smallpox.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 6
	}

	trigger = {
		any_scope_state = {
			panum_state_has_smallpox_trigger = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_smallpox_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Is there no cure for this terrible illness?
		name = panum.303.g
		default_option = yes
		if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_smallpox_severe_modifier
				}
			}
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.003
				}
			}
		}
		else_if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_smallpox_normal_modifier
				}
			}
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.002
				}
			}
		}
		else = {
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.001
				}
			}
		}
	}


	after = {
	}
}

#Panum 320: Smallpox epidemic over
panum.320 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.320.t

	desc = panum.320.d

	flavor = panum.320.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_smallpox.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
	}

	immediate = {
	}

	option = {	#But at what cost?
		name = panum.120.g
		default_option = yes
	}


	after = {
	}
}

#Panum 321: Smallpox Hint (hidden)
panum.321 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	cooldown = {
		months = 1
	}

	immediate = {
		panum_add_x_smallpox_description_clues_effect = { AMOUNT = 1 }
		post_notification = panum_description_progress_notification
	}
}

#Panum 322: Smallpox Incubation and Symptoms
panum.322 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.322.t

	desc = panum.322.d

	flavor = panum.322.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_smallpox_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 323: Chickenpox or Smallpox?
panum.323 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.323.t

	desc = panum.323.d

	flavor = panum.323.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_smallpox_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 324: The Difference between Measles and Smallpox
panum.324 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.324.t

	desc = panum.324.d

	flavor = panum.324.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Precisely observed.
		name = panum.124.g
		default_option = yes
		panum_add_x_smallpox_description_clues_effect = { AMOUNT = 3 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 330: Smallpox Description
#panum.330 = {
#	dlc = dlc_morgenrote
#
#	type = country_event
#
#	title = panum.138.t
#
#	desc = panum.138.d
#
#	flavor = panum.138.f
#	
#	duration = 3
#
#	gui_window = event_window_1char_tabloid
#
#	left_icon = scope:panum_physician_scope
#
#	icon = "gfx/interface/icons/event_icons/event_medicine.dds"
#
#	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
#
#	immediate = {
#		var:panum_physician_var = {
#			save_scope_as = panum_physician_scope
#		}
#		#Sets up a variable that sets the description title
#		set_variable = {
#			name = panum_description_title_randomizer_var
#			value = { 1 10 }
#		}
#		round_variable = {
#			name = panum_description_title_randomizer_var
#			nearest = 1
#		}
#	}
#
#	option = {	#Now we know the beast better.
#		name = panum.138.g
#		panum_add_smallpox_description_effect = yes
#		var:panum_physician_var = {
#			set_character_busy_and_immortal = no
#		}
#	}
#
#	after = {
#		remove_variable = panum_description_title_randomizer_var
#		remove_variable = panum_disease_title_var
#	}
#}

#Panum 340: Smallpox Treatment
panum.340 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.140.t

	desc = panum.140.d

	flavor = panum.140.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		#Sets up a variable that sets the treatment title
		set_variable = {
			name = panum_treatment_title_randomizer_var
			value = { 1 10 }
		}
		round_variable = {
			name = panum_treatment_title_randomizer_var
			nearest = 1
		}
	}

	option = {	#Smallpox is losing its horror.
		name = panum.140.g
		panum_add_smallpox_treatment_effect = yes
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
		remove_variable = panum_treatment_title_randomizer_var
		remove_variable = panum_disease_title_var
	}
}

#################################################################################

######TYPHUS######

#Panum 400: Typhus epidemic
panum.400 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.400.t

	desc = panum.400.d

	flavor = panum.400.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_typhus.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
		panum_country_can_have_typhus_trigger = yes
	}

	immediate = {
		panum_set_typhus_state_effect = yes
	}

	option = {	#Typhus!
		name = panum.400.g
		default_option = yes
		panum_add_typhus_modifier_effect = yes
		add_journal_entry = {
			type = je_panum_typhus
		}
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			any_neighbouring_state  = {
				panum_state_has_typhus_trigger = yes
			}
			factor = 20
		}
		modifier = {
			has_journal_entry = je_famine
			factor = 5
		}
		modifier = {
			has_journal_entry = je_sol_1
			factor = 5
		}
		modifier = {
			any_scope_state = {
				devastation > 0.20
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				devastation > 0.25
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				devastation > 0.30
			}
			factor = 1.5
		}
		modifier = {
			any_scope_state = {
				devastation > 0.35
			}
			factor = 1.5
		}
		modifier = {
			any_scope_state = {
				devastation > 0.40
			}
			factor = 2
		}
		modifier = {
			any_scope_state = {
				devastation > 0.50
			}
			factor = 2
		}
		modifier = {
			has_law = law_type:law_no_health_system
			factor = 1.5
		}
		modifier = {
			has_law = law_type:law_charitable_health_system
			factor = 0.8
		}
		modifier = {
			has_law = law_type:law_private_health_insurance
			factor = 0.65
		}
		modifier = {
			has_law = law_type:law_public_health_insurance
			factor = 0.5
		}
		modifier = {
			has_technology_researched = antibiotics
			factor = 0.1
		}
	}
}

#Panum 401: Typhus in STATE
panum.401 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	trigger = {
		panum_state_can_have_typhus_trigger = yes
	}

	immediate = {
		panum_set_typhus_state_effect = yes
		panum_add_typhus_modifier_effect = yes
		post_notification = panum_epidemic_spread_notification
	}

	after = {
	}
}

#Panum 402: A disease of moral corruption?
panum.402 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.402.t

	desc = panum.402.d

	flavor = panum.402.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_typhus.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2
	}

	trigger = {
		NOT = {
			panum_has_typhus_treatment_trigger = yes
		}
		any_scope_state = {
			panum_state_has_typhus_trigger = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_typhus_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#There is a reason why typhus primarily affects criminals, prostitutes and immoral soldiers.
		name = panum.402.g
		default_option = yes
		random_list = {
			1 = {}
			1 = {
				scope:panum_disease_state = {
					kill_population_percent_in_state = {
						percent = 0.001
					}
				}
			}
		}
	}

	option = {	#It probably matters less what these people are than where they live.
		name = panum.402.h
		scope:panum_disease_state = {
			add_radicals_in_state = {
				strata = rich
				value = 0.05
			}
			add_radicals_in_state = {
				strata = middle
				value = 0.03
			}
			add_loyalists_in_state = {
				strata = poor
				value = 0.01
			}
		}
	}


	after = {
	}
}

#Panum 403: Quarantine
panum.403 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.403.t

	desc = panum.403.d

	flavor = panum.403.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_typhus.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2
	}

	trigger = {
		NOT = {
			panum_has_typhus_treatment_trigger = yes
		}
		any_scope_state = {
			panum_state_has_typhus_trigger = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_typhus_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#The whole area should be quarantined.
		name = panum.403.g
		scope:panum_disease_state = {
			add_radicals_in_state = {
				strata = rich
				value = 0.03
			}
			add_radicals_in_state = {
				strata = middle
				value = 0.02
			}
			add_modifier = {
				name = panum_typhus_quarantine_modifier
			}
		}
	}

	option = {	#Take the typhus sufferers to special houses.
		name = panum.403.h
		default_option = yes
		scope:panum_disease_state = {
			add_loyalists_in_state = {
				strata = rich
				value = 0.03
			}
			add_loyalists_in_state = {
				strata = middle
				value = 0.02
			}
			add_radicals_in_state = {
				strata = poor
				value = 0.01
			}
			add_modifier = {
				name = panum_typhus_fever_sheds_modifier
			}
		}
	}

	option = {	#Typhus is not a contagious disease, so quarantine makes no sense.
		name = panum.403.i
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				strata = poor
				percent = 0.005
			}
		}
	}


	after = {
	}
}

#Panum 404: Filthy Sheds
panum.404 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.404.t

	desc = panum.404.d

	flavor = panum.404.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_typhus.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		NOT = {
			panum_has_typhus_treatment_trigger = yes
		}
		any_scope_state = {
			panum_state_has_typhus_trigger = yes
			has_modifier = panum_typhus_fever_sheds_modifier
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_typhus_trigger = yes
				has_modifier = panum_typhus_fever_sheds_modifier
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#We can't risk more people becoming infected.
		name = panum.404.g
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_typhus_rigid_rules_modifier
			}
			add_radicals_in_state = {
				strata = poor
				value = 0.01
			}
		}
	}

	option = {	#Improve the situation of typhus sufferers and provide medical help.
		name = panum.404.h
		default_option = yes
		add_modifier = {
			name = panum_typhus_fever_sheds_help_modifier
		}
		scope:panum_disease_state = {
			add_loyalists_in_state = {
				strata = poor
				value = 0.01
			}
			random_list = {
				1 = {}
				1 = {
					scope:panum_disease_state = {
						kill_population_percent_in_state = {
							percent = 0.001
						}
					}
				}
			}
		}
	}

	option = {	#Dismantle these inhumane houses!
		name = panum.404.i
		scope:panum_disease_state = {
			remove_modifier = panum_typhus_fever_sheds_modifier
			kill_population_percent_in_state = {
				percent = 0.002
			}
			add_radicals_in_state = {
				strata = rich
				value = 0.02
			}
			add_radicals_in_state = {
				strata = middle
				value = 0.02
			}
			add_loyalists_in_state = {
				strata = poor
				value = 0.02
			}
		}
	}


	after = {
	}
}

#Panum 405: Riots against Fever Sheds
panum.405 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.405.t

	desc = panum.405.d

	flavor = panum.405.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_typhus.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		NOT = {
			panum_has_typhus_treatment_trigger = yes
		}
		any_scope_state = {
			panum_state_has_typhus_trigger = yes
			has_modifier = panum_typhus_fever_sheds_modifier
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_typhus_trigger = yes
				has_modifier = panum_typhus_fever_sheds_modifier
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#This barbarism has no place in our country!
		name = panum.405.g
		default_option = yes
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_additional_fever_shed_protection_modifier
			}
		}
	}

	option = {	#They die either way.
		name = panum.405.h
		change_infamy = 1
		scope:panum_disease_state = {
			remove_modifier = panum_typhus_fever_sheds_modifier
			kill_population_percent_in_state = {
				strata = poor
				percent = 0.001
			}
		}
	}


	after = {
	}
}

#Panum 406: Unburied Corpses
panum.406 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.406.t

	desc = panum.406.d

	flavor = panum.406.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_typhus.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		any_scope_state = {
			panum_state_has_typhus_trigger = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_typhus_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Use all available means to prevent this problem from becoming overwhelming.
		name = panum.406.g
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_additional_funeral_aids_modifier
			}
		}
	}

	option = {	#Dig the usual mass graves.
		name = panum.406.h
		default_option = yes
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_mass_graves_modifier
			}
			add_radicals_in_state = {
				value = 0.01
				strata = poor
			}
		}
	}

	option = {	#Our capacities are exhausted, you have to arrange things yourself!
		name = panum.406.i
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				strata = poor
				percent = 0.005
			}
		}
	}


	after = {
	}
}

#Panum 407: Typhus in Barracks
panum.407 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.407.t

	desc = panum.407.d

	flavor = panum.407.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_typhus.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 2
	}

	trigger = {
		any_scope_state = {
			panum_state_has_typhus_trigger = yes
			has_building = building_barracks
			NOT = {
				any_scope_building = {
					has_modifier = panum_typhus_barracks_modifier
				}
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_typhus_trigger = yes
				has_building = building_barracks
				NOT = {
					any_scope_building = {
						has_modifier = panum_typhus_barracks_modifier
					}
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#No! They were destined for an honorable death on the battlefield!
		name = panum.407.g
		default_option = yes
		scope:panum_disease_state = {
			every_scope_building = {
				limit = {
					is_building_group = bg_army
				}
				add_modifier = {
					name = panum_typhus_barracks_modifier
				}
			}
		}
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				pop_type = soldiers
				percent = 0.003
			}
			kill_population_percent_in_state = {
				pop_type = officers
				percent = 0.001
			}
		}
	}


	after = {
	}
}

#Panum 408: Tormented in illness, not in war
panum.408 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.408.t

	desc = panum.408.d

	flavor = panum.408.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_typhus.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 4
	}

	trigger = {
		any_scope_state = {
			panum_state_has_typhus_trigger = yes
			any_scope_building = {
				has_modifier = panum_typhus_barracks_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_typhus_trigger = yes
				any_scope_building = {
					has_modifier = panum_typhus_barracks_modifier
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Terrible!
		name = panum.408.g
		default_option = yes
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				pop_type = soldiers
				percent = 0.03
			}
			kill_population_percent_in_state = {
				pop_type = officers
				percent = 0.01
			}
		}
	}


	after = {
	}
}

#Panum 420: Typhus epidemic over
panum.420 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.420.t

	desc = panum.420.d

	flavor = panum.420.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_typhus.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
	}

	immediate = {
	}

	option = {	#But at what cost?
		name = panum.120.g
		default_option = yes
	}


	after = {
	}
}

#Panum 421: Typhus Hint (hidden)
panum.421 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	cooldown = {
		months = 1
	}

	immediate = {
		panum_add_x_typhus_description_clues_effect = { AMOUNT = 1 }
		post_notification = panum_description_progress_notification
	}
}

#Panum 422: Typhus Symptoms & Incubation
panum.422 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.422.t

	desc = panum.422.d

	flavor = panum.422.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_typhus_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 423: The Camp Fever
panum.423 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.423.t

	desc = panum.423.d

	flavor = panum.423.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_typhus_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 424: Typhus: Two Diseases in one?
panum.424 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.424.t

	desc = panum.424.d

	flavor = panum.424.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Precisely observed.
		name = panum.124.g
		default_option = yes
		panum_add_x_typhus_description_clues_effect = { AMOUNT = 3 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 430: Typhus Description
#panum.430 = {
#	dlc = dlc_morgenrote
#
#	type = country_event
#
#	title = panum.138.t
#
#	desc = panum.138.d
#
#	flavor = panum.138.f
#	
#	duration = 3
#
#	gui_window = event_window_1char_tabloid
#
#	left_icon = scope:panum_physician_scope
#
#	icon = "gfx/interface/icons/event_icons/event_medicine.dds"
#
#	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
#
#	immediate = {
#		var:panum_physician_var = {
#			save_scope_as = panum_physician_scope
#		}
#		#Sets up a variable that sets the description title
#		set_variable = {
#			name = panum_description_title_randomizer_var
#			value = { 1 10 }
#		}
#		round_variable = {
#			name = panum_description_title_randomizer_var
#			nearest = 1
#		}
#	}
#
#	option = {	#Now we know the beast better.
#		name = panum.138.g
#		panum_add_typhus_description_effect = yes
#		var:panum_physician_var = {
#			set_character_busy_and_immortal = no
#		}
#	}
#
#	after = {
#		remove_variable = panum_description_title_randomizer_var
#		remove_variable = panum_disease_title_var
#	}
#}

#Panum 440: Typhus Treatment
panum.440 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.140.t

	desc = panum.140.d

	flavor = panum.140.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		#Sets up a variable that sets the treatment title
		set_variable = {
			name = panum_treatment_title_randomizer_var
			value = { 1 10 }
		}
		round_variable = {
			name = panum_treatment_title_randomizer_var
			nearest = 1
		}
	}

	option = {	#Typhus is losing its horror.
		name = panum.140.g
		panum_add_typhus_treatment_effect = yes
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
		remove_variable = panum_treatment_title_randomizer_var
		remove_variable = panum_disease_title_var
	}
}

#################################################################################

######YELLOW FEVER######

#Panum 500: Yellow Fever epidemic
panum.500 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.500.t

	desc = panum.500.d

	flavor = panum.500.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_yellow_fever.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
		panum_country_can_have_yellow_fever_trigger = yes
	}

	immediate = {
		panum_set_number_of_yellow_fever_states_effect = yes
		panum_set_yellow_fever_state_effect = yes
	}

	option = {	#Yellow Fever
		name = panum.500.g
		default_option = yes
		panum_add_yellow_fever_modifier_effect = yes
		add_journal_entry = {
			type = je_panum_yellow_fever
		}
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			any_neighbouring_state  = {
				panum_state_has_yellow_fever_trigger = yes
			}
			factor = 5
		}
		modifier = {
			has_journal_entry = je_famine
			factor = 5
		}
		modifier = {
			has_journal_entry = je_sol_1
			factor = 5
		}
		modifier = {
			any_scope_state = {
				devastation > 0.20
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				devastation > 0.25
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				devastation > 0.30
			}
			factor = 1.5
		}
		modifier = {
			any_scope_state = {
				devastation > 0.35
			}
			factor = 1.5
		}
		modifier = {
			any_scope_state = {
				devastation > 0.40
			}
			factor = 2
		}
		modifier = {
			any_scope_state = {
				devastation > 0.50
			}
			factor = 2
		}
		modifier = {
			has_law = law_type:law_no_health_system
			factor = 1.5
		}
		modifier = {
			has_law = law_type:law_charitable_health_system
			factor = 0.8
		}
		modifier = {
			has_law = law_type:law_private_health_insurance
			factor = 0.65
		}
		modifier = {
			has_law = law_type:law_public_health_insurance
			factor = 0.5
		}
		modifier = {
			has_technology_researched = antibiotics
			factor = 0.1
		}
	}
}

#Panum 501: Yellow Fever in STATE
panum.501 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	trigger = {
		var:panum_number_of_yellow_fever_states_var <= 3
		panum_state_can_have_yellow_fever_trigger = yes
	}

	immediate = {
		panum_set_yellow_fever_state_effect = yes
		panum_add_number_of_yellow_fever_states_effect = yes
		panum_add_yellow_fever_modifier_effect = yes
		post_notification = panum_epidemic_spread_notification
	}

	after = {
	}
}

#Panum 502: A contagious disease?
panum.502 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.502.t

	desc = panum.502.d

	flavor = panum.502.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_yellow_fever.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 2
	}

	trigger = {
		NOT = {
			panum_has_yellow_fever_treatment_trigger = yes
		}
		any_scope_state = {
			panum_state_has_yellow_fever_trigger = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_yellow_fever_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#It is a contagious disease and we must do everything we can to stop it from spreading!
		name = panum.202.h
		default_option = yes
		every_scope_state = {
			limit = {
				panum_state_has_yellow_fever_trigger = yes
			}
			add_modifier = {
				name = panum_yellow_fever_quarantine_modifier
			}
		}
	}

	option = {	#There is no evidence that this is a contagious disease.
		name = panum.502.g
		default_option = yes
		every_scope_state = {
			limit = {
				panum_state_has_yellow_fever_trigger = yes
			}
			add_radicals_in_state = {
				strata = rich
				value = 0.03
			}
			add_radicals_in_state = {
				strata = middle
				value = 0.02
			}
		}
	}


	after = {
	}
}

#Panum 503: Yellow Fever affects Plantations
panum.503 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.503.t

	desc = panum.503.d

	flavor = panum.503.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_yellow_fever.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 4
	}

	trigger = {
		any_scope_state = {
			panum_state_has_yellow_fever_trigger = yes
			any_scope_building = {
				is_building_group = bg_plantations
			}
			NOT = {
				any_scope_building = {
					is_building_group = bg_plantations
					has_modifier = panum_plantation_quarantine_modifier
				}
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_yellow_fever_trigger = yes
				any_scope_building = {
					is_building_group = bg_plantations
				}
				NOT = {
					any_scope_building = {
						is_building_group = bg_plantations
						has_modifier = panum_plantation_quarantine_modifier
					}
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Get the workers out of the fields!
		name = panum.503.g
		default_option = yes
		scope:panum_disease_state = {
			every_scope_building = {
				limit = {
					is_building_group = bg_plantations
				}
				add_modifier = {
					name = panum_plantation_quarantine_modifier
					days = 365
				}
			}
		}
	}

	option = {	#The plantation must continue to run, at all costs!
		name = panum.503.h
		default_option = yes
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				pop_type = farmers
				percent = 0.005
			}
		}
	}


	after = {
	}
}

#Panum 504: Evacuation
panum.504 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.504.t

	desc = panum.504.d

	flavor = panum.504.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_yellow_fever.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		any_scope_state = {
			panum_state_has_yellow_fever_trigger = yes
			has_building = building_government_administration
			NOT = {
				has_modifier = panum_administrative_evacuation_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_yellow_fever_trigger = yes
				has_building = building_government_administration
				NOT = {
					has_modifier = panum_administrative_evacuation_modifier
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Evacuate the authorities.
		name = panum.504.g
		default_option = yes
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_administrative_evacuation_modifier
			}
			add_radicals_in_state = {
				value = 0.01
			}
		}
	}

	option = {	#The local administration must not collapse.
		name = panum.504.h
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				pop_type = bureaucrats
				percent = 0.005
			}
		}
	}


	after = {
	}
}

#Panum 505: Yellow Fever spreads to Barracks
panum.505 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.505.t

	desc = panum.505.d

	flavor = panum.505.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_yellow_fever.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 4
	}

	trigger = {
		any_scope_state = {
			panum_state_has_yellow_fever_trigger = yes
			has_building = building_barracks
			NOT = {
				any_scope_building = {
					has_modifier = panum_yellow_fever_barracks_modifier
				}
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_yellow_fever_trigger = yes
				has_building = building_barracks
				NOT = {
					any_scope_building = {
						has_modifier = panum_yellow_fever_barracks_modifier
					}
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#No! They were destined for an honorable death on the battlefield!
		name = panum.505.g
		default_option = yes
		scope:panum_disease_state = {
			every_scope_building = {
				limit = {
					is_building_group = bg_army
				}
				add_modifier = {
					name = panum_yellow_fever_barracks_modifier
				}
			}
		}
		scope:panum_disease_state = {
			kill_population_percent_in_state = {
				pop_type = soldiers
				percent = 0.003
			}
			kill_population_percent_in_state = {
				pop_type = officers
				percent = 0.001
			}
		}
	}


	after = {
	}
}

#Panum 506: Sailor's sickness
panum.506 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.506.t

	desc = panum.506.d

	flavor = panum.506.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_yellow_fever.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 3
	}

	trigger = {
		any_scope_state = {
			panum_state_has_yellow_fever_trigger = yes
			has_building = building_port
			NOT = {
				any_scope_building = {
					has_modifier = panum_yellow_fever_port_modifier
				}
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_yellow_fever_trigger = yes
				has_building = building_port
				NOT = {
					any_scope_building = {
						has_modifier = panum_yellow_fever_port_modifier
					}
				}
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#A collapse for shipping!
		name = panum.506.g
		default_option = yes
		scope:panum_disease_state = {
			every_scope_building = {
				limit = {
					is_building_type = building_port
				}
				add_modifier = {
					name = panum_yellow_fever_port_modifier
				}
			}
		}
	}


	after = {
	}
}

#Panum 507: Black Vomit
panum.507 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.507.t

	desc = panum.507.d

	flavor = panum.507.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_yellow_fever.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 6
	}

	trigger = {
		any_scope_state = {
			panum_state_has_yellow_fever_trigger = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_yellow_fever_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#When will we finally be freed from this plague?
		name = panum.507.g
		default_option = yes
		if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_yellow_fever_severe_modifier
				}
			}
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.003
				}
			}
		}
		else_if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_yellow_fever_normal_modifier
				}
			}
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.002
				}
			}
		}
		else = {
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.001
				}
			}
		}
	}


	after = {
	}
}

#Panum 520: Yellow Fever epidemic over
panum.520 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.520.t

	desc = panum.520.d

	flavor = panum.520.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_yellow_fever.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
	}

	immediate = {
	}

	option = {	#But at what cost?
		name = panum.120.g
		default_option = yes
	}


	after = {
	}
}

#Panum 521: Yellow Fever Hint (hidden)
panum.521 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	cooldown = {
		months = 1
	}

	immediate = {
		panum_add_x_yellow_fever_description_clues_effect = { AMOUNT = 1 }
		post_notification = panum_description_progress_notification
	}
}

#Panum 522: Two Courses of Yellow Fever
panum.522 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.522.t

	desc = panum.522.d

	flavor = panum.522.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_yellow_fever_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 523: Yellow Fever Seasons
panum.523 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.523.t

	desc = panum.523.d

	flavor = panum.523.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_yellow_fever_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 524: A Local Disease?
panum.524 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.524.t

	desc = panum.524.d

	flavor = panum.524.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Precisely observed.
		name = panum.124.g
		default_option = yes
		panum_add_x_yellow_fever_description_clues_effect = { AMOUNT = 3 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 530: Yellow Fever Description
#panum.530 = {
#	dlc = dlc_morgenrote
#
#	type = country_event
#
#	title = panum.138.t
#
#	desc = panum.138.d
#
#	flavor = panum.138.f
#	
#	duration = 3
#
#	gui_window = event_window_1char_tabloid
#
#	left_icon = scope:panum_physician_scope
#
#	icon = "gfx/interface/icons/event_icons/event_medicine.dds"
#
#	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
#
#	immediate = {
#		var:panum_physician_var = {
#			save_scope_as = panum_physician_scope
#		}
#		#Sets up a variable that sets the description title
#		set_variable = {
#			name = panum_description_title_randomizer_var
#			value = { 1 10 }
#		}
#		round_variable = {
#			name = panum_description_title_randomizer_var
#			nearest = 1
#		}
#	}
#
#	option = {	#Now we know the beast better.
#		name = panum.138.g
#		panum_add_yellow_fever_description_effect = yes
#		var:panum_physician_var = {
#			set_character_busy_and_immortal = no
#		}
#	}
#
#	after = {
#		remove_variable = panum_description_title_randomizer_var
#		remove_variable = panum_disease_title_var
#	}
#}

#Panum 540: Yellow Fever Treatment
panum.540 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.140.t

	desc = panum.140.d

	flavor = panum.140.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		#Sets up a variable that sets the treatment title
		set_variable = {
			name = panum_treatment_title_randomizer_var
			value = { 1 10 }
		}
		round_variable = {
			name = panum_treatment_title_randomizer_var
			nearest = 1
		}
	}

	option = {	#Yellow Fever is losing its horror.
		name = panum.140.g
		panum_add_yellow_fever_treatment_effect = yes
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
		remove_variable = panum_treatment_title_randomizer_var
		remove_variable = panum_disease_title_var
	}
}

#################################################################################

######MEASLES######

#Panum 600: Measles epidemic
panum.600 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.600.t

	desc = panum.600.d

	flavor = panum.600.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_measles.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
		panum_country_can_have_measles_trigger = yes
	}

	immediate = {
		panum_set_number_of_measles_states_effect = yes
		panum_set_measles_state_effect = yes
	}

	option = {	#Measles!
		name = panum.600.g
		default_option = yes
		panum_add_measles_modifier_effect = yes
		add_journal_entry = {
			type = je_panum_measles
		}
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			any_neighbouring_state = {
				panum_state_has_measles_trigger = yes
			}
			factor = 10
		}
		modifier = {
			has_journal_entry = je_famine
			factor = 5
		}
		modifier = {
			has_journal_entry = je_sol_1
			factor = 5
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 20
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 15
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 10
				}
			}
			factor = 1.1
		}
		modifier = {
			any_scope_state = {
				any_scope_pop = {
					strata = poor
					standard_of_living < 5
				}
			}
			factor = 2
		}
		modifier = {
			has_law = law_type:law_no_health_system
			factor = 1.5
		}
		modifier = {
			has_law = law_type:law_charitable_health_system
			factor = 0.8
		}
		modifier = {
			has_law = law_type:law_private_health_insurance
			factor = 0.65
		}
		modifier = {
			has_law = law_type:law_public_health_insurance
			factor = 0.5
		}
		modifier = {
			has_technology_researched = antibiotics
			factor = 0.5
		}
	}
}

#Panum 601: Measles in STATE
panum.601 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	trigger = {
		panum_state_can_have_measles_trigger = yes
		NAND = {
			panum_has_measles_treatment_trigger = yes
			var:panum_number_of_measles_states_var <= 3
		}
	}

	immediate = {
		panum_add_number_of_measles_states_effect = yes
		panum_set_measles_state_effect = yes
		panum_add_measles_modifier_effect = yes
		post_notification = panum_epidemic_spread_notification
	}

	after = {
	}
}

#Panum 602: Measles spreads to COUNTRY
panum.602 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.602.t

	desc = panum.602.d

	flavor = panum.600.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_measles.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 9
	}

	trigger = {
		any_country = {
			panum_country_can_have_measles_trigger = yes
			is_adjacent_to_country = ROOT
		}
	}

	immediate = {
		random_country = {
			limit = {
				panum_country_can_have_measles_trigger = yes
				is_adjacent_to_country = ROOT
			}
			save_scope_as = panum_infected_country
		}
	}

	option = {	#This plague is completely out of control!
		name = panum.602.g
		default_option = yes
		add_modifier = {
			name = panum_useless_plague_fighter_modifier
			years = 2
		}
		scope:panum_infected_country = {
			trigger_event = {
				id = panum.600
			}
		}
	}


	after = {
	}
}

#Panum 603: Measles kills children
panum.603 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.603.t

	desc = panum.603.d

	flavor = panum.603.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_measles.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 6
	}

	trigger = {
		any_scope_state = {
			panum_state_has_measles_trigger = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_measles_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#Is there no cure for this terrible illness?
		name = panum.603.g
		default_option = yes
		if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_measles_severe_modifier
				}
			}
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.003
				}
			}
		}
		else_if = {
			limit = {
				scope:panum_disease_state = {
					has_modifier = panum_epidemic_measles_normal_modifier
				}
			}
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.002
				}
			}
		}
		else = {
			scope:panum_disease_state = {
				kill_population_percent_in_state = {
					percent = 0.001
				}
			}
		}
	}


	after = {
	}
}

#Panum 605: Child Clinic for Measles
panum.605 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.605.t

	desc = panum.605.d

	flavor = panum.605.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_measles.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 12
	}

	trigger = {
		any_scope_state = {
			panum_state_has_measles_trigger = yes
			has_building = building_government_administration
			any_scope_building = {
				is_building_type = building_government_administration
				level >= 2
				has_active_production_method = pm_panum_no_clinic
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_measles_trigger = yes
				has_building = building_government_administration
				any_scope_building = {
					is_building_type = building_government_administration
					level >= 2
					has_active_production_method = pm_panum_no_clinic
				}
			}
			save_scope_as = panum_disease_state
		}
		random_interest_group = {
			limit = {
    			is_in_government = yes
	        }
			save_scope_as = panum_government_ig
			leader = {
				save_scope_as = panum_government_leader
			}
		}
	}

	option = {	#An initiative worth supporting.
		name = panum.605.g
		default_option = yes
		add_treasury = -50000
		scope:panum_disease_state = {
			activate_production_method = {
				building_type = building_government_administration
				production_method = pm_panum_clinic
			}
		}
		scope:panum_government_ig = {
			add_modifier = {
				name = manzoni_political_tailwind_modifier
				years = 3
			}
		}
	}

	option = {	#This party only wants to exploit the disease for political purposes.
		name = panum.605.h
		add_modifier = {
			name = panum_no_epidemic_corruption_modifier
			years = 3
		}
	}


	after = {
	}
}

#Panum 606: Measles Depression
panum.606 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.606.t

	desc = panum.606.d

	flavor = panum.606.f
	
	duration = 3

	placement = scope:panum_disease_state

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_measles.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		months = 8
	}

	trigger = {
		any_scope_state = {
			panum_state_has_measles_trigger = yes
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				panum_state_has_measles_trigger = yes
			}
			save_scope_as = panum_disease_state
		}
	}

	option = {	#An understandable demoralization.
		name = panum.606.g
		default_option = yes
		scope:panum_disease_state = {
			add_modifier = {
				name = panum_measles_depression_modifier
				years = 2
			}
		}
	}

	after = {
	}
}

#Panum 620: Measles epidemic over
panum.620 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.620.t

	desc = panum.620.d

	flavor = panum.620.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_measles.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
	}

	immediate = {
	}

	option = {	#But at what cost?
		name = panum.120.g
		default_option = yes
	}


	after = {
	}
}

#Panum 621: Measles Hint (hidden)
panum.621 = {
	dlc = dlc_morgenrote

	type = country_event

	hidden = yes

	cooldown = {
		months = 1
	}

	immediate = {
		panum_add_x_measles_description_clues_effect = { AMOUNT = 1 }
		post_notification = panum_description_progress_notification
	}
}

#Panum 622: Measles Incubation
panum.622 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.622.t

	desc = panum.622.d

	flavor = panum.622.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_measles_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 623: Measles & Scarlet Fever
panum.623 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.623.t

	desc = panum.623.d

	flavor = panum.623.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Well observed.
		name = panum.122.g
		default_option = yes
		panum_add_x_measles_description_clues_effect = { AMOUNT = 2 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 624: Lifelong Immunity
panum.624 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.624.t

	desc = panum.624.d

	flavor = panum.624.f
	
	duration = 3

	event_image = { 
		texture = "gfx/event_pictures/panum_pictures/panum_panum.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	cooldown = {
		years = 100 #Should happen never again
	}

	trigger = {
	}

	immediate = {
	}

	option = {	#Precisely observed.
		name = panum.124.g
		default_option = yes
		panum_add_x_measles_description_clues_effect = { AMOUNT = 3 }
	}

	after = {
	}

	weight_multiplier = {
		base = 1
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_epidemiologist
			}
			add = 3
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_famous
			}
			add = 2
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = panum_physician_experienced
			}
			add = 1
		}
		modifier = {
			var:panum_physician_var = {
				has_trait = meticulous
			}
			add = 1
		}
	}
}

#Panum 640: Measles Treatment
panum.640 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.140.t

	desc = panum.140.d

	flavor = panum.140.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		#Sets up a variable that sets the treatment title
		set_variable = {
			name = panum_treatment_title_randomizer_var
			value = { 1 10 }
		}
		round_variable = {
			name = panum_treatment_title_randomizer_var
			nearest = 1
		}
	}

	option = {	#Measles is losing its horror.
		name = panum.140.g
		panum_add_measles_treatment_effect = yes
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
		remove_variable = panum_treatment_title_randomizer_var
		remove_variable = panum_disease_title_var
	}
}

################################################################

#Panum 1000: Calls for Medical Reforms
panum.1000 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.1000.t
	desc = panum.1000.d
	flavor = panum.1000.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_medical_reformer_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
		has_law = law_type:law_no_health_system
		OR = {
			has_technology_researched = medical_degrees
			has_technology_researched = pharmaceuticals
		}
		NOT = {
			any_scope_character = {
				has_role = agitator
				OR = {
					has_ideology = ideology:ideology_panum_medical_reformer_public
					has_ideology = ideology:ideology_panum_medical_reformer_private
					has_ideology = ideology:ideology_panum_medical_reformer_charity
				}
			}
		}
	}

	immediate = {
		add_modifier = {
			name = panum_medical_reformer_slot_modifier
		}
		create_character = {
			is_agitator = yes
			save_scope_as = panum_medical_reformer_scope
			on_created = {
				set_variable = mr_is_physician_var
				add_trait = panum_physician
				if = {
					limit = {
						interest_group = {
							law_stance = {
								law = law_type:law_public_health_insurance
								value > neutral
							}
						}
					}
					set_ideology = ideology:ideology_panum_medical_reformer_public
				}
				else_if = {
					limit = {
						interest_group = {
							law_stance = {
								law = law_type:law_private_health_insurance
								value > neutral
							}
						}
					}
					set_ideology = ideology:ideology_panum_medical_reformer_private
				}
				else_if = {
					limit = {
						interest_group = {
							law_stance = {
								law = law_type:law_charitable_health_system
								value > neutral
							}
						}
					}
					set_ideology = ideology:ideology_panum_medical_reformer_charity
				}
				else = {
					random_list = {
						1 = { set_ideology = ideology:ideology_panum_medical_reformer_public }
						1 = { set_ideology = ideology:ideology_panum_medical_reformer_private }
						1 = { set_ideology = ideology:ideology_panum_medical_reformer_charity }
					}
				}
			}
		}
	}

	option = {	#I think they would favor public healthcare!
		name = panum.1000.g
		default_option = yes

		trigger = {
			is_player = yes
			has_technology_researched = pharmaceuticals
		}
		show_as_unavailable = {
			always = yes
		}

		scope:panum_medical_reformer_scope = {
			set_ideology = ideology:ideology_panum_medical_reformer_public
			add_modifier = {
				name = panum_medical_reformer_modifier
				is_decaying = yes
				years = 5
			}
		}
	}

	option = {	#I think they would favor private healthcare!
		name = panum.1000.h

		trigger = {
			is_player = yes
			has_technology_researched = pharmaceuticals
		}

		show_as_unavailable = {
			always = yes
		}
		scope:panum_medical_reformer_scope = {
			set_ideology = ideology:ideology_panum_medical_reformer_private
			add_modifier = {
				name = panum_medical_reformer_modifier
				is_decaying = yes
				years = 5
			}
		}
	}

	option = {	#I think they would favor charitable healthcare!
		name = panum.1000.i

		trigger = {
			is_player = yes
			has_technology_researched = medical_degrees
		}
		show_as_unavailable = {
			always = yes
		}

		scope:panum_medical_reformer_scope = {
			set_ideology = ideology:ideology_panum_medical_reformer_charity
			add_modifier = {
				name = panum_medical_reformer_modifier
				is_decaying = yes
				years = 5
			}
		}
	}

	option = {
		trigger = {
			is_ai = yes
		}
		
		scope:panum_medical_reformer_scope = {
			add_modifier = {
				name = panum_medical_reformer_modifier
				is_decaying = yes
				years = 5
			}
		}
	}

	after = {
	}
}

########################################################################################################################

####### MEDICAL CONGRESS #######

#Panum 2000: Medical Congress - Preparation
panum.2000 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2000.t
	desc = panum.2000.d
	flavor = panum.2000.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/panum_pictures/panum_medical_congress.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
	}

	option = { 
		name = panum.2000.g #This is supposed to be a general medical conference.
		default_option = yes
		set_variable = {
			name = panum_medical_congress_general_var
			years = 3
		}
		ai_chance = {
			base = 1
		}
	}

	option = { 
		name = panum.2003.h #Cholera
		trigger = {
			panum_has_cholera_description_trigger = yes #At least needs a description of the disease to hold a congress
			NOT = {
				has_global_variable = panum_medical_congress_cholera_global_var
			}
		}
		set_global_variable = panum_medical_congress_cholera_global_var
		set_variable = {
			name = panum_medical_congress_cholera_var
			years = 3
		}
		ai_chance = {
			base = 5
		}
	}

	option = { 
		name = panum.2003.i #Tuberculosis
		trigger = {
			panum_has_tuberculosis_description_trigger = yes #At least needs a description of the disease to hold a congress
			NOT = {
				has_global_variable = panum_medical_congress_tuberculosis_global_var
			}
		}
		set_global_variable = panum_medical_congress_tuberculosis_global_var
		set_variable = {
			name = panum_medical_congress_tuberculosis_var
			years = 3
		}

		ai_chance = {
			base = 4
		}
	}

	option = { 
		name = panum.2003.j #Smallpox
		trigger = {
			panum_has_smallpox_description_trigger = yes #At least needs a description of the disease to hold a congress
			NOT = {
				has_global_variable = panum_medical_congress_smallpox_global_var
			}
		}
		set_global_variable = panum_medical_congress_smallpox_global_var
		set_variable = {
			name = panum_medical_congress_smallpox_var
			years = 3
		}

		ai_chance = {
			base = 3
		}
	}

	option = { 
		name = panum.2003.k #Typhus
		trigger = {
			panum_has_typhus_description_trigger = yes #At least needs a description of the disease to hold a congress
			NOT = {
				has_global_variable = panum_medical_congress_typhus_global_var
			}
		}
		set_global_variable = panum_medical_congress_typhus_global_var
		set_variable = {
			name = panum_medical_congress_typhus_var
			years = 3
		}

		ai_chance = {
			base = 4
		}
	}

	option = { 
		name = panum.2003.l #Yellow Fever
		trigger = {
			panum_has_yellow_fever_description_trigger = yes #At least needs a description of the disease to hold a congress
			NOT = {
				has_global_variable = panum_medical_congress_yellow_fever_global_var
			}
		}
		set_global_variable = panum_medical_congress_yellow_fever_global_var
		set_variable = {
			name = panum_medical_congress_yellow_fever_var
			years = 3
		}

		ai_chance = {
			base = 4
		}
	}

	option = { 
		name = panum.2003.m #Measles
		trigger = {
			panum_has_measles_description_trigger = yes #At least needs a description of the disease to hold a congress
			NOT = {
				has_global_variable = panum_medical_congress_measles_global_var
			}
		}
		set_global_variable = panum_medical_congress_measles_global_var
		set_variable = {
			name = panum_medical_congress_measles_var
			years = 3
		}

		ai_chance = {
			base = 3
		}
	}

	option = { 
		name = panum.2003.n #Scarlet
		trigger = {
			panum_has_scarlet_description_trigger = yes #At least needs a description of the disease to hold a congress
			NOT = {
				has_global_variable = panum_medical_congress_scarlet_global_var
			}
		}
		set_global_variable = panum_medical_congress_scarlet_global_var
		set_variable = {
			name = panum_medical_congress_scarlet_var
			years = 3
		}

		ai_chance = {
			base = 2
		}
	}

	option = { 
		name = panum.2003.o #Plague
		trigger = {
			panum_has_plague_description_trigger = yes #At least needs a description of the disease to hold a congress
			NOT = {
				has_global_variable = panum_medical_congress_plague_global_var
			}
		}
		set_global_variable = panum_medical_congress_plague_global_var
		set_variable = {
			name = panum_medical_congress_plague_var
			years = 3
		}

		ai_chance = {
			base = 3
		}
	}

	option = { 
		name = panum.2003.p #Diphteria
		trigger = {
			panum_has_diphteria_description_trigger = yes #At least needs a description of the disease to hold a congress
			NOT = {
				has_global_variable = panum_medical_congress_diphteria_global_var
			}
		}
		set_global_variable = panum_medical_congress_diphteria_global_var
		set_variable = {
			name = panum_medical_congress_diphteria_var
			years = 3
		}

		ai_chance = {
			base = 2
		}
	}

	option = { 
		name = panum.2003.q #Polio
		trigger = {
			panum_has_polio_description_trigger = yes #At least needs a description of the disease to hold a congress
			NOT = {
				has_global_variable = panum_medical_congress_polio_global_var
			}
		}
		set_global_variable = panum_medical_congress_polio_global_var
		set_variable = {
			name = panum_medical_congress_polio_var
			years = 3
		}

		ai_chance = {
			base = 2
		}
	}

	after = {
		trigger_event = {
			id = panum.2001
			days = { 14 28 }
		}
	}
}

#Panum 2001: Medical Congress - Invitation
panum.2001 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2001.t
	desc = panum.2001.d
	flavor = panum.2001.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/panum_pictures/panum_medical_congress.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
	}

	option = { 
		name = panum.2001.g # Invite the leading medical nations
		if = {
			limit = {
				panum_has_physician = yes
			}
			var:panum_physician_var ?= {
				set_variable = panum_physician_achievement_attended_medical_congress_var
			}
		}
		if = {
			limit = {
				theiler_has_microbiologist = yes
			}
			var:theiler_biologist_var ?= {
				set_variable = panum_physician_achievement_attended_medical_congress_var
			}
		}
		add_modifier = {
			name = panum_congress_attend_modifier
		}
		every_country = {
			limit = {
				NOT = { 
					this = ROOT 
				}
				OR = {
					panum_has_physician = yes
					theiler_has_microbiologist = yes
				}
			}
			trigger_event = {
				id = panum.2002
				popup = yes
			}
		}
	}

	after = {
		if = {
			limit = {
				panum_has_physician = yes
			}
			trigger_event = {
				id = panum.2003
				days = { 20 40 }
			}
		}
		else_if = {
			limit = {
				theiler_has_microbiologist = yes
			}
			trigger_event = {
				id = panum.2004
				days = { 20 40 }
			}
		}
		else = {
			trigger_event = {
				id = panum.2005
				days = { 20 40 }
			}
		}
	}
}

#Panum 2002: Medical Congress - An Invitation
panum.2002 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2002.t
	desc = panum.2002.d
	flavor = panum.2001.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/panum_pictures/panum_medical_congress.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
		random_country = {
			limit = {
				has_modifier = panum_congress_host_modifier
			}
			save_scope_as = panum_congress_host_country
		}
	}

	option = { 
		name = panum.2002.g #We'll come
		if = {
			limit = {
				panum_has_physician = yes
			}
			var:panum_physician_var ?= {
				set_variable = panum_physician_achievement_attended_medical_congress_var
			}
		}
		if = {
			limit = {
				theiler_has_microbiologist = yes
			}
			var:theiler_biologist_var ?= {
				set_variable = panum_physician_achievement_attended_medical_congress_var
			}
		}
		add_modifier = {
			name = panum_congress_attend_modifier
		}
	}

	after = {
		if = {
			limit = {
				panum_has_physician = yes
			}
			trigger_event = {
				id = panum.2003
				days = { 20 40 }
			}
		}
		else_if = {
			limit = {
				theiler_has_microbiologist = yes
			}
			trigger_event = {
				id = panum.2004
				days = { 20 40 }
			}
		}
		else = {
			trigger_event = {
				id = panum.2005
				days = { 20 40 }
			}
		}
	}
}

#Panum 2003: Medical Congress - Description & Treatment for Physician
panum.2003 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2003.t
	desc = panum.2003.d
	flavor = panum.2003.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/panum_pictures/panum_medical_congress.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
		random_country = {
			limit = {
				has_modifier = panum_congress_host_modifier
			}
			save_scope_as = panum_congress_host_country
		}
	}

	option = { 
		name = panum.2003.h #Cholera
		trigger = {
			OR = {
				AND = {
					panum_has_cholera_description_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_cholera_description_trigger = yes
					}
				}
				AND = {
					panum_has_cholera_treatment_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_cholera_treatment_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				panum_has_cholera_description_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_cholera_description_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_cholera_description_effect_tt
				set_variable = panum_cholera_description_var
			}
		}
		if = {
			limit = {
				panum_has_cholera_treatment_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_cholera_treatment_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_cholera_treatment_effect_tt
				set_variable = panum_cholera_treatment_var
			}
		}

		ai_chance = {
			base = 5
		}
	}

	option = { 
		name = panum.2003.i #Tuberculosis
		trigger = {
			OR = {
				AND = {
					panum_has_tuberculosis_description_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_tuberculosis_description_trigger = yes
					}
				}
				AND = {
					panum_has_tuberculosis_treatment_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_tuberculosis_treatment_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				panum_has_tuberculosis_description_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_tuberculosis_description_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_tuberculosis_description_effect_tt
				set_variable = panum_tuberculosis_description_var
			}
		}
		if = {
			limit = {
				panum_has_tuberculosis_treatment_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_tuberculosis_treatment_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_tuberculosis_treatment_effect_tt
				set_variable = panum_tuberculosis_treatment_var
			}
		}
	
		ai_chance = {
			base = 4
		}
	}

	option = { 
		name = panum.2003.j #Smallpox
		trigger = {
			OR = {
				AND = {
					panum_has_smallpox_description_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_smallpox_description_trigger = yes
					}
				}
				AND = {
					panum_has_smallpox_treatment_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_smallpox_treatment_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				panum_has_smallpox_description_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_smallpox_description_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_smallpox_description_effect_tt
				set_variable = panum_smallpox_description_var
			}
		}
		if = {
			limit = {
				panum_has_smallpox_treatment_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_smallpox_treatment_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_smallpox_treatment_effect_tt
				set_variable = panum_smallpox_treatment_var
			}
		}
	
		ai_chance = {
			base = 4
		}
	}

	option = { 
		name = panum.2003.k #Typhus
		trigger = {
			OR = {
				AND = {
					panum_has_typhus_description_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_typhus_description_trigger = yes
					}
				}
				AND = {
					panum_has_typhus_treatment_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_typhus_treatment_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				panum_has_typhus_description_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_typhus_description_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_typhus_description_effect_tt
				set_variable = panum_typhus_description_var
			}
		}
		if = {
			limit = {
				panum_has_typhus_treatment_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_typhus_treatment_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_typhus_treatment_effect_tt
				set_variable = panum_typhus_treatment_var
			}
		}
	
		ai_chance = {
			base = 4
		}
	}

	option = { 
		name = panum.2003.l #Yellow Fever
		trigger = {
			OR = {
				AND = {
					panum_has_yellow_fever_description_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_yellow_fever_description_trigger = yes
					}
				}
				AND = {
					panum_has_yellow_fever_treatment_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_yellow_fever_treatment_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				panum_has_yellow_fever_description_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_yellow_fever_description_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_yellow_fever_description_effect_tt
				set_variable = panum_yellow_fever_description_var
			}
		}
		if = {
			limit = {
				panum_has_yellow_fever_treatment_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_yellow_fever_treatment_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_yellow_fever_treatment_effect_tt
				set_variable = panum_yellow_fever_treatment_var
			}
		}
	
		ai_chance = {
			base = 4
		}
	}

	option = { 
		name = panum.2003.m #Measles
		trigger = {
			OR = {
				AND = {
					panum_has_measles_description_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_measles_description_trigger = yes
					}
				}
				AND = {
					panum_has_measles_treatment_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_measles_treatment_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				panum_has_measles_description_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_measles_description_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_measles_description_effect_tt
				set_variable = panum_measles_description_var
			}
		}
		if = {
			limit = {
				panum_has_measles_treatment_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_measles_treatment_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_measles_treatment_effect_tt
				set_variable = panum_measles_treatment_var
			}
		}
	
		ai_chance = {
			base = 3
		}
	}

	option = { 
		name = panum.2003.n #Scarlet
		trigger = {
			OR = {
				AND = {
					panum_has_scarlet_description_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_scarlet_description_trigger = yes
					}
				}
				AND = {
					panum_has_scarlet_treatment_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_scarlet_treatment_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				panum_has_scarlet_description_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_scarlet_description_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_scarlet_description_effect_tt
				set_variable = panum_scarlet_description_var
			}
		}
		if = {
			limit = {
				panum_has_scarlet_treatment_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_scarlet_treatment_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_scarlet_treatment_effect_tt
				set_variable = panum_scarlet_treatment_var
			}
		}
	
		ai_chance = {
			base = 2
		}
	}

	option = { 
		name = panum.2003.o #Plague
		trigger = {
			OR = {
				AND = {
					panum_has_plague_description_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_plague_description_trigger = yes
					}
				}
				AND = {
					panum_has_plague_treatment_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_plague_treatment_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				panum_has_plague_description_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_plague_description_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_plague_description_effect_tt
				set_variable = panum_plague_description_var
			}
		}
		if = {
			limit = {
				panum_has_plague_treatment_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_plague_treatment_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_plague_treatment_effect_tt
				set_variable = panum_plague_treatment_var
			}
		}
	
		ai_chance = {
			base = 3
		}
	}

	option = { 
		name = panum.2003.p #Diphteria
		trigger = {
			OR = {
				AND = {
					panum_has_diphteria_description_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_diphteria_description_trigger = yes
					}
				}
				AND = {
					panum_has_diphteria_treatment_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_diphteria_treatment_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				panum_has_diphteria_description_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_diphteria_description_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_diphteria_description_effect_tt
				set_variable = panum_diphteria_description_var
			}
		}
		if = {
			limit = {
				panum_has_diphteria_treatment_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_diphteria_treatment_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_diphteria_treatment_effect_tt
				set_variable = panum_diphteria_treatment_var
			}
		}
	
		ai_chance = {
			base = 2
		}
	}

	option = { 
		name = panum.2003.q #Polio
		trigger = {
			OR = {
				AND = {
					panum_has_polio_description_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_polio_description_trigger = yes
					}
				}
				AND = {
					panum_has_polio_treatment_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						panum_has_polio_treatment_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				panum_has_polio_description_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_polio_description_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_polio_description_effect_tt
				set_variable = panum_polio_description_var
			}
		}
		if = {
			limit = {
				panum_has_polio_treatment_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					panum_has_polio_treatment_trigger = yes
				}
			}
			custom_tooltip = {
				text = panum_add_polio_treatment_effect_tt
				set_variable = panum_polio_treatment_var
			}
		}
	
		ai_chance = {
			base = 2
		}
	}

	option = { 
		name = panum.2003.g #The doctor should gather some general medical knowledge from colleagues.
		default_option = yes
		panum_small_add_technology = yes

		ai_chance = {
			base = 1
		}
	}

	after = {
		if = {
			limit = {
				theiler_has_microbiologist = yes
			}
			trigger_event = {
				id = panum.2004
				days = { 14 28 }
			}
		}
		else = {
			trigger_event = {
				id = panum.2005
				days = { 14 28 }
			}
		}
	}
}

#Panum 2004: Medical Congress - Pathogen & Vaccine for Biologist
panum.2004 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2004.t
	desc = panum.2004.d
	flavor = panum.2004.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/panum_pictures/panum_medical_congress.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
		random_country = {
			limit = {
				has_modifier = panum_congress_host_modifier
			}
			save_scope_as = panum_congress_host_country
		}
	}

	option = { 
		name = panum.2003.h #Cholera
		trigger = {
			OR = {
				AND = {
					theiler_has_cholera_pathogen_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_cholera_pathogen_trigger = yes
					}
				}
				AND = {
					theiler_has_cholera_vaccine_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_cholera_vaccine_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				theiler_has_cholera_pathogen_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_cholera_pathogen_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_cholera_pathogen_effect_tt
				set_variable = theiler_cholera_pathogen_var
			}
		}
		if = {
			limit = {
				theiler_has_cholera_vaccine_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_cholera_vaccine_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_cholera_vaccine_effect_tt
				set_variable = theiler_cholera_vaccine_var
			}
		}

		ai_chance = {
			base = 5
		}
	}

	option = { 
		name = panum.2003.i #Tuberculosis
		trigger = {
			OR = {
				AND = {
					theiler_has_tuberculosis_pathogen_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_tuberculosis_pathogen_trigger = yes
					}
				}
				AND = {
					theiler_has_tuberculosis_vaccine_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_tuberculosis_vaccine_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				theiler_has_tuberculosis_pathogen_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_tuberculosis_pathogen_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_tuberculosis_pathogen_effect_tt
				set_variable = theiler_tuberculosis_pathogen_var
			}
		}
		if = {
			limit = {
				theiler_has_tuberculosis_vaccine_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_tuberculosis_vaccine_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_tuberculosis_vaccine_effect_tt
				set_variable = theiler_tuberculosis_vaccine_var
			}
		}
	
		ai_chance = {
			base = 4
		}
	}

	option = { 
		name = panum.2003.j #Smallpox
		trigger = {
			OR = {
				AND = {
					theiler_has_smallpox_pathogen_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_smallpox_pathogen_trigger = yes
					}
				}
				AND = {
					theiler_has_smallpox_vaccine_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_smallpox_vaccine_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				theiler_has_smallpox_pathogen_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_smallpox_pathogen_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_smallpox_pathogen_effect_tt
				set_variable = theiler_smallpox_pathogen_var
			}
		}
		if = {
			limit = {
				theiler_has_smallpox_vaccine_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_smallpox_vaccine_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_smallpox_vaccine_effect_tt
				set_variable = theiler_smallpox_vaccine_var
			}
		}
	
		ai_chance = {
			base = 4
		}
	}

	option = { 
		name = panum.2003.k #Typhus
		trigger = {
			OR = {
				AND = {
					theiler_has_typhus_pathogen_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_typhus_pathogen_trigger = yes
					}
				}
				AND = {
					theiler_has_typhus_vaccine_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_typhus_vaccine_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				theiler_has_typhus_pathogen_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_typhus_pathogen_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_typhus_pathogen_effect_tt
				set_variable = theiler_typhus_pathogen_var
			}
		}
		if = {
			limit = {
				theiler_has_typhus_vaccine_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_typhus_vaccine_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_typhus_vaccine_effect_tt
				set_variable = theiler_typhus_vaccine_var
			}
		}
	
		ai_chance = {
			base = 4
		}
	}

	option = { 
		name = panum.2003.l #Yellow Fever
		trigger = {
			OR = {
				AND = {
					theiler_has_yellow_fever_pathogen_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_yellow_fever_pathogen_trigger = yes
					}
				}
				AND = {
					theiler_has_yellow_fever_vaccine_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_yellow_fever_vaccine_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				theiler_has_yellow_fever_pathogen_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_yellow_fever_pathogen_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_yellow_fever_pathogen_effect_tt
				set_variable = theiler_yellow_fever_pathogen_var
			}
		}
		if = {
			limit = {
				theiler_has_yellow_fever_vaccine_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_yellow_fever_vaccine_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_yellow_fever_vaccine_effect_tt
				set_variable = theiler_yellow_fever_vaccine_var
			}
		}
	
		ai_chance = {
			base = 4
		}
	}

	option = { 
		name = panum.2003.m #Measles
		trigger = {
			OR = {
				AND = {
					theiler_has_measles_pathogen_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_measles_pathogen_trigger = yes
					}
				}
				AND = {
					theiler_has_measles_vaccine_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_measles_vaccine_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				theiler_has_measles_pathogen_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_measles_pathogen_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_measles_pathogen_effect_tt
				set_variable = theiler_measles_pathogen_var
			}
		}
		if = {
			limit = {
				theiler_has_measles_vaccine_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_measles_vaccine_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_measles_vaccine_effect_tt
				set_variable = theiler_measles_vaccine_var
			}
		}
	
		ai_chance = {
			base = 3
		}
	}

	option = { 
		name = panum.2003.n #Scarlet
		trigger = {
			OR = {
				AND = {
					theiler_has_scarlet_pathogen_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_scarlet_pathogen_trigger = yes
					}
				}
				AND = {
					theiler_has_scarlet_vaccine_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_scarlet_vaccine_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				theiler_has_scarlet_pathogen_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_scarlet_pathogen_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_scarlet_pathogen_effect_tt
				set_variable = theiler_scarlet_pathogen_var
			}
		}
		if = {
			limit = {
				theiler_has_scarlet_vaccine_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_scarlet_vaccine_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_scarlet_vaccine_effect_tt
				set_variable = theiler_scarlet_vaccine_var
			}
		}
	
		ai_chance = {
			base = 2
		}
	}

	option = { 
		name = panum.2003.o #Plague
		trigger = {
			OR = {
				AND = {
					theiler_has_plague_pathogen_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_plague_pathogen_trigger = yes
					}
				}
				AND = {
					theiler_has_plague_vaccine_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_plague_vaccine_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				theiler_has_plague_pathogen_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_plague_pathogen_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_plague_pathogen_effect_tt
				set_variable = theiler_plague_pathogen_var
			}
		}
		if = {
			limit = {
				theiler_has_plague_vaccine_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_plague_vaccine_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_plague_vaccine_effect_tt
				set_variable = theiler_plague_vaccine_var
			}
		}
	
		ai_chance = {
			base = 3
		}
	}

	option = { 
		name = panum.2003.p #Diphteria
		trigger = {
			OR = {
				AND = {
					theiler_has_diphteria_pathogen_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_diphteria_pathogen_trigger = yes
					}
				}
				AND = {
					theiler_has_diphteria_vaccine_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_diphteria_vaccine_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				theiler_has_diphteria_pathogen_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_diphteria_pathogen_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_diphteria_pathogen_effect_tt
				set_variable = theiler_diphteria_pathogen_var
			}
		}
		if = {
			limit = {
				theiler_has_diphteria_vaccine_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_diphteria_vaccine_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_diphteria_vaccine_effect_tt
				set_variable = theiler_diphteria_vaccine_var
			}
		}
	
		ai_chance = {
			base = 2
		}
	}

	option = { 
		name = panum.2003.q #Polio
		trigger = {
			OR = {
				AND = {
					theiler_has_polio_pathogen_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_polio_pathogen_trigger = yes
					}
				}
				AND = {
					theiler_has_polio_vaccine_trigger = no
					any_country = {
						has_modifier = panum_congress_attend_modifier
						NOT = {
							this = ROOT
						}
						theiler_has_polio_vaccine_trigger = yes
					}
				}
			}
		}
		if = {
			limit = {
				theiler_has_polio_pathogen_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_polio_pathogen_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_polio_pathogen_effect_tt
				set_variable = theiler_polio_pathogen_var
			}
		}
		if = {
			limit = {
				theiler_has_polio_vaccine_trigger = no
				any_country = {
					has_modifier = panum_congress_attend_modifier
					NOT = {
						this = ROOT
					}
					theiler_has_polio_vaccine_trigger = yes
				}
			}
			custom_tooltip = {
				text = theiler_add_polio_vaccine_effect_tt
				set_variable = theiler_polio_vaccine_var
			}
		}
	
		ai_chance = {
			base = 2
		}
	}

	option = { 
		name = panum.2004.g #The doctor should gather some general medical knowledge from colleagues.
		default_option = yes
		panum_small_add_technology = yes

		ai_chance = {
			base = 1
		}
	}

	after = {
		trigger_event = {
			id = panum.2005
			days = { 14 28 }
		}
	}
}

#Panum 2005: Medical Congress - Topic
panum.2005 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2005.t
	desc = {
		triggered_desc = {
			trigger = {
				any_country = {
					has_modifier = panum_congress_host_modifier
					has_variable = panum_medical_congress_general_var
				}
			}
			desc = panum.2005.d_general
		}
		triggered_desc = {
			trigger = {
				NOT = {
					any_country = {
						has_modifier = panum_congress_host_modifier
						has_variable = panum_medical_congress_general_var
					}
				}
			}
			desc = panum.2005.d_special
		}
	}
	flavor = panum.2005.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/panum_pictures/panum_medical_congress.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
		random_country = {
			limit = {
				has_modifier = panum_congress_host_modifier
			}
			save_scope_as = panum_congress_host_country
		}
	}

	option = { 
		name = panum.2005.g #The event was worth it.
		physician_experience_gain_effect = { AMOUNT = 10 }
		biologist_experience_gain_effect = { AMOUNT = 10 }
		panum_add_medical_congress_clues_effect = yes
	}

	after = {
		if = {
			limit = {
				panum_has_miasma_theory_trigger = yes
			}
			trigger_event = {
				id = panum.2006
				days = { 14 28 }
			}
		}
		else = {
			trigger_event = {
				id = panum.2009
				days = { 60 90 }
			}
		}
	}
}

#Panum 2006: Medical Congress - Germ Theory
panum.2006 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2006.t
	desc = panum.2006.d
	flavor = panum.2006.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/panum_pictures/panum_germ_theory.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
		random_country = {
			limit = {
				has_modifier = panum_congress_host_modifier
			}
			save_scope_as = panum_congress_host_country
		}
	}

	option = { 
		name = panum.2006.g #This evidence cannot be dismissed out of hand.
		if = {
			limit = {
				has_modifier = panum_congress_host_modifier
			}
			panum_add_x_germ_theory_clues_effect = { AMOUNT = 3 }
		}
		else = {
			panum_add_x_germ_theory_clues_effect = { AMOUNT = 2 }
		}
	}

	after = {
	}
}

#Panum 2009: Medical Congress - End
panum.2009 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2009.t
	desc = panum.2009.d
	flavor = panum.2009.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/panum_pictures/panum_medical_congress.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
		random_country = {
			limit = {
				has_modifier = panum_congress_host_modifier
			}
			save_scope_as = panum_congress_host_country
		}
	}

	option = { 
		name = panum.2009.g #Did you enjoy the buffet?
		remove_modifier = panum_congress_attend_modifier
	}

	after = {
	}
}

##############################################################################################################

#Panum 2101: Medical System Expanded
panum.2101 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2101.t

	desc = panum.2101.d

	flavor = panum.2101.f
	
	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:panum_physician_scope

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
	}

	option = {	#Back to work
		name = panum.2101.g
		var:panum_physician_var = {
			set_character_busy_and_immortal = no
		}
	}

	after = {
	}
}

#Panum 2102: Specialist Clinic in STATE
panum.2102 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2102.t

	desc = panum.2102.d

	flavor = panum.2102.f

	placement = scope:panum_clinic_state
	
	duration = 3

	event_image = {
		texture = "gfx/event_pictures/panum_pictures/panum_clinic.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
		NOT = {
			has_variable = panum_first_clinic_opened_var
		}
		any_scope_state = {
			has_building = building_government_administration
			any_scope_building = {
				is_building_type = building_government_administration
				level >= 5
				has_active_production_method = pm_panum_clinic
			}
		}
	}

	immediate = {
		set_variable = panum_first_clinic_opened_var
		random_scope_state = {
			limit = {
				has_building = building_government_administration
				any_scope_building = {
					is_building_type = building_government_administration
					level >= 5
					has_active_production_method = pm_panum_clinic
				}
			}
			save_scope_as = panum_clinic_state
		}
	}

	option = {	#Surgery
		name = panum.2102.g
		default_option = yes
		var:panum_physician_var ?= {
			add_trait = panum_surgeon
		}
		dubois_add_x_academy_progress = { AMOUNT = 25 }
	}

	option = {	#Psychiatry
		name = panum.2102.h
		var:panum_physician_var ?= {
			add_trait = panum_psychiatrist
		}
		dubois_add_x_academy_progress = { AMOUNT = 25 }
	}

	option = {	#Epidemiology
		name = panum.2102.i
		var:panum_physician_var ?= {
			add_trait = panum_epidemiologist
		}
		dubois_add_x_academy_progress = { AMOUNT = 25 }
	}

	option = {	#Military Medicine
		name = panum.2102.j
		var:panum_physician_var ?= {
			add_trait = panum_military_physician
		}
		dubois_add_x_academy_progress = { AMOUNT = 25 }
	}

	after = {
	}
}

#Panum 2103: Hospital in STATE
panum.2103 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2103.t

	desc = panum.2103.d

	flavor = panum.2103.f

	placement = scope:panum_clinic_state
	
	duration = 3

	event_image = {
		texture = "gfx/event_pictures/panum_pictures/panum_clinic.dds"
	}

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	trigger = {
		NOT = {
			has_variable = panum_first_hospital_opened_var
		}
		any_scope_state = {
			has_building = building_government_administration
			any_scope_building = {
				is_building_type = building_government_administration
				level >= 5
				has_active_production_method = pm_panum_hospital
			}
		}
	}

	immediate = {
		set_variable = panum_first_hospital_opened_var
		random_scope_state = {
			limit = {
				has_building = building_government_administration
				any_scope_building = {
					is_building_type = building_government_administration
					level >= 5
					has_active_production_method = pm_panum_hospital
				}
			}
			save_scope_as = panum_clinic_state
		}
	}

	option = {	#Bravo!
		name = panum.2103.g
		panum_small_add_technology = yes
		dubois_add_x_academy_progress = { AMOUNT = 50 }
	}

	after = {
	}
}

###############################################################################################################

#Panum 2201: Medical Research - Germ Theory
panum.2201 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2201.t
	desc = panum.2201.d
	flavor = panum.2201.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/panum_pictures/panum_germ_theory.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
	}

	option = { 
		name = panum.2201.g #So the miasma theory is questionable?
		random_list = {
			1 = { panum_add_x_germ_theory_clues_effect = { AMOUNT = 4 } }
			2 = { panum_add_x_germ_theory_clues_effect = { AMOUNT = 3 } }
			1 = { panum_add_x_germ_theory_clues_effect = { AMOUNT = 2 } }
		}
	}

	after = {
	}
}

#Panum 2202: Ancient Disease
panum.2202 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2202.t
	desc = panum.2202.d
	flavor = panum.2202.f

	duration = 3

	gui_window = event_window_2char

	left_icon = scope:panum_physician_scope
	right_icon = scope:lepsius_anthropologist_scope

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	cooldown = {
		years = 10 #Should not happen for a while
	}

	trigger = {
		lepsius_has_anthropologist = yes
	}

	immediate = {
		set_variable = panum_treatment_search_ongoing_var #We try to have only one event at a time
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		var:lepsius_anthropologist_var = {
			save_scope_as = lepsius_anthropologist_scope
		}
	}

	option = { 
		name = panum.2202.g #Cross-disciplinary science remains the best science.
		panum_small_add_technology = yes
	}

	after = {
	}
}

#Panum 2203: Strange Medicine
panum.2203 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2203.t
	desc = panum.2203.d
	flavor = panum.2203.f

	duration = 3

	gui_window = event_window_2char

	left_icon = scope:panum_physician_scope
	right_icon = scope:lepsius_archaeologist_scope

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	cooldown = {
		years = 10 #Should not happen for a while
	}

	trigger = {
		lepsius_has_archaeologist = yes
	}

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		var:lepsius_archaeologist_var = {
			save_scope_as = lepsius_archaeologist_scope
		}
	}

	option = { 
		name = panum.2203.g #Cross-disciplinary science remains the best science.
		panum_small_add_technology = yes
	}

	after = {
	}
}

#Panum 2204: Herbal Remedies?
panum.2204 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2204.t
	desc = panum.2204.d
	flavor = panum.2204.f

	duration = 3

	gui_window = event_window_2char

	left_icon = scope:panum_physician_scope
	right_icon = scope:dubois_naturalist_scope

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	cooldown = {
		years = 10 #Should not happen for a while
	}

	trigger = {
		dubois_has_naturalist = yes
	}

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
		var:dubois_naturalist_var = {
			save_scope_as = dubois_naturalist_scope
		}
	}

	option = { 
		name = panum.2204.g #Cross-disciplinary science remains the best science.
		panum_small_add_technology = yes
	}

	after = {
	}
}

###############################################################################################################

#Panum 2301: Successful Treatment
panum.2301 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2301.t
	desc = panum.2301.d
	flavor = panum.2301.f

	duration = 3

	gui_window = event_window_2char

	left_icon = scope:panum_physician_scope
	right_icon = scope:chosen_character

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
		var:panum_physician_var ?= {
			save_scope_as = panum_physician_scope
		}
		panum_add_successful_treatment_effect = yes
	}

	option = { 
		name = panum.2301.g #Good!

		physician_experience_gain_effect = { AMOUNT = 5 }
	}

	after = {
	}
}

#Panum 2302: Neutral Treatment
panum.2302 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2302.t
	desc = panum.2302.d
	flavor = panum.2302.f

	duration = 3

	gui_window = event_window_2char

	left_icon = scope:panum_physician_scope
	right_icon = scope:chosen_character

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
	}

	option = { 
		name = panum.2302.g #At least it didn't hurt.

		physician_experience_gain_effect = { AMOUNT = 2 }
	}

	after = {
	}
}

#Panum 2303: Botched Treatment
panum.2303 = {
	dlc = dlc_morgenrote

	type = country_event

	title = panum.2303.t
	desc = panum.2303.d
	flavor = panum.2303.f

	duration = 3

	gui_window = event_window_2char

	left_icon = scope:panum_physician_scope
	right_icon = scope:chosen_character

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_medicine.dds"

	immediate = {
		var:panum_physician_var = {
			save_scope_as = panum_physician_scope
		}
	}

	option = { 
		name = panum.2303.g #This should not have happened!
	
	}

	after = {
	}
}

