##################
# SPORTS EVENTS  #
##################

#by Lord R & Marco Dandolo

###################

namespace = vikelas

###################

###Events 10-20: Olympic Statistics###

#Vikelas 10: International Olympic Committee
#Vikelas 11: Olympic Medal Table

#################################################################################

###Events 100-199: Olympic Games###

#Events 100-110: First Olympic Games Organisation

#Vikelas 100: IOC Foundation
#Vikelas 101: First IOC Board Election (hidden)
#Vikelas 102: IOC meets for the first time
#Vikelas 103: IOC decides: Greece as permanent seat of the Games?
#Vikelas 104: IOC informs: Greece permanent seat of the Games
#Vikelas 105: IOC decides: Greece will host the First Olympic Games
#Vikelas 106: First Olympic Games begin
#Vikelas 107: First Olympic Games begin (for player)
#Vikelas 108: First Olympic Games end
#Vikelas 109: Olympic Games in Greece (Again)
#Vikelas 110: Olympic Enthusiasm

#Events 111-120: Standard Olympic Games Organisation

#Vikelas 111: IOC Board Election (hidden)
#Vikelas 112: New IOC Board elected
#Vikelas 113: Next Olympics Location
#Vikelas 114: IOC decides: $COUNTRY$ will host the next Olympic Games (President)
#Vikelas 115: IOC decides: $COUNTRY$ will host the next Olympic Games (Player)
#Vikelas 116: Olympic Games begin
#Vikelas 117: Olympic Games begin (for player)
#Vikelas 118: Olympic Games end
#Vikelas 119: IOC decides: Olympic Games in $FOUNDATION COUNTRY$
#Vikelas 120: IOC meets for the first time in $FOUNDATION COUNTRY$

#Events 121-180: Flavor Events during the Olympics

#Vikelas 121: The Communist Gymnastic athlete
#Vikelas 122: The Reactionary Tennis Chap
#Vikelas 123: Athlete misses event because of calender (participants)
#Vikelas 124: Honorable Cyclist (participants)
#Vikelas 125: Cyclist hit by a car (participants)
#Vikelas 126: Mass accident in street race (participants)
#Vikelas 127: Drunken Cyclist (participants)
#Vikelas 128: Free Beer! (participants)
#Vikelas 129: Schwingerkönig wins Wrestling Event (participants)
#Vikelas 130: Tug of war (participants)

#Events for Random Characters

#Vikelas 131: The Fencing/Shooting/Riding General (participants)
#Vikelas 132: The Rowing/Sailing/Swimming Admiral (participants)
#Vikelas 133: The Boxing/Wrestling/Archery Politician (participants)
#Vikelas 134: The Champion (participants)

#Events for Organizers

#Vikelas 141: No Sailboats! (organizer)
#Vikelas 142: Rigged Football Match? (organizer)
#Vikelas 143: The New Legend of Marathon (organizer)
#Vikelas 144: Well organized games (organizer)
#Vikelas 144: A celebrated host (organizer)

#Events for Notifications

#Vikelas 151: Sailboat Notification (participants)

#Events 181-189: Other Olympic Events

#Vikelas 181: The Lighting of the Olympic Flame
#Vikelas 182: Olympic Torch in $COUNTRY$
#Vikelas 183: The Olympic Flame

#Events 190-199: Other Events to keep the Olympic Games stable

#Vikelas 190: New IOC (hidden)
#Vikelas 191: The IOC in Switzerland (or others)

###Events 300-399: Football, Baseball, Cricket###

#Vikelas 301: Football Club in $STATE$
#Vikelas 302: Rival Football Club in $STATE$
#Vikelas 303: Football Association

#Vikelas 311: Baseball Club in $STATE$
#Vikelas 321: Cricket Club in $STATE$

#################################################################################

#Vikelas 10: International Olympic Committee

vikelas.10 = {
	type = country_event

	title = vikelas.10.t
	desc = vikelas.10.d

	flavor = {
		desc = vikelas.10.president
		desc = vikelas.10.president_nation
		desc = vikelas.10.board
		desc = vikelas.10.board_nations
		desc = vikelas.10.members
		desc = vikelas.10.members_nations
		desc = vikelas.10.next_games
		desc = {
			triggered_desc = {
				trigger = {
					any_country = {
						has_modifier = vikelas_olympics_preparation_modifier
					}
				}
				desc = vikelas.10.next_games_nation
			}
			triggered_desc = {
				trigger = {
					NOT = {
						any_country = {
							has_modifier = vikelas_olympics_preparation_modifier
						}
					}
				}
				desc = vikelas.10.next_games_nation_undecided
			}
			triggered_desc = {
				trigger = {
					any_country = {
						has_modifier = vikelas_our_games_our_rules_modifier
					}
				}
				desc = vikelas.10.next_games_greece
			}
		}
	}

	duration = 3

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	immediate = {
		random_country = {
			limit = {
				has_variable = vikelas_ioc_founding_country_var
			}
			save_scope_as = vikelas_ioc_president_scope
		}
		random_country = {
			limit = {
				has_modifier = vikelas_olympics_preparation_modifier
			}
			save_scope_as = vikelas_next_games_country_scope
		}
		random_country = {
			limit = {
				has_modifier = vikelas_our_games_our_rules_modifier
			}
			save_scope_as = vikelas_next_games_greece_scope
		}
		vikelas_calculate_number_participants_effect = yes
		vikelas_ioc_board_members_effect = yes
	}

	#Show me the Olympic Medal Table.
	option = {
		name = vikelas.10.g
		trigger_event = {
			id = vikelas.11
			popup = yes
		}
	}

	#Bye
	option = {
		name = vikelas.10.h
		default_option = yes
		remove_variable = vikelas_ioc_statistics_var
		custom_tooltip = vikelas_leave_ioc_statistics_tt
	}
}

#Vikelas 11: Olympic Medal Table

vikelas.11 = {
	type = country_event

	title = vikelas.11.t
	desc = vikelas.11.d
	flavor = vikelas.11.f

	duration = 3

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_end.dds"
	}

	immediate = {
		vikelas_gold_medal_ranking_global_effect = yes
		vikelas_olympic_rank_effect = yes
	}

	#Back to the IOC
	option = {
		name = vikelas.11.g
		trigger_event = {
			id = vikelas.10
			popup = yes
		}
	}

	#Bye
	option = {
		name = vikelas.10.h
		default_option = yes
		remove_variable = vikelas_ioc_statistics_var
		custom_tooltip = vikelas_leave_medal_table_tt
	}
}

#################################################################################

######IOC Events######

#Vikelas 100: IOC Foundation

vikelas.100 = {
	type = country_event

	title = vikelas.100.t
	desc = vikelas.100.d
	flavor = vikelas.100.f

	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:vikelas_ioc_president_scope

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		if = {
			limit = {
				lepsius_has_archaeologist = yes
			}
			var:lepsius_archaeologist_var = {
				save_scope_as = vikelas_ioc_president_scope
			}
		}
		else_if = {
			limit = {
				lepsius_has_anthropologist = yes
			}
			var:lepsius_anthropologist_var = {
				save_scope_as = vikelas_ioc_president_scope
			}
		}
		else_if = {
			limit = {
				dubois_has_naturalist = yes
			}
			var:dubois_naturalist_var = {
				save_scope_as = vikelas_ioc_president_scope
			}
		}
		else_if = {
			limit = {
				dubois_has_paleontologist = yes
			}
			var:dubois_paleontologist_var = {
				save_scope_as = vikelas_ioc_president_scope
			}
		}
		else_if = {
			limit = {
				verrier_has_astronomer = yes
			}
			var:verrier_astronomer_var = {
				save_scope_as = vikelas_ioc_president_scope
			}
		}
		else_if = {
			limit = {
				gaudi_has_engineer = yes
			}
			var:gaudi_engineer_var = {
				save_scope_as = vikelas_ioc_president_scope
			}
		}
	}

	option = {
		name = vikelas.100.g
		default_option = yes
		scope:vikelas_ioc_president_scope = {
			set_variable = vikelas_pierre_de_coubertin_var
			add_modifier = {
				name = vikelas_ioc_president_modifier
			}
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		trigger_event = {
			id = vikelas.101
			days = { 30 60 }
		}
	}
}

#Vikelas 101: First IOC Board Election (hidden)

vikelas.101 = {
	type = country_event

	hidden = yes

	#The Board consists of:
	#The Founder Country
	#The President Country (if President and Founder are not the same)
	#Five Greater Powers which are neither Founder nor President
	#Two Random IOC Members from Europe
	#Two Random IOC Members from America
	#Two Random IOC Members from Asia
	#One Random IOC Member from Africa
	#One Random IOC Member from Australia&Oceania
	#A total of 15 Board Members is possible 

	immediate = {
		###First: We fire every Board Member for a new Board###
		every_country = {
			limit = {
				has_variable = vikelas_ioc_board_member_var
			}
			remove_variable = vikelas_ioc_board_member_var
		}
		###The Founder has always a seat on the Board###
		random_country = {
			limit = {
				has_variable = vikelas_ioc_founding_country_var
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###Five Great Powers are part of the Board###
		random_country = {
			limit = {
				country_rank = rank_value:great_power
				NOR = {
					has_variable = vikelas_ioc_board_member_var
					has_variable = vikelas_ioc_founding_country_var
				}
			}
			set_variable = vikelas_ioc_board_member_var
			set_variable = vikelas_ioc_member_var
		}
		random_country = {
			limit = {
				country_rank = rank_value:great_power
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
			}
			set_variable = vikelas_ioc_board_member_var
			set_variable = vikelas_ioc_member_var
		}
		random_country = {
			limit = {
				country_rank = rank_value:great_power
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
			}
			set_variable = vikelas_ioc_board_member_var
			set_variable = vikelas_ioc_member_var
		}
		random_country = {
			limit = {
				country_rank = rank_value:great_power
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
			}
			set_variable = vikelas_ioc_board_member_var
			set_variable = vikelas_ioc_member_var
		}
		random_country = {
			limit = {
				country_rank = rank_value:great_power
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
			}
			set_variable = vikelas_ioc_board_member_var
			set_variable = vikelas_ioc_member_var
		}
		###Greece becomes IOC Board Member (only first time)###
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				c:GRE ?= this
			}
			set_variable = vikelas_ioc_board_member_var
			set_variable = vikelas_ioc_member_var
		}
		###Two Random IOC Members from Europe###
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				country_is_in_europe = yes
			}
			set_variable = vikelas_ioc_board_member_var
		}
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				country_is_in_europe = yes
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###Two Random IOC Members from America###
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				OR = {
					country_is_in_north_america = yes
					country_is_in_central_america = yes
					country_is_in_south_america = yes
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				OR = {
					country_is_in_north_america = yes
					country_is_in_central_america = yes
					country_is_in_south_america = yes
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###Two Random IOC Members from Asia###
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				OR = {
					country_is_in_middle_east = yes
					country_is_in_central_asia = yes
					country_is_in_india = yes
					country_is_in_east_asia = yes
					country_is_in_southeast_asia = yes
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				OR = {
					country_is_in_middle_east = yes
					country_is_in_central_asia = yes
					country_is_in_india = yes
					country_is_in_east_asia = yes
					country_is_in_southeast_asia = yes
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###One Random IOC Member from Africa###
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				country_is_in_africa = yes
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###One Random IOC Member from Australia&Oceania###
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				rapanui_country_is_in_oceania = yes
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###Trigger Event###
		if = {
			limit = {
				c:GRE ?= {
					has_variable = vikelas_ioc_founding_country_var
				}
			}
			trigger_event = {
				id = vikelas.103
				days = 1
			}
		}
		else_if = {
			limit = {
				NOT = {
					exists = c:GRE
				}
			}
			trigger_event = {
				id = vikelas.119
				days = 1
			}
		}
		else = {
			every_country = {
				limit = {
					has_variable = vikelas_ioc_board_member_var
				}
				trigger_event = {
					id = vikelas.102
					days = 1
				}
			}
		}
	}

	after = {
		
	}
}

#Vikelas 102: IOC meets for the first time

vikelas.102 = {
	type = country_event

	title = vikelas.102.t
	desc = vikelas.102.d
	flavor = vikelas.102.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		random_character = {
			limit = {
				has_variable = vikelas_pierre_de_coubertin_var
			}
			save_scope_as = vikelas_ioc_president_scope
		}
	}

	option = {
		name = vikelas.102.g
		default_option = yes
		if = {
			limit = {
				NOT = {
					has_technology_researched = organized_sports
				}
				c:GRE ?= this
			}
			add_technology_researched = organized_sports
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = organized_sports
				}
			}
			add_technology_progress = { progress = 8500 technology = organized_sports }
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		trigger_event = {
			id = vikelas.105
			days = { 7 21 }
		}
	}
}

#Vikelas 103: IOC decides: Greece as permanent seat of the Games?

vikelas.103 = {
	type = country_event

	title = vikelas.103.t
	desc = vikelas.103.d
	flavor = vikelas.103.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		random_character = {
			limit = {
				has_variable = vikelas_pierre_de_coubertin_var
			}
			save_scope_as = vikelas_ioc_president_scope
		}
	}

	option = {
		name = vikelas.103.g #Our Games, our Rules
		default_option = yes
		add_modifier = {
			name = vikelas_our_games_our_rules_modifier
		}
		add_modifier = {
			name = vikelas_olympics_preparation_modifier
			days = 776
		}
		hidden_effect = {
			trigger_event = {
				id = vikelas.106
				popup = yes
				days = 776
			}
		}
		every_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
				NOT = { this = ROOT }
			}
			change_relations = {
				country = ROOT 
				value = -5
			}
			trigger_event = {
				id = vikelas.104
			}
		}

		ai_chance = {
			base = 90
		}
	}

	option = {
		name = vikelas.103.h #The Games should belong to the world
		change_infamy = -15
		every_country = {
			limit = {
				has_variable = vikelas_ioc_board_member_var
			}
			change_relations = {
				country = ROOT 
				value = 5
			}
			trigger_event = {
				id = vikelas.102
				days = 1
			}
		}

		ai_chance = {
			base = 10
		}
	}

	after = {
	}
}

#Vikelas 104: IOC informs: Greece permanent seat of the Games

vikelas.104 = {
	type = country_event

	title = vikelas.104.t
	desc = vikelas.104.d
	flavor = vikelas.104.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		random_character = {
			limit = {
				has_variable = vikelas_pierre_de_coubertin_var
			}
			save_scope_as = vikelas_ioc_president_scope
		}
	}

	option = {
		name = vikelas.104.g #Their Games, Their Rules ...
		default_option = yes
		if = {
			limit = {
				NOT = {
					has_technology_researched = organized_sports
				}
			}
			add_technology_progress = { progress = 8500 technology = organized_sports }
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 105: IOC decides: Greece will host the First Olympic Games

vikelas.105 = {
	type = country_event

	title = vikelas.105.t
	desc = vikelas.105.d
	flavor = vikelas.105.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
	}

	option = {
		name = vikelas.105.g
		default_option = yes
		if = {
			limit = {
				c:GRE ?= this
			}
			add_modifier = {
				name = vikelas_olympics_preparation_modifier
				days = 776
			}
			hidden_effect = {
				trigger_event = {
					id = vikelas.106
					popup = yes
					days = 776
				}
			}
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 106: First Olympic Games begin

vikelas.106 = {
	type = country_event

	title = vikelas.106.t
	desc = vikelas.106.d
	flavor = vikelas.106.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_athens.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		set_global_variable = {
			name = vikelas_olympic_games_number_global_var
			value = 1
		}
		vikelas_calculate_number_participants_effect = yes
	}

	option = {
		name = vikelas.106.g #The Games are coming home!
		default_option = yes
		random_scope_state = {
			limit = {
				is_capital = yes
			}
			add_modifier = {
				name = vikelas_olympics_hosting_modifier
			}
		}
		add_journal_entry = {
			type = je_vikelas_olympic_games_host_greece
		}
		every_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
				is_player = yes
				NOT = { this = ROOT }
			}
			trigger_event = {
				id = vikelas.107
			}
		}
		hidden_effect = {
			every_country = {
				limit = {
					has_variable = vikelas_ioc_member_var
					NOT = { this = ROOT }
				}
				add_journal_entry = {
					type = je_vikelas_olympic_games_member_greece
				}
			}
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 107: First Olympic Games begin (for player)

vikelas.107 = {
	type = country_event

	title = vikelas.106.t
	desc = {
		triggered_desc = {
			trigger = {
				global_var:vikelas_olympic_games_number_global_var = 1
			}
			desc = vikelas.106.d
		}
		triggered_desc = {
			trigger = {
				global_var:vikelas_olympic_games_number_global_var >= 2
			}
			desc = vikelas.109.d
		}
	}
	flavor = {
		triggered_desc = {
			trigger = {
				global_var:vikelas_olympic_games_number_global_var = 1
			}
			desc = vikelas.106.f
		}
		triggered_desc = {
			trigger = {
				global_var:vikelas_olympic_games_number_global_var >= 2
			}
			desc = vikelas.109.f
		}
	}

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_athens.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		random_scope_state = {
			limit = {
				has_modifier = vikelas_olympics_hosting_modifier
			}
			save_scope_as = vikelas_olympic_state
		}
		vikelas_calculate_number_participants_effect = yes
	}

	option = {
		name = vikelas.107.g #The Games are coming home!
		default_option = yes

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 108: First Olympic Games end

vikelas.108 = {
	type = country_event

	title = vikelas.108.t
	desc = vikelas.108.d
	flavor = vikelas.108.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_athens.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		vikelas_medals_of_this_olympia_effect = yes
		vikelas_replace_olympic_prestige_modifier_effect = yes #Replaces the olympic prestige modfier
	}

	option = {
		name = vikelas.108.g #Citius, altius, fortius
		default_option = yes

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 109: Olympic Games in Greece (Again)

vikelas.109 = {
	type = country_event

	title = vikelas.106.t
	desc = vikelas.109.d
	flavor = vikelas.109.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_athens.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		change_global_variable = {
			name = vikelas_olympic_games_number_global_var
			add = 1
		}
	}

	option = {
		name = vikelas.116.g #Let The Games Begin!
		default_option = yes
		random_scope_state = {
			limit = {
				is_capital = yes
			}
			add_modifier = {
				name = vikelas_olympics_hosting_modifier
			}
		}
		add_journal_entry = {
			type = je_vikelas_olympic_games_host_greece
		}
		every_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
				is_player = yes
				NOT = { this = ROOT }
			}
			trigger_event = {
				id = vikelas.107
			}
		}
		hidden_effect = {
			every_country = {
				limit = {
					has_variable = vikelas_ioc_member_var
					NOT = { this = ROOT }
				}
				add_journal_entry = {
					type = je_vikelas_olympic_games_member
				}
			}
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 110: Olympic Enthusiasm

vikelas.110 = {
	type = country_event

	title = vikelas.110.t
	desc = vikelas.110.d
	flavor = vikelas.110.f

	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:vikelas_olympics_enthusiast_scope

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
		NOT = {
			has_variable = vikelas_ioc_member_var
		}
		c:GRE ?= {
			has_modifier = vikelas_olympics_preparation_modifier
		}
		OR = {
			dubois_has_active_naturalist = yes
			lepsius_has_active_archaeologist = yes
			lepsius_has_active_anthropologist = yes
		}
		is_at_war = no
		NOT = {
			is_country_type = unrecognized
		}
		has_technology_researched = nationalism
	}

	immediate = {
		if = {
			limit = {
				lepsius_has_archaeologist = yes
			}
			var:lepsius_archaeologist_var = {
				save_scope_as = vikelas_olympics_enthusiast_scope
			}
		}
		else_if = {
			limit = {
				lepsius_has_anthropologist = yes
			}
			var:lepsius_anthropologist_var = {
				save_scope_as = vikelas_olympics_enthusiast_scope
			}
		}
		else_if = {
			limit = {
				dubois_has_naturalist = yes
			}
			var:dubois_naturalist_var = {
				save_scope_as = vikelas_olympics_enthusiast_scope
			}
		}
	}

	option = {
		name = vikelas.110.g
		default_option = yes
		custom_tooltip = {
			text = vikelas_become_ioc_member_tt
			set_variable = vikelas_ioc_member_var
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 111: IOC Board Election (hidden)

vikelas.111 = {
	type = country_event

	hidden = yes

	immediate = {
		###First: We fire every Board Member for a new Board###
		every_country = {
			limit = {
				has_variable = vikelas_ioc_board_member_var
			}
			remove_variable = vikelas_ioc_board_member_var
		}
		###The Founder has always a seat on the Board###
		random_country = {
			limit = {
				has_variable = vikelas_ioc_founding_country_var
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###Five Great Powers which are also IOC Members are part of the Board###
		random_country = {
			limit = {
				country_rank = rank_value:great_power
				has_variable = vikelas_ioc_member_var
				NOR = {
					has_variable = vikelas_ioc_board_member_var
					has_variable = vikelas_ioc_founding_country_var
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		random_country = {
			limit = {
				country_rank = rank_value:great_power
				has_variable = vikelas_ioc_member_var
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		random_country = {
			limit = {
				country_rank = rank_value:great_power
				has_variable = vikelas_ioc_member_var
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		random_country = {
			limit = {
				country_rank = rank_value:great_power
				has_variable = vikelas_ioc_member_var
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		random_country = {
			limit = {
				country_rank = rank_value:great_power
				has_variable = vikelas_ioc_member_var
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###Two Random IOC Members from Europe###
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				country_is_in_europe = yes
			}
			set_variable = vikelas_ioc_board_member_var
		}
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				country_is_in_europe = yes
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###Two Random IOC Members from America###
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				OR = {
					country_is_in_north_america = yes
					country_is_in_central_america = yes
					country_is_in_south_america = yes
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				OR = {
					country_is_in_north_america = yes
					country_is_in_central_america = yes
					country_is_in_south_america = yes
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###Two Random IOC Members from Asia###
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				OR = {
					country_is_in_middle_east = yes
					country_is_in_central_asia = yes
					country_is_in_india = yes
					country_is_in_east_asia = yes
					country_is_in_southeast_asia = yes
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				OR = {
					country_is_in_middle_east = yes
					country_is_in_central_asia = yes
					country_is_in_india = yes
					country_is_in_east_asia = yes
					country_is_in_southeast_asia = yes
				}
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###One Random IOC Members from Africa###
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				country_is_in_africa = yes
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###One Random IOC Members from Australia&Oceania###
		random_country = {
			limit = {
				NOT = {
					has_variable = vikelas_ioc_board_member_var
				}
				has_variable = vikelas_ioc_member_var
				rapanui_country_is_in_oceania = yes
			}
			set_variable = vikelas_ioc_board_member_var
		}
		###Trigger Event###
		random_country = {
			limit = {
				has_variable = vikelas_ioc_founding_country_var
			}
			trigger_event = {
				id = vikelas.112
				days = 1
			}
			trigger_event = { #This will ensure that the Board will be re-elected every four years
				id = vikelas.111
				days = 1460
			}
		}
		###Set Variables###
		set_global_variable = {
			name = vikelas_olympics_candidate_1_votes
			value = 0
		}
		set_global_variable = {
			name = vikelas_olympics_candidate_2_votes
			value = 0
		}
		set_global_variable = {
			name = vikelas_olympics_candidate_3_votes
			value = 0
		}
		set_global_variable = {
			name = vikelas_olympics_candidate_4_votes
			value = 0
		}
	}

	after = {
	}
}

#Vikelas 112: New IOC Board elected

vikelas.112 = {
	type = country_event

	title = vikelas.112.t
	desc = vikelas.112.d
	flavor = vikelas.112.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		
		random_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
				NOT = {
					has_modifier = vikelas_olympics_hosted_modifier
				}
				country_rank = rank_value:great_power
			}
			set_variable = vikelas_olympics_candidate_1_var
		}
		random_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
				NOT = {
					has_modifier = vikelas_olympics_hosted_modifier
				}
				NOT = {
					has_variable = vikelas_olympics_candidate_1_var
				}
				country_rank = rank_value:major_power
			}
			set_variable = vikelas_olympics_candidate_2_var
		}
		random_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
				NOT = {
					has_modifier = vikelas_olympics_hosted_modifier
				}
				NOR = {
					has_variable = vikelas_olympics_candidate_1_var
					has_variable = vikelas_olympics_candidate_2_var
				}
				any_scope_building = {
					is_building_type = building_government_administration
					has_active_production_method = pm_vikelas_sports_facilities
				}
			}
			set_variable = vikelas_olympics_candidate_3_var
		}
		random_country = {
			limit = {
				has_modifier = vikelas_olympics_bribed_modifier
				NOT = {
					has_modifier = vikelas_olympics_hosted_modifier
				}
				NOR = {
					has_variable = vikelas_olympics_candidate_1_var
					has_variable = vikelas_olympics_candidate_2_var
					has_variable = vikelas_olympics_candidate_3_var
				}
			}
			set_variable = vikelas_olympics_candidate_4_var
		}
		random_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
				NOT = {
					has_modifier = vikelas_olympics_hosted_modifier
				}
				NOR = {
					has_variable = vikelas_olympics_candidate_1_var
					has_variable = vikelas_olympics_candidate_2_var
					has_variable = vikelas_olympics_candidate_3_var
					has_variable = vikelas_olympics_candidate_4_var
				}
			}
			set_variable = vikelas_fallback_candidate_var
		}
	}

	option = {
		name = vikelas.102.g
		default_option = yes

		ai_chance = {
			base = 100
		}
	}

	after = {
		every_country = {
			limit = {
				has_variable = vikelas_ioc_board_member_var
			}
			trigger_event = {
				id = vikelas.113
				days = 90
			}
		}
		random_country = {
			limit = {
				has_variable = vikelas_ioc_founding_country_var
			}
			trigger_event = {
				id = vikelas.114
				days = 200
			}
		}
	}
}

#Vikelas 113: Next Olympics Location

vikelas.113 = {
	type = country_event

	title = vikelas.113.t
	desc = vikelas.113.d
	flavor = vikelas.113.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		random_country = {
			limit = {
				has_variable = vikelas_olympics_candidate_1_var
			}
			save_scope_as = vikelas_olympics_candidate_1
		}
		random_country = {
			limit = {
				has_variable = vikelas_olympics_candidate_2_var
			}
			save_scope_as = vikelas_olympics_candidate_2
		}
		random_country = {
			limit = {
				has_variable = vikelas_olympics_candidate_3_var
			}
			save_scope_as = vikelas_olympics_candidate_3
		}
		random_country = {
			limit = {
				has_variable = vikelas_olympics_candidate_4_var
			}
			save_scope_as = vikelas_olympics_candidate_4
		}
		random_country = {
			limit = {
				has_variable = vikelas_fallback_candidate_var
			}
			save_scope_as = vikelas_olympics_candidate_fallback
		}
	}

	option = {
		name = vikelas.113.g #Candidate 1
		default_option = yes
		trigger = {
			exists = scope:vikelas_olympics_candidate_1
		}
		change_global_variable = {
			name = vikelas_olympics_candidate_1_votes
			add = 1
		}

		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_1 = {
						infamy > 10
					}
				}
				add = -1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_1 = {
						infamy > 25
					}
				}
				add = -1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_1 = {
						infamy > 50
					}
				}
				add = -2
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = rivalry
						who = scope:vikelas_olympics_candidate_1
					}
				}
				add = -5
			}	
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_1)" >= relations_threshold:cordial
				}
				add = 1
			}
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_1)" >= relations_threshold:amicable
				}
				add = 1
			}				
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_1)" >= relations_threshold:friendly
				}
				add = 1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_1 = { is_subject_of = root }
				}
				add = 15
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = alliance
						who = scope:vikelas_olympics_candidate_1
					}
				}
				add = 10
			}
			
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = defensive_pact
						who = scope:vikelas_olympics_candidate_1
					}
				}
				add = 5
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = customs_union
						who = scope:vikelas_olympics_candidate_1
					}
				}
				add = 3
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_1 = ROOT
				}
				add = 10000
			}
		}
	}

	option = {
		name = vikelas.113.h #Candidate 2
		trigger = {
			exists = scope:vikelas_olympics_candidate_2
		}
		change_global_variable = {
			name = vikelas_olympics_candidate_2_votes
			add = 1
		}

		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_2 = {
						infamy > 10
					}
				}
				add = -1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_2 = {
						infamy > 25
					}
				}
				add = -1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_2 = {
						infamy > 50
					}
				}
				add = -2
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = rivalry
						who = scope:vikelas_olympics_candidate_2
					}
				}
				add = -5
			}	
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_2)" >= relations_threshold:cordial
				}
				add = 1
			}
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_2)" >= relations_threshold:amicable
				}
				add = 1
			}				
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_2)" >= relations_threshold:friendly
				}
				add = 1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_2 = { is_subject_of = root }
				}
				add = 15
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = alliance
						who = scope:vikelas_olympics_candidate_2
					}
				}
				add = 10
			}
			
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = defensive_pact
						who = scope:vikelas_olympics_candidate_2
					}
				}
				add = 5
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = customs_union
						who = scope:vikelas_olympics_candidate_2
					}
				}
				add = 3
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_2 = ROOT
				}
				add = 10000
			}
		}
	}

	option = {
		name = vikelas.113.i #Candidate 3
		trigger = {
			exists = scope:vikelas_olympics_candidate_3
		}
		change_global_variable = {
			name = vikelas_olympics_candidate_3_votes
			add = 1
		}

		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_3 = {
						infamy > 10
					}
				}
				add = -1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_3 = {
						infamy > 25
					}
				}
				add = -1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_3 = {
						infamy > 50
					}
				}
				add = -2
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = rivalry
						who = scope:vikelas_olympics_candidate_3
					}
				}
				add = -5
			}	
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_3)" >= relations_threshold:cordial
				}
				add = 1
			}
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_3)" >= relations_threshold:amicable
				}
				add = 1
			}				
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_3)" >= relations_threshold:friendly
				}
				add = 1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_3 = { is_subject_of = root }
				}
				add = 15
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = alliance
						who = scope:vikelas_olympics_candidate_3
					}
				}
				add = 10
			}
			
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = defensive_pact
						who = scope:vikelas_olympics_candidate_3
					}
				}
				add = 5
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = customs_union
						who = scope:vikelas_olympics_candidate_3
					}
				}
				add = 3
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_3 = ROOT
				}
				add = 10000
			}
		}
	}

	option = {
		name = vikelas.113.j #Candidate 4
		default_option = yes
		trigger = {
			exists = scope:vikelas_olympics_candidate_4
		}
		change_global_variable = {
			name = vikelas_olympics_candidate_4_votes
			add = 1
		}

		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_4 = {
						infamy > 10
					}
				}
				add = -1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_4 = {
						infamy > 25
					}
				}
				add = -1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_4 = {
						infamy > 50
					}
				}
				add = -2
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = rivalry
						who = scope:vikelas_olympics_candidate_4
					}
				}
				add = -5
			}	
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_4)" >= relations_threshold:cordial
				}
				add = 1
			}
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_4)" >= relations_threshold:amicable
				}
				add = 1
			}				
			modifier = {
				trigger = {
					"relations(scope:vikelas_olympics_candidate_4)" >= relations_threshold:friendly
				}
				add = 1
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_4 = { is_subject_of = root }
				}
				add = 15
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = alliance
						who = scope:vikelas_olympics_candidate_4
					}
				}
				add = 10
			}
			
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = defensive_pact
						who = scope:vikelas_olympics_candidate_4
					}
				}
				add = 5
			}
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = customs_union
						who = scope:vikelas_olympics_candidate_4
					}
				}
				add = 3
			}
			modifier = {
				trigger = {
					scope:vikelas_olympics_candidate_4 = ROOT
				}
				add = 10000
			}
		}
	}

	option = {
		name = vikelas.113.k #Candidate Fallback
		default_option = yes
		trigger = {
			NOR = {
				exists = scope:vikelas_olympics_candidate_1
				exists = scope:vikelas_olympics_candidate_2
				exists = scope:vikelas_olympics_candidate_3
				exists = scope:vikelas_olympics_candidate_4
			}
		}
		set_global_variable = vikelas_has_fallback_candidate_var
	}

	after = {
	}
}

#Vikelas 114: IOC decides: $COUNTRY$ will host the next Olympic Games (President)

vikelas.114 = {
	type = country_event

	title = vikelas.114.t
	desc = vikelas.114.d
	flavor = vikelas.114.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		if = {
			limit = {
				has_global_variable = vikelas_has_fallback_candidate_var
			}
			random_country = {
				limit = {
					has_variable = vikelas_fallback_candidate_var
				}
				save_scope_as = vikelas_olympics_candidate_scope
			}
		}
		else_if = {
			limit = {
				global_var:vikelas_olympics_candidate_1_votes >= global_var:vikelas_olympics_candidate_2_votes
				global_var:vikelas_olympics_candidate_1_votes >= global_var:vikelas_olympics_candidate_3_votes
				global_var:vikelas_olympics_candidate_1_votes >= global_var:vikelas_olympics_candidate_4_votes
			}
			random_country = {
				limit = {
					has_variable = vikelas_olympics_candidate_1_var
				}
				save_scope_as = vikelas_olympics_candidate_scope
			}
		}
		else_if = {
			limit = {
				global_var:vikelas_olympics_candidate_2_votes >= global_var:vikelas_olympics_candidate_1_votes
				global_var:vikelas_olympics_candidate_2_votes >= global_var:vikelas_olympics_candidate_3_votes
				global_var:vikelas_olympics_candidate_2_votes >= global_var:vikelas_olympics_candidate_4_votes
			}
			random_country = {
				limit = {
					has_variable = vikelas_olympics_candidate_2_var
				}
				save_scope_as = vikelas_olympics_candidate_scope
			}
		}
		else_if = {
			limit = {
				global_var:vikelas_olympics_candidate_3_votes >= global_var:vikelas_olympics_candidate_1_votes
				global_var:vikelas_olympics_candidate_3_votes >= global_var:vikelas_olympics_candidate_2_votes
				global_var:vikelas_olympics_candidate_3_votes >= global_var:vikelas_olympics_candidate_4_votes
			}
			random_country = {
				limit = {
					has_variable = vikelas_olympics_candidate_3_var
				}
				save_scope_as = vikelas_olympics_candidate_scope
			}
		}
		else_if = {
			limit = {
				global_var:vikelas_olympics_candidate_4_votes >= global_var:vikelas_olympics_candidate_1_votes
				global_var:vikelas_olympics_candidate_4_votes >= global_var:vikelas_olympics_candidate_2_votes
				global_var:vikelas_olympics_candidate_4_votes >= global_var:vikelas_olympics_candidate_3_votes
			}
			random_country = {
				limit = {
					has_variable = vikelas_olympics_candidate_4_var
				}
				save_scope_as = vikelas_olympics_candidate_scope
			}
		}
		else = {
			random_list = {
				1 = {
					random_country = {
						limit = {
							has_variable = vikelas_olympics_candidate_1_var
						}
						save_scope_as = vikelas_olympics_candidate_scope
					}
				}
				1 = {
					random_country = {
						limit = {
							has_variable = vikelas_olympics_candidate_2_var
						}
						save_scope_as = vikelas_olympics_candidate_scope
					}
				}
				1 = {
					random_country = {
						limit = {
							has_variable = vikelas_olympics_candidate_3_var
						}
						save_scope_as = vikelas_olympics_candidate_scope
					}
				}
				1 = {
					random_country = {
						limit = {
							has_variable = vikelas_olympics_candidate_4_var
						}
						save_scope_as = vikelas_olympics_candidate_scope
					}
				}
			}
		}
	}

	option = {
		name = vikelas.114.g
		scope:vikelas_olympics_candidate_scope = {
			add_modifier = {
				name = vikelas_olympics_preparation_modifier
				days = 1200
			}
			hidden_effect = {
				trigger_event = {
					id = vikelas.116
					popup = yes
					days = 1200
				}
				if = {
					limit = {
						has_global_variable = vikelas_olympic_flame_var
					}
					random_country = {
						limit = {
							any_scope_state = {
								state_region = s:STATE_PELOPONNESE
							}
							trigger_event = {
								id = vikelas.181
								days = 1000
							}
						}
					}
				}
			}
		}

		ai_chance = {
			base = 1
		}
	}

	after = {
		every_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
				is_player = yes
				NOT = { this = ROOT }
			}
			trigger_event = {
				id = vikelas.115
			}
		}
		every_country = {
			limit = {
				OR = {
					has_variable = vikelas_olympics_candidate_1_var
					has_variable = vikelas_olympics_candidate_2_var
					has_variable = vikelas_olympics_candidate_3_var
					has_variable = vikelas_olympics_candidate_4_var
				}
			}
			remove_variable = vikelas_olympics_candidate_1_var
			remove_variable = vikelas_olympics_candidate_2_var
			remove_variable = vikelas_olympics_candidate_3_var
			remove_variable = vikelas_olympics_candidate_4_var
			remove_variable = vikelas_fallback_candidate_var
		}
		remove_global_variable = vikelas_olympics_candidate_1_votes
		remove_global_variable = vikelas_olympics_candidate_2_votes
		remove_global_variable = vikelas_olympics_candidate_3_votes
		remove_global_variable = vikelas_olympics_candidate_4_votes
		remove_global_variable = vikelas_has_fallback_candidate_var
	}
}

#Vikelas 115: IOC decides: $COUNTRY$ will host the next Olympic Games (Player)

vikelas.115 = {
	type = country_event

	title = vikelas.114.t
	desc = vikelas.114.d
	flavor = vikelas.114.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		random_country = {
			limit = {
				has_modifier = vikelas_olympics_preparation_modifier
			}
			save_scope_as = vikelas_olympics_candidate
		}
	}

	option = {
		name = vikelas.114.g
		trigger = {
			NOT = {
				has_modifier = vikelas_olympics_preparation_modifier
			}
		}
	}

	option = {
		name = vikelas.115.g
		default_option = yes
		trigger = {
			has_modifier = vikelas_olympics_preparation_modifier
		}
	}

	after = {
	}
}

#Vikelas 116: Olympic Games begin

vikelas.116 = {
	type = country_event

	title = vikelas.106.t
	desc = vikelas.116.d
	flavor = vikelas.116.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_begin.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		change_global_variable = {
			name = vikelas_olympic_games_number_global_var
			add = 1
		}
		remove_global_variable = vikelas_olympic_torch_var
	}

	option = {
		name = vikelas.116.g #Let The Games Begin!
		default_option = yes
		random_scope_state = {
			limit = {
				is_capital = yes
			}
			add_modifier = {
				name = vikelas_olympics_hosting_modifier
			}
		}
		add_journal_entry = {
			type = je_vikelas_olympic_games_host
		}
		hidden_effect = {
			if = {
				limit = {
					has_global_variable = vikelas_olympic_flame_var
				}
				trigger_event = {
					id = vikelas.183
					days = 1
				}
			}
		}
		every_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
				is_player = yes
				NOT = { this = ROOT }
			}
			trigger_event = {
				id = vikelas.117
			}
		}
		hidden_effect = {
			every_country = {
				limit = {
					has_variable = vikelas_ioc_member_var
					NOT = { this = ROOT }
				}
				add_journal_entry = {
					type = je_vikelas_olympic_games_member
				}
			}
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 117: Olympic Games begin (for player)

vikelas.117 = {
	type = country_event

	title = vikelas.106.t
	desc = vikelas.117.d
	flavor = vikelas.116.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_begin.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		random_country = {
			limit = {
				any_scope_state = {
					has_modifier = vikelas_olympics_hosting_modifier
				}
			}
			save_scope_as = vikelas_olympic_country
		}
		vikelas_calculate_number_participants_effect = yes
	}

	option = {
		name = vikelas.116.g #Let The Games Begin!
		default_option = yes

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 118: Olympic Games end

vikelas.118 = {
	type = country_event

	title = vikelas.108.t
	desc = vikelas.118.d
	flavor = vikelas.108.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_end.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		vikelas_medals_of_this_olympia_effect = yes
		vikelas_replace_olympic_prestige_modifier_effect = yes #Replaces the olympic prestige modfier
	}

	option = {
		name = vikelas.108.g #Citius, altius, fortius
		default_option = yes

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 119: IOC decides: Olympic Games in $FOUNDATION COUNTRY$

vikelas.119 = {
	type = country_event

	title = vikelas.119.t
	desc = vikelas.119.d
	flavor = vikelas.119.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		random_character = {
			limit = {
				has_variable = vikelas_pierre_de_coubertin_var
			}
			save_scope_as = vikelas_ioc_president_scope
		}
		set_global_variable = {
			name = vikelas_olympic_games_number_global_var
			value = 0
		}
	}

	option = {
		name = vikelas.119.g #Then we'll organize the games at our place.
		default_option = yes
		add_modifier = {
			name = vikelas_olympics_preparation_modifier
			days = 776
		}
		hidden_effect = {
			trigger_event = {
				id = vikelas.116
				popup = yes
				days = 776
			}
			trigger_event = { #This will ensure that the Board will be re-elected every four years
				id = vikelas.111
				days = 866
			}
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
		every_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
			}
			trigger_event = {
				id = vikelas.120
				popup = yes
			}
		}
	}
}

#Vikelas 120: IOC meets for the first time in $FOUNDATION COUNTRY$

vikelas.120 = {
	type = country_event

	title = vikelas.120.t
	desc = vikelas.120.d
	flavor = vikelas.120.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		random_character = {
			limit = {
				has_variable = vikelas_pierre_de_coubertin_var
			}
			save_scope_as = vikelas_ioc_president_scope
		}
		random_country = {
			limit = {
				has_modifier = vikelas_olympics_preparation_modifier
			}
			save_scope_as = vikelas_olympics_candidate
		}
	}

	option = {
		name = vikelas.120.g
		default_option = yes
		if = {
			limit = {
				NOT = {
					has_technology_researched = organized_sports
				}
			}
			add_technology_progress = { progress = 8500 technology = organized_sports }
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 121: The Communist Gymnastic athlete (participants)
vikelas.121 = {
	type = country_event

	title = vikelas.121.t
	desc = vikelas.121.d
	flavor = vikelas.121.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_amsterdam.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
		NOR = {
			has_law = law_type:law_command_economy
			has_law = law_type:law_council_republic
		}
	}

	immediate = {
		create_character = {
			female = no
			save_scope_as = vikelas_communist_athlete_scope
		}
		scope:vikelas_communist_athlete_scope = {
			place_character_in_void = 120
			add_trait = vikelas_athlete
		}
	}

	option = {
		name = vikelas.121.g #No matter what he thinks, he should win!
		default_option = yes
		custom_tooltip = {
			text = vikelas_positive_influence_on_score_tt
			set_variable = {
				name = vikelas_communist_character_champion_var
				months = 6
			}
		}
		add_modifier = {
			name = vikelas_olympic_champion_modifier
			years = 3
		}
		every_interest_group = {
			limit = {
				OR = {
					law_stance = {
						law = law_type:law_command_economy
						value > neutral
					}
				}
				OR = {
					law_stance = {
						law = law_type:law_council_republic
						value > neutral
					}
				}
			}
			add_modifier = {
				name = manzoni_political_tailwind_modifier
				years = 5
			}
		}
	}

	option = {
		name = vikelas.121.h #Don't we have another athlete?
	}

	after = {
		scope:vikelas_communist_athlete_scope = {
			free_character_from_void = no
		}
	}
}

#Vikelas 122: Reactionary Tennis Player (participants)
vikelas.122 = {
	type = country_event

	title = vikelas.122.t
	desc = vikelas.122.d
	flavor = vikelas.122.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_amsterdam.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
		NOR = {
			has_law = law_type:law_monarchy
			has_law = law_type:law_state_religion
		}
	}

	immediate = {
		create_character = {
			female = no
			save_scope_as = vikelas_reactionary_athlete_scope
		}
		scope:vikelas_reactionary_athlete_scope = {
			place_character_in_void = 120
			add_trait = vikelas_athlete
		}
	}

	option = {
		name = vikelas.121.g #No matter what he thinks, he should win!
		default_option = yes
		custom_tooltip = {
			text = vikelas_positive_influence_on_score_tt
			set_variable = {
				name = vikelas_reactionary_character_champion_var
				months = 6
			}
		}
		add_modifier = {
			name = vikelas_olympic_champion_modifier
			years = 3
		}
		every_interest_group = {
			limit = {
				OR = {
					law_stance = {
						law = law_type:law_monarchy
						value > neutral
					}
				}
				OR = {
					law_stance = {
						law = law_type:law_state_religion
						value > neutral
					}
				}
			}
			add_modifier = {
				name = manzoni_political_tailwind_modifier
				years = 5
			}
		}
	}

	option = {
		name = vikelas.121.h #Don't we have another athlete?
	}

	after = {
		scope:vikelas_communist_athlete_scope = {
			free_character_from_void = no
		}
	}
}

#Vikelas 122: The Reactionary Tennis Chap

#Vikelas 123: Athlete misses event because of calender (participants)
vikelas.123 = {
	type = country_event

	title = vikelas.123.t
	desc = vikelas.123.d
	flavor = vikelas.123.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_aerial_view.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
		OR = {
			AND = {
				any_country = {
					any_scope_state = {
						has_modifier = vikelas_olympics_hosting_modifier
					}
					has_modifier = pius_non_gregorian_calender_modifier
				}
				NOT = { has_modifier = pius_non_gregorian_calender_modifier }
			}
			AND = {
				any_country = {
					any_scope_state = {
						has_modifier = vikelas_olympics_hosting_modifier
					}
					NOT = { has_modifier = pius_non_gregorian_calender_modifier }
				}
				has_modifier = pius_non_gregorian_calender_modifier
			}
		}
	}

	immediate = {
	}

	option = {
		name = vikelas.123.g #Why do they use another calender?!
		default_option = yes

		custom_tooltip = vikelas_negative_influence_on_score_tt
		add_modifier = {
			name = vikelas_athlete_missed_event_modifier
			years = 1
		}
	}

	after = {
	}
}

#Vikelas 124: Honorable Cyclist (participants)
vikelas.124 = {
	type = country_event

	title = vikelas.124.t
	desc = vikelas.124.d
	flavor = vikelas.124.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_bycicle_track_race.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
	}

	immediate = {
		create_character = {
			female = no
			save_scope_as = vikelas_honorable_cyclist_scope
		}
		scope:vikelas_honorable_cyclist_scope = {
			place_character_in_void = 120
			add_trait = vikelas_athlete
			add_trait = honorable
		}
		random_country = {
			limit = {
				NOT = { root = this }
				has_variable = vikelas_ioc_member_var
			}
			create_character = {
				female = no
				save_scope_as = vikelas_cyclist_with_problems_scope
			}
			scope:vikelas_cyclist_with_problems_scope = {
				place_character_in_void = 120
				add_trait = vikelas_athlete
			}
			save_scope_as = vikelas_cyclist_with_problems_country_scope
		}
	}

	option = {
		name = vikelas.124.g #A great gesture!
		default_option = yes

		change_relations = {
			country = scope:vikelas_cyclist_with_problems_country_scope
			value = 5
		}
	}

	after = {
		scope:vikelas_honorable_cyclist_scope = {
			free_character_from_void = no
		}
		scope:vikelas_cyclist_with_problems_scope = {
			free_character_from_void = no
		}
	}
}

#Vikelas 125: Cyclist hit by a car (participants)
vikelas.125 = {
	type = country_event

	title = vikelas.125.t
	desc = vikelas.125.d
	flavor = vikelas.125.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_bycicle_street_race.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
		any_country = {
			has_technology_researched = combustion_engine
		}
	}

	immediate = {
		create_character = {
			female = no
			save_scope_as = vikelas_cyclist_with_accident_scope
		}
		scope:vikelas_cyclist_with_accident_scope = {
			place_character_in_void = 120
			add_trait = vikelas_athlete
		}
	}

	option = {
		name = vikelas.125.g #How could this happen?
		default_option = yes

		custom_tooltip = {
			text = vikelas_negative_influence_on_score_tt
			set_variable = {
				name = vikelas_cyclist_with_accident_var
				months = 6
			}
		}
		scope:vikelas_cyclist_with_accident_scope = {
			add_trait = wounded
		}
	}

	after = {
		scope:vikelas_cyclist_with_accident_scope = {
			free_character_from_void = no
		}
	}
}

#Vikelas 126: Mass accident in street race (participants)
vikelas.126 = {
	type = country_event

	title = vikelas.126.t
	desc = vikelas.126.d
	flavor = vikelas.126.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_bycicle_street_race.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
	}

	immediate = {
	}

	option = {
		name = vikelas.126.g #Good thing no one got killed!
		default_option = yes
	}

	after = {
	}
}

#Vikelas 127: Drunken Cyclist (participants)
vikelas.127 = {
	type = country_event

	title = vikelas.127.t
	desc = vikelas.127.d
	flavor = vikelas.127.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_bycicle_street_race.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
	}

	immediate = {
		create_character = {
			female = no
			save_scope_as = vikelas_drunken_cyclist_scope
		}
		scope:vikelas_drunken_cyclist_scope = {
			place_character_in_void = 120
			add_trait = vikelas_athlete
		}
	}

	option = {
		name = vikelas.127.g #What a shameful display!
		default_option = yes

		custom_tooltip = {
			text = vikelas_negative_influence_on_score_tt
			set_variable = {
				name = vikelas_drunken_cyclist_var
				months = 6
			}
		}
		
		scope:vikelas_drunken_cyclist_scope = {
			add_trait = alcoholic
		}
	}

	after = {
		scope:vikelas_drunken_cyclist_scope = {
			free_character_from_void = no
		}
	}
}

#Vikelas 128: Free Beer! (participants)
vikelas.128 = {
	type = country_event

	title = vikelas.128.t
	desc = vikelas.128.d
	flavor = vikelas.128.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_bycicle_street_race.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
	}

	immediate = {
		create_character = {
			female = no
			save_scope_as = vikelas_cheating_cyclist_scope
		}
		scope:vikelas_cheating_cyclist_scope = {
			place_character_in_void = 120
			add_trait = vikelas_athlete
		}
	}

	option = {
		name = vikelas.128.g #Ha! That's what drinking gets you.
		default_option = yes

		custom_tooltip = {
			text = vikelas_positive_influence_on_score_tt
			set_variable = {
				name = vikelas_cheating_cyclist_var
				months = 6
			}
		}
	}

	after = {
		scope:vikelas_cheating_cyclist_scope = {
			free_character_from_void = no
		}
	}
}

#Vikelas 129: Schwingerkönig wins Wrestling Event (participants)
vikelas.129 = {
	type = country_event

	title = vikelas.129.t
	desc = vikelas.129.d
	flavor = vikelas.129.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_wrestling.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
		c:SWI ?= this
		any_scope_character = {
			has_trait = dufour_schwingerkonig
		}
	}

	immediate = {
		random_scope_character = {
			limit = {
				has_trait = dufour_schwingerkonig
			}
			save_scope_as = vikelas_schwingerkonig_scope 
		}
	}

	option = {
		name = vikelas.129.g #A worthy winner!
		default_option = yes

		custom_tooltip = {
			text = vikelas_positive_influence_on_score_tt
			set_variable = {
				name = vikelas_schwingerkonig_won_var
				months = 6
			}
		}
		scope:vikelas_schwingerkonig_scope = {
			add_trait = vikelas_athlete
		}
	}

	after = {
	}
}

#Vikelas 130: Tug of War (participants)
vikelas.130 = {
	type = country_event

	title = vikelas.130.t
	desc = vikelas.130.d
	flavor = vikelas.130.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_tug_of_war.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
		random_rival_country = {
			has_variable = vikelas_ioc_member_var
		}
	}

	immediate = {
		create_character = {
			female = no
			save_scope_as = vikelas_our_athlete_scope
		}
		scope:vikelas_our_leader_scope = {
			place_character_in_void = 120
			add_trait = vikelas_athlete
		}
		random_rival_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
			}
			create_character = {
				female = no
				save_scope_as = vikelas_rival_athlete_scope
			}
			scope:vikelas_rival_athlete_scope = {
				place_character_in_void = 120
				add_trait = vikelas_athlete
			}
			save_scope_as = vikelas_rival_country_scope
		}
	}

	option = {
		name = vikelas.130.g #That was unfair!
		default_option = yes
		add_modifier = {
			name = vikelas_disgraced_at_the_olympics_modifier
			years = 3
		}
		change_relations = {
			country = scope:vikelas_rival_country_scope
			value = -5
		}
		custom_tooltip = {
			text = vikelas_negative_influence_on_score_tt
			set_variable = {
				name = vikelas_lost_tug_of_war_var
				months = 6
			}
		}
	}

	after = {
		scope:vikelas_our_athlete_scope = {
			free_character_from_void = no
		}
		scope:vikelas_rival_athlete_scope = {
			free_character_from_void = no
		}
	}
}

######################################################################

#Events for Random Characters

#Vikelas 131: The Fencing/Shooting/Riding General (participants)
vikelas.131 = {
	type = country_event

	title = {
		triggered_desc = {
			trigger = {
				var:vikelas_fencing_flavor_randomizer_var = 1
			}
			desc = vikelas.131.t_fencing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_shooting_flavor_randomizer_var = 2
			}
			desc = vikelas.131.t_shooting
		}
		triggered_desc = {
			trigger = {
				var:vikelas_riding_flavor_randomizer_var = 3
			}
			desc = vikelas.131.t_riding
		}
	}

	desc = {
		triggered_desc = {
			trigger = {
				var:vikelas_fencing_flavor_randomizer_var = 1
			}
			desc = vikelas.131.d_fencing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_shooting_flavor_randomizer_var = 2
			}
			desc = vikelas.131.d_shooting
		}
		triggered_desc = {
			trigger = {
				var:vikelas_riding_flavor_randomizer_var = 3
			}
			desc = vikelas.131.d_riding
		}
	}

	flavor = {
		triggered_desc = {
			trigger = {
				var:vikelas_fencing_flavor_randomizer_var = 1
			}
			desc = vikelas.131.f_fencing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_shooting_flavor_randomizer_var = 2
			}
			desc = vikelas.131.f_shooting
		}
		triggered_desc = {
			trigger = {
				var:vikelas_riding_flavor_randomizer_var = 3
			}
			desc = vikelas.131.f_riding
		}
	}

	duration = 1

	gui_window = event_window_1char_tabloid

	left_icon = scope:vikelas_olympic_general_scope

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
		NOT = {
			has_modifier = vikelas_inspiring_athlete_modifier
		}
		any_scope_character = {
			is_female = no
			has_role = general
			is_busy = no
			is_ruler = no
			OR = {
				has_trait = persistent
				has_trait = ambitious
				has_trait = expert_artillery_commander
				has_trait = expert_offensive_planner
				has_trait = expert_defensive_strategist
			}
			NOR = {
				has_trait = vikelas_athlete
				has_trait = hedonist
				has_trait = sickly
				has_trait = kidney_stones
				has_trait = wounded
				has_trait = shellshocked
				has_trait = opium_addiction
				has_trait = cocaine_addiction
				has_trait = alcoholic
			}
		}
	}

	immediate = {
		add_modifier = {
			name = vikelas_inspiring_athlete_modifier
			years = 3
		}
		random_list = { #randomizes flavor text
			1 = { 
				set_variable = {
					name = vikelas_fencing_flavor_randomizer_var
					value = 1
				}
			}
			1 = { 
				set_variable = {
					name = vikelas_shooting_flavor_randomizer_var
					value = 2
				}
			}
			1 = { 
				set_variable = {
					name = vikelas_riding_flavor_randomizer_var
					value = 3
				}
			}
		}
		random_scope_character = {
			limit = {
				is_female = no
				has_role = general
				is_busy = no
				is_ruler = no
				OR = {
					has_trait = persistent
					has_trait = ambitious
					has_trait = expert_artillery_commander
					has_trait = expert_offensive_planner
					has_trait = expert_defensive_strategist
				}
				NOR = {
					has_trait = vikelas_athlete
					has_trait = hedonist
					has_trait = sickly
					has_trait = kidney_stones
					has_trait = wounded
					has_trait = shellshocked
					has_trait = opium_addiction
					has_trait = cocaine_addiction
					has_trait = alcoholic
				}
			}
			save_scope_as = vikelas_olympic_general_scope
		}
	}

	option = {
		name = vikelas.131.g #An excellent athlete.
		default_option = yes
		
		scope:vikelas_olympic_general_scope = {
			add_trait = vikelas_athlete
		}
	}

	after = {
		remove_variable = vikelas_fencing_flavor_randomizer_var
		remove_variable = vikelas_shooting_flavor_randomizer_var
		remove_variable = vikelas_riding_flavor_randomizer_var
	}
}

#Vikelas 132: The Rowing/Sailing/Swimming Admiral (participants)
vikelas.132 = {
	type = country_event

	title = {
		triggered_desc = {
			trigger = {
				var:vikelas_rowing_flavor_randomizer_var = 1
			}
			desc = vikelas.132.t_rowing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_sailing_flavor_randomizer_var = 2
			}
			desc = vikelas.132.t_sailing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_swimming_flavor_randomizer_var = 3
			}
			desc = vikelas.132.t_swimming
		}
	}

	desc = {
		triggered_desc = {
			trigger = {
				var:vikelas_rowing_flavor_randomizer_var = 1
			}
			desc = vikelas.132.d_rowing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_sailing_flavor_randomizer_var = 2
			}
			desc = vikelas.132.d_sailing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_swimming_flavor_randomizer_var = 3
			}
			desc = vikelas.132.d_swimming
		}
	}

	flavor = {
		triggered_desc = {
			trigger = {
				var:vikelas_rowing_flavor_randomizer_var = 1
			}
			desc = vikelas.132.f_rowing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_sailing_flavor_randomizer_var = 2
			}
			desc = vikelas.132.f_sailing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_swimming_flavor_randomizer_var = 3
			}
			desc = vikelas.132.f_swimming
		}
	}

	duration = 1

	gui_window = event_window_1char_tabloid

	left_icon = scope:vikelas_olympic_admiral_scope

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
		NOT = {
			has_modifier = vikelas_inspiring_athlete_modifier
		}
		any_scope_character = {
			is_female = no
			has_role = admiral
			is_busy = no
			is_ruler = no
			OR = {
				has_trait = persistent
				has_trait = ambitious
				has_trait = expert_naval_commander
				has_trait = expert_convoy_raider
				has_trait = celebrity_commander
			}
			NOR = {
				has_trait = vikelas_athlete
				has_trait = hedonist
				has_trait = sickly
				has_trait = kidney_stones
				has_trait = wounded
				has_trait = shellshocked
				has_trait = opium_addiction
				has_trait = cocaine_addiction
				has_trait = alcoholic
			}
		}
	}

	immediate = {
		add_modifier = {
			name = vikelas_inspiring_athlete_modifier
			years = 3
		}
		random_list = { #randomizes flavor text
			1 = { 
				set_variable = {
					name = vikelas_rowing_flavor_randomizer_var
					value = 1
				}
			}
			1 = { 
				set_variable = {
					name = vikelas_sailing_flavor_randomizer_var
					value = 2
				}
			}
			1 = { 
				set_variable = {
					name = vikelas_swimming_flavor_randomizer_var
					value = 3
				}
			}
		}
		random_scope_character = {
			limit = {
				is_female = no
				has_role = admiral
				is_busy = no
				is_ruler = no
				OR = {
					has_trait = persistent
					has_trait = ambitious
					has_trait = expert_naval_commander
					has_trait = expert_convoy_raider
					has_trait = celebrity_commander
				}
				NOR = {
					has_trait = vikelas_athlete
					has_trait = hedonist
					has_trait = sickly
					has_trait = kidney_stones
					has_trait = wounded
					has_trait = shellshocked
					has_trait = opium_addiction
					has_trait = cocaine_addiction
					has_trait = alcoholic
				}
			}
			save_scope_as = vikelas_olympic_admiral_scope
		}
	}

	option = {
		name = vikelas.131.g #An excellent athlete.
		default_option = yes
		
		scope:vikelas_olympic_admiral_scope = {
			add_trait = vikelas_athlete
		}
	}

	after = {
		remove_variable = vikelas_rowing_flavor_randomizer_var
		remove_variable = vikelas_sailing_flavor_randomizer_var
		remove_variable = vikelas_swimming_flavor_randomizer_var
	}
}

#Vikelas 133: The Boxing/Wrestling/Archery Politician (participants)
vikelas.133 = {
	type = country_event

	title = {
		triggered_desc = {
			trigger = {
				var:vikelas_boxing_flavor_randomizer_var = 1
			}
			desc = vikelas.133.t_boxing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_wrestling_flavor_randomizer_var = 2
			}
			desc = vikelas.133.t_wrestling
		}
		triggered_desc = {
			trigger = {
				var:vikelas_archery_flavor_randomizer_var = 3
			}
			desc = vikelas.133.t_archery
		}
	}

	desc = {
		triggered_desc = {
			trigger = {
				var:vikelas_boxing_flavor_randomizer_var = 1
			}
			desc = vikelas.133.d_boxing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_wrestling_flavor_randomizer_var = 2
			}
			desc = vikelas.133.d_wrestling
		}
		triggered_desc = {
			trigger = {
				var:vikelas_archery_flavor_randomizer_var = 3
			}
			desc = vikelas.133.d_archery
		}
	}

	flavor = {
		triggered_desc = {
			trigger = {
				var:vikelas_boxing_flavor_randomizer_var = 1
			}
			desc = vikelas.133.f_boxing
		}
		triggered_desc = {
			trigger = {
				var:vikelas_wrestling_flavor_randomizer_var = 2
			}
			desc = vikelas.133.f_wrestling
		}
		triggered_desc = {
			trigger = {
				var:vikelas_archery_flavor_randomizer_var = 3
			}
			desc = vikelas.133.f_archery
		}
	}

	duration = 1

	gui_window = event_window_1char_tabloid

	left_icon = scope:vikelas_olympic_politician_scope

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
		NOT = {
			has_modifier = vikelas_inspiring_athlete_modifier
		}
		any_scope_character = {
			is_female = no
			has_role = politician
			is_busy = no
			is_ruler = no
			OR = {
				has_trait = persistent
				has_trait = ambitious
			}
			NOR = {
				has_trait = vikelas_athlete
				has_trait = hedonist
				has_trait = sickly
				has_trait = kidney_stones
				has_trait = wounded
				has_trait = shellshocked
				has_trait = opium_addiction
				has_trait = cocaine_addiction
				has_trait = alcoholic
			}
		}
	}

	immediate = {
		add_modifier = {
			name = vikelas_inspiring_athlete_modifier
			years = 3
		}
		random_list = { #randomizes flavor text
			1 = { 
				set_variable = {
					name = vikelas_boxing_flavor_randomizer_var
					value = 1
				}
			}
			1 = { 
				set_variable = {
					name = vikelas_wrestling_flavor_randomizer_var
					value = 2
				}
			}
			1 = { 
				set_variable = {
					name = vikelas_archery_flavor_randomizer_var
					value = 3
				}
			}
		}
		random_scope_character = {
			limit = {
				is_female = no
				has_role = politician
				is_busy = no
				is_ruler = no
				OR = {
					has_trait = persistent
					has_trait = ambitious
				}
				NOR = {
					has_trait = vikelas_athlete
					has_trait = hedonist
					has_trait = sickly
					has_trait = kidney_stones
					has_trait = wounded
					has_trait = shellshocked
					has_trait = opium_addiction
					has_trait = cocaine_addiction
					has_trait = alcoholic
				}
			}
			save_scope_as = vikelas_olympic_politician_scope
		}
	}

	option = {
		name = vikelas.131.g #An excellent athlete.
		default_option = yes
		
		scope:vikelas_olympic_politician_scope = {
			add_trait = vikelas_athlete
		}
	}

	after = {
		remove_variable = vikelas_boxing_flavor_randomizer_var
		remove_variable = vikelas_wrestling_flavor_randomizer_var
		remove_variable = vikelas_archery_flavor_randomizer_var
	}
}

#Vikelas 134: The Champion (participants)
vikelas.134 = {
	type = country_event

	title = vikelas.134.t
	desc = vikelas.134.d
	flavor = vikelas.134.f

	duration = 1

	gui_window = event_window_1char_tabloid

	left_icon = scope:vikelas_olympic_champion_scope

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
		any_scope_character = {
			has_trait = vikelas_athlete
			NOT = {
				has_trait = vikelas_winner
			}
		}
	}

	immediate = {
		random_scope_character = {
			limit = {
				has_trait = vikelas_athlete
				NOT = {
					has_trait = vikelas_winner
				}
			}
			save_scope_as = vikelas_olympic_champion_scope
		}
	}

	option = {
		name = vikelas.134.g #A national hero!
		default_option = yes
		add_modifier = {
			name = vikelas_olympic_champion_modifier
			years = 10
		}
		scope:vikelas_olympic_politician_scope = {
			add_trait = vikelas_winner
		}
		every_country = {
			limit = {
				has_variable = vikelas_ioc_board_member_var
				NOT = { this = ROOT }
			}
			change_relations = {
				country = ROOT
				value = 5
			}
		}
		custom_tooltip = {
			text = vikelas_positive_influence_on_score_tt
			set_variable = {
				name = vikelas_random_character_champion_var
				months = 6
			}
		}
	}

	after = {
	}
}

######################################################################

#Events for Organizers

#Vikelas 141: No Sailboats!

vikelas.141 = {
	type = country_event

	title = vikelas.141.t
	desc = vikelas.141.d
	flavor = vikelas.141.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_sailing.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
	}

	immediate = {
		
	}

	option = {
		name = vikelas.141.g #Buy some sailboats from another town!
		default_option = yes
		add_treasury = -50000
		set_global_variable = {
			name = vikelas_sailing_saved_global_var
			years = 1
		}

		ai_chance = {
			base = 0
			modifier = {
				trigger = {
					gold_reserves > 50000
				}
				add = 100
			}
		}
	}

	option = {
		name = vikelas.141.h #No sailing this year.
		set_global_variable = {
			name = vikelas_no_sailing_global_var
			years = 1
		}
		add_modifier = {
			name = vikelas_olympics_no_sailing_competition_modifier
			years = 1
		}


		ai_chance = {
			base = 1
		}
	}

	after = {
		every_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
				NOT = { ROOT = this }
			}
			trigger_event = vikelas.151
		}
	}
}

#Vikelas 142: Rigged Football Match?

vikelas.142 = {
	type = country_event

	title = vikelas.142.t
	desc = vikelas.142.d
	flavor = vikelas.142.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_football_game.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 7 #blocked for two Olympic Games
	}

	trigger = {
	}

	immediate = {
		random_country = {
			limit = {
				NOT = { root = this }
				has_variable = vikelas_ioc_member_var
			}
			save_scope_as = vikelas_olympics_football_country_scope
		}
	}

	option = {
		name = vikelas.142.g #The ball was clearly offside!
		default_option = yes
		change_infamy = 1
		change_relations = {
			country = scope:vikelas_olympics_football_country_scope
			value = -5
		}
		add_modifier = {
			name = vikelas_olympic_champion_modifier
			years = 3
		}

		ai_chance = {
			base = 80
		}
	}

	option = {
		name = vikelas.141.h #The other team has won.
		change_infamy = -1
		change_relations = {
			country = scope:vikelas_olympics_football_country_scope
			value = 5
		}

		ai_chance = {
			base = 20
		}
	}

	after = {
	}
}

#Vikelas 143: The New Legend of Marathon (organizer)

vikelas.143 = {
	type = country_event

	title = vikelas.143.t
	desc = vikelas.143.d
	flavor = vikelas.143.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_amsterdam.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 50 #blocked forever
	}

	trigger = {
		has_law = law_type:law_monarchy
		OR = {
			#Mediterranean Countries
			country_has_primary_culture = cu:south_italian
			country_has_primary_culture = cu:north_italian
			country_has_primary_culture = cu:corsican
			country_has_primary_culture = cu:occitan
			country_has_primary_culture = cu:francoprovencal
			country_has_primary_culture = cu:catalan
			country_has_primary_culture = cu:basque
			country_has_primary_culture = cu:spanish
			country_has_primary_culture = cu:portuguese
			country_has_primary_culture = cu:galician
			country_has_primary_culture = cu:croatian
			country_has_primary_culture = cu:greek
		}
	}

	immediate = {
		create_character = {
			female = no
			save_scope_as = vikelas_olympic_marathon_athlete_scope
		}
		scope:vikelas_olympic_marathon_athlete_scope = {
			place_character_in_void = 120
			add_trait = vikelas_athlete
		}
		random_country = {
			limit = {
				NOT = { root = this }
				has_variable = vikelas_ioc_member_var
			}
			create_character = {
				female = no
				save_scope_as = vikelas_olympic_rival_athlete_1_scope
			}
			scope:vikelas_olympic_rival_athlete_1_scope = {
				place_character_in_void = 120
				add_trait = vikelas_athlete
			}
			save_scope_as = vikelas_olympic_rival_country_1_scope
		}
		random_country = {
			limit = {
				NOT = { root = this }
				NOT = { scope:vikelas_olympic_rival_country_1_scope = this }
				has_variable = vikelas_ioc_member_var
			}
			create_character = {
				female = no
				save_scope_as = vikelas_olympic_rival_athlete_2_scope
			}
			scope:vikelas_olympic_rival_athlete_1_scope = {
				place_character_in_void = 120
				add_trait = vikelas_athlete
			}
			save_scope_as = vikelas_olympic_rival_country_2_scope
		}
		random_country = {
			limit = {
				NOT = { root = this }
				NOR = { 
					scope:vikelas_olympic_rival_country_1_scope = this
					scope:vikelas_olympic_rival_country_2_scope = this
				}
				has_variable = vikelas_ioc_member_var
			}
			create_character = {
				female = no
				save_scope_as = vikelas_olympic_rival_athlete_3_scope
			}
			scope:vikelas_olympic_rival_athlete_1_scope = {
				place_character_in_void = 120
				add_trait = vikelas_athlete
			}
			save_scope_as = vikelas_olympic_rival_country_3_scope
		}
		random_scope_character = {
			limit = {
				is_ruler = yes
			}
			save_scope_as = vikelas_ruler
		}
	}

	option = {
		name = vikelas.143.g #A true Olympian!
		default_option = yes
		add_modifier = {
			name = vikelas_olympic_marathon_legend_modifier
			years = 5
		}
	}

	after = {
		scope:vikelas_olympic_marathon_athlete_scope = {
			free_character_from_void = no
		}
		scope:vikelas_olympic_rival_athlete_1_scope = {
			free_character_from_void = no
		}
		scope:vikelas_olympic_rival_athlete_2_scope = {
			free_character_from_void = no
		}
		scope:vikelas_olympic_rival_athlete_3_scope = {
			free_character_from_void = no
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			c:GRE ?= ROOT
		  	factor = 10
		}
	}
}

#Vikelas 144: Well organized games (organizer)

vikelas.144 = {
	type = country_event

	title = vikelas.144.t
	desc = vikelas.144.d
	flavor = vikelas.144.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_aerial_view.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 50 #blocked forever
	}

	trigger = {
	}

	immediate = {
	}

	option = {
		name = vikelas.144.g #Excellent!
		default_option = yes

		add_modifier = {
			name = vikelas_olympics_well_organized_modifier
			years = 5
		}
	}

	after = {
	}
}

#Vikelas 145: A celebrated host (organizer)

vikelas.145 = {
	type = country_event

	title = vikelas.145.t
	desc = vikelas.145.d
	flavor = vikelas.145.f

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_aerial_view.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 50 #blocked forever
	}

	trigger = {
	}

	immediate = {
	}

	option = {
		name = vikelas.144.g #Excellent!
		default_option = yes

		add_modifier = {
			name = vikelas_olympics_celebrated_host_modifier
			years = 5
		}
	}

	after = {
	}
}

######################################################################

#Events for Notification

#Vikelas 151: Sailboat Notification (participants)

vikelas.151 = {
	type = country_event

	title = {
		triggered_desc = {
			trigger = {
				has_global_variable = vikelas_sailing_saved_global_var
			}
			desc = vikelas.151.t_sailing
		}
		triggered_desc = {
			trigger = {
				has_global_variable = vikelas_no_sailing_global_var
			}
			desc = vikelas.151.t_no_sailing
		}
	}
	desc = {
		triggered_desc = {
			trigger = {
				has_global_variable = vikelas_sailing_saved_global_var
			}
			desc = vikelas.151.d_sailing
		}
		triggered_desc = {
			trigger = {
				has_global_variable = vikelas_no_sailing_global_var
			}
			desc = vikelas.151.d_no_sailing
		}
	}
	flavor = {
		triggered_desc = {
			trigger = {
				has_global_variable = vikelas_sailing_saved_global_var
			}
			desc = vikelas.151.f_sailing
		}
		triggered_desc = {
			trigger = {
				has_global_variable = vikelas_no_sailing_global_var
			}
			desc = vikelas.151.f_no_sailing
		}
	}

	duration = 1

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympics_sailing.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
		NOT = { has_variable = vikelas_no_more_olympic_flavor_notification_events_var }
	}

	immediate = {
		random_country = {
			limit = {
				any_scope_state = {
					has_modifier = vikelas_olympics_hosting_modifier
				}
			}
			save_scope_as = vikelas_olympics_host_scope
		}
	}

	option = {
		name = vikelas.151.g #I hope our athletes win!
		default_option = yes
		
		trigger = {
			has_global_variable = vikelas_sailing_saved_global_var
		}


	}

	option = {
		name = vikelas.151.h #What a pitty
		
		trigger = {
			has_global_variable = vikelas_no_sailing_global_var
		}

	}

#	option = {
#		name = vikelas.152.i #I have more important matters to deal with. Leave me alone.
#		
#		trigger = {
#			is_player = yes
#		}
#
#		custom_tooltip = {
#			text = vikelas_no_more_olympic_flavor_notification_events_tt
#			set_variable = vikelas_no_more_olympic_flavor_notification_events_var
#		}
#	}

	after = {
	}
}

#################################################################################

#Events 181-189: Other Olympic Events

#Vikelas 181: The Lighting of the Olympic Flame

vikelas.181 = {
	type = country_event

	hidden = yes

	trigger = {
	}

	immediate = {
		set_global_variable = vikelas_olympic_torch_var
		if = {
			limit = {
				any_scope_state = {
					state_region = s:STATE_PELOPONNESE
					NOT = {
						has_modifier = vikelas_fire_of_olympia_modifier
					}
				}
			}
			random_scope_state = {
				limit = {
					state_region = s:STATE_PELOPONNESE
				}
				add_modifier = {
					name = vikelas_fire_of_olympia_modifier
				}
			}
		}
	}

	after = {
	}
}

#Vikelas 182: Olympic Torch in $COUNTRY$

vikelas.182 = {
	type = country_event

	title = vikelas.182.t
	desc = vikelas.182.d
	flavor = vikelas.182.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympic_torch.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	cooldown = {
		years = 2
	}

	trigger = {
		has_global_variable = vikelas_olympic_torch_var
		any_scope_state = {
			any_neighbouring_state = {
				owner = {
					has_modifier = vikelas_olympics_preparation_modifier
				}
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				is_capital = yes
			}
			save_scope_as = capital_scope
		}
		immediate = {
			random_country = {
				limit = {
					any_scope_state = {
						has_modifier = vikelas_olympics_preparation_modifier
					}
				}
				save_scope_as = vikelas_olympic_country
			}
		}
	}

	option = {
		name = vikelas.182.g #Fine
		default_option = yes
		random_scope_state = {
			limit = {
				is_capital = yes
			}
			add_loyalists_in_state = {
				value = 0.05
			}
			add_modifier = {
				name = vikelas_olympic_torch_modifier
				days = 100
			}
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#Vikelas 183: The Olympic Flame

vikelas.183 = {
	type = country_event

	title = vikelas.183.t
	desc = vikelas.183.d
	flavor = vikelas.183.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_olympic_flame.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
	}

	option = {
		name = vikelas.183.g #The people of our nation see us as a great country
		default_option = yes
		add_loyalists = {
			value = 0.05
		}

		ai_chance = {
			base = 100
		}
	}

	option = {
		name = vikelas.183.h #The nations of the world see us as a great country
		change_infamy = -5
		every_country = {
			limit = {
				has_variable = vikelas_ioc_member_var
				NOT = { root = this }
			}
			change_relations = {
				country = ROOT
				value = 5
			}
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}

#################################################################################

#Vikelas 190: New IOC (hidden)

vikelas.190 = {
	type = country_event

	hidden = yes

	trigger = {
		has_global_variable = vikelas_ioc_founded_var
		NOT = {
			any_country = {
				has_variable = vikelas_ioc_founding_country_var
			}
		}
	}

	immediate = {
		if = {
			limit = {
				exists = c:SWI
				c:SWI = {
					has_variable = vikelas_ioc_member_var
				}
			}
			c:SWI = {
				trigger_event = {
					id = vikelas.191
				}
			}
		}
		else_if = {
			limit = {
				exists = c:GRE
				c:GRE = {
					has_variable = vikelas_ioc_member_var
				}
			}
			c:GRE = {
				trigger_event = {
					id = vikelas.191
				}
			}
		}
		else = {
			random_country = {
				limit = {
					country_rank = rank_value:great_power
					has_variable = vikelas_ioc_board_member_var
				}
				trigger_event = {
					id = vikelas.191
				}
			}
		}
	}

	after = {
	}
}

#Vikelas 191: The IOC in Switzerland (or others)

vikelas.191 = {
	type = country_event

	title = vikelas.191.t
	desc = vikelas.191.d
	flavor = vikelas.191.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_ioc_board.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_olympic_games.dds"

	trigger = {
	}

	immediate = {
		set_variable = vikelas_ioc_founding_country_var
	}

	option = {
		name = vikelas.191.g #Elect a new Committee
		default_option = yes
		custom_tooltip = {
			text = vikelas_become_ioc_president_tt
		}
		hidden_effect = {
			trigger_event = { #This will ensure that the Board will be re-elected every four years
				id = vikelas.111
			}
		}

		ai_chance = {
			base = 100
		}
	}

	after = {
	}
}


#################################################################################

###Events 300-399: Football, Baseball, Cricket###

#Vikelas 301: Football Club in $STATE$

vikelas.301 = {
	type = country_event

	title = vikelas.301.t
	desc = vikelas.301.d
	flavor = vikelas.301.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_football_game.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_sports.dds"

	cooldown = {
		years = 15
	}

	trigger = {
		OR = {
			country_is_in_europe = yes
			country_is_in_south_america = yes
		}
		OR = {
			has_law = law_type:law_protected_speech
			has_law = law_type:law_right_of_assembly
		}
		any_scope_state = {
			is_homeland_of_country_cultures = owner
			any_scope_building = {
				is_building_type = building_government_administration
				has_active_production_method = pm_vikelas_sports_facilities
			}
			NOT = {
				has_modifier = vikelas_football_club_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				is_homeland_of_country_cultures = owner
				any_scope_building = {
					is_building_type = building_government_administration
					has_active_production_method = pm_vikelas_sports_facilities
				}
				NOT = {
					has_modifier = vikelas_football_club_modifier
				}
			}
			save_scope_as = vikelas_football_club_state_scope
		}
	}

	option = {
		name = vikelas.301.g #A sport worth supporting.
		default_option = yes
		ig:ig_trade_unions = {
			add_modifier = {
				name = vikelas_worker_organized_club_modifier
				years = 5
			}
	    }
		scope:vikelas_football_club_state_scope = {
			add_modifier = {
				name = vikelas_football_club_modifier
			}
			add_loyalists_in_state = {
				value = 0.03
				pop_type = laborers
			}
			add_loyalists_in_state = {
				value = 0.03
				pop_type = machinists
			}
		}
		hidden_effect = {
			if = {
				limit = {
					any_neighbouring_state = {
						is_homeland_of_country_cultures = owner
						any_scope_building = {
							is_building_type = building_government_administration
							has_active_production_method = pm_vikelas_sports_facilities
						}
						NOT = {
							has_modifier = vikelas_football_club_modifier
						}
					}
				}
				trigger_event = {
					id = vikelas.301
					days = { 30 60 }
				}
			}
		}

		ai_chance = {
			base = 90
		}
	}

	option = {
		name = vikelas.301.h #What a boring game.
		scope:vikelas_football_club_state_scope = {
			add_radicals_in_state = {
				value = 0.01
				pop_type = laborers
			}
			add_radicals_in_state = {
				value = 0.01
				pop_type = machinists
			}
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = vikelas_football_is_boring_modifier
				years = 3
			}
	    }

		ai_chance = {
			base = 10
		}
	}

	after = {
	}
}

#Vikelas 302: Rival Football Club in $STATE$

vikelas.302 = {
	type = country_event

	title = vikelas.302.t
	desc = vikelas.302.d
	flavor = vikelas.302.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_football_game.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_sports.dds"

	trigger = {
	}

	immediate = {
		random_scope_state = {
			limit = {
				is_homeland_of_country_cultures = owner
				any_scope_building = {
					is_building_type = building_government_administration
					has_active_production_method = pm_vikelas_sports_facilities
				}
				NOT = {
					has_modifier = vikelas_football_club_modifier
				}
			}
			save_scope_as = vikelas_football_club_state_scope
		}
	}

	option = {
		name = vikelas.302.g #Is this a brewing rivalry?
		default_option = yes
		ig:ig_trade_unions = {
			add_modifier = {
				name = vikelas_worker_organized_football_modifier
				years = 5
			}
	    }
		scope:vikelas_football_club_state_scope = {
			add_modifier = {
				name = vikelas_football_club_modifier
			}
			add_loyalists_in_state = {
				value = 0.03
				pop_type = laborers
			}
			add_loyalists_in_state = {
				value = 0.03
				pop_type = machinists
			}
		}

		ai_chance = {
			base = 90
		}
	}

	after = {
	}
}

#Vikelas 303: Football Association founded

vikelas.303 = {
	type = country_event

	title = vikelas.303.t
	desc = vikelas.303.d
	flavor = vikelas.303.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_football_association.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_sports.dds"

	trigger = {
		any_scope_state = {
			has_modifier = vikelas_football_club_modifier
			count >= 2
		}
	}

	immediate = {
	}

	option = {
		name = vikelas.303.g #Is this a brewing rivalry?
		default_option = yes
		add_modifier = {
			name = vikelas_football_culture_modifier
			years = 10
		}

		ai_chance = {
			base = 90
		}
	}

	after = {
	}
}

#Vikelas 311: Baseball Club in $STATE$

vikelas.311 = {
	type = country_event

	title = vikelas.311.t
	desc = vikelas.311.d
	flavor = vikelas.311.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_baseball_game.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_sports.dds"

	cooldown = {
		years = 15
	}

	trigger = {
		c:USA ?= this
		OR = {
			has_law = law_type:law_protected_speech
			has_law = law_type:law_right_of_assembly
		}
		any_scope_state = {
			is_homeland_of_country_cultures = owner
			any_scope_building = {
				is_building_type = building_government_administration
				has_active_production_method = pm_vikelas_sports_facilities
			}
			NOT = {
				has_modifier = vikelas_baseball_club_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				is_homeland_of_country_cultures = owner
				any_scope_building = {
					is_building_type = building_government_administration
					has_active_production_method = pm_vikelas_sports_facilities
				}
				NOT = {
					has_modifier = vikelas_baseball_club_modifier
				}
			}
			save_scope_as = vikelas_baseball_club_state_scope
		}
	}

	option = {
		name = vikelas.301.g #A sport worth supporting.
		default_option = yes
		ig:ig_petty_bourgeoisie = {
			add_modifier = {
				name = vikelas_citizen_organized_club_modifier
				years = 5
			}
	    }
		scope:vikelas_baseball_club_state_scope = {
			add_modifier = {
				name = vikelas_baseball_club_modifier
			}
			add_loyalists_in_state = {
				value = 0.03
				pop_type = clerks
			}
			add_loyalists_in_state = {
				value = 0.03
				pop_type = engineers
			}
			add_loyalists_in_state = {
				value = 0.03
				pop_type = shopkeepers
			}
			add_loyalists_in_state = {
				value = 0.03
				pop_type = bureaucrats
			}
		}

		ai_chance = {
			base = 90
		}
	}

	option = {
		name = vikelas.311.h #What a boring game.
		scope:vikelas_baseball_club_state_scope = {
			add_radicals_in_state = {
				value = 0.01
				pop_type = clerks
			}
			add_radicals_in_state = {
				value = 0.01
				pop_type = engineers
			}
			add_radicals_in_state = {
				value = 0.01
				pop_type = shopkeepers
			}
			add_radicals_in_state = {
				value = 0.01
				pop_type = bureaucrats
			}
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = vikelas_baseball_is_overrated_modifier
				years = 3
			}
	    }

		ai_chance = {
			base = 10
		}
	}

	after = {
	}
}

#Vikelas 321: Cricket Club in $STATE$

vikelas.321 = {
	type = country_event

	title = vikelas.321.t
	desc = vikelas.321.d
	flavor = vikelas.321.f

	duration = 3

	event_image = {
		texture = "gfx/event_pictures/vikelas_pictures/vikelas_cricket_game.dds"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_sports.dds"

	cooldown = {
		years = 15
	}

	trigger = {
		OR = {
			has_subject_relation_with = c:GBR
			country_has_primary_culture = cu:british
			country_has_primary_culture = cu:irish
			country_has_primary_culture = cu:scottish
			country_has_primary_culture = cu:welsh
			country_has_primary_culture = cu:australian
			country_has_primary_culture = cu:afro_caribbean
			country_has_primary_culture = cu:anglo_canadian
		}
		OR = {
			has_law = law_type:law_protected_speech
			has_law = law_type:law_right_of_assembly
		}
		any_scope_state = {
			is_homeland_of_country_cultures = owner
			any_scope_building = {
				is_building_type = building_government_administration
				has_active_production_method = pm_vikelas_sports_facilities
			}
			NOT = {
				has_modifier = vikelas_cricket_club_modifier
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				is_homeland_of_country_cultures = owner
				any_scope_building = {
					is_building_type = building_government_administration
					has_active_production_method = pm_vikelas_sports_facilities
				}
				NOT = {
					has_modifier = vikelas_cricket_club_modifier
				}
			}
			save_scope_as = vikelas_cricket_club_state_scope
		}
	}

	option = {
		name = vikelas.301.g #A sport worth supporting.
		default_option = yes
		ig:ig_landowners = {
			add_modifier = {
				name = vikelas_upper_class_organized_club_modifier
				years = 5
			}
	    }
		ig:ig_industrialists = {
			add_modifier = {
				name = vikelas_upper_class_organized_club_modifier
				years = 5
			}
	    }
		scope:vikelas_cricket_club_state_scope = {
			add_modifier = {
				name = vikelas_cricket_club_modifier
			}
			add_loyalists_in_state = {
				value = 0.03
				pop_type = aristocrats
			}
			add_loyalists_in_state = {
				value = 0.03
				pop_type = capitalists
			}
			add_loyalists_in_state = {
				value = 0.03
				pop_type = officers
			}
		}

		ai_chance = {
			base = 90
		}
	}

	option = {
		name = vikelas.321.h #What a boring game.
		scope:vikelas_cricket_club_state_scope = {
			add_radicals_in_state = {
				value = 0.01
				pop_type = aristocrats
			}
			add_radicals_in_state = {
				value = 0.01
				pop_type = capitalists
			}
			add_radicals_in_state = {
				value = 0.01
				pop_type = officers
			}
		}
		ig:ig_intelligentsia = {
			add_modifier = {
				name = vikelas_cricket_is_pretentious_modifier
				years = 3
			}
	    }

		ai_chance = {
			base = 10
		}
	}

	after = {
	}
}
