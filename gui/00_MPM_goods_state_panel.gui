# COPY-PASTED FOR NOW
@panel_width_minus_20 = 520			# used to be 440
@panel_width_minus_20_half = 260	# used to be 220
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

# MPM Framework constants
@MPM_max_PMs_per_line = 5

types goods_state_panel {
	type goods_state_panel_input_output_item = container {
		minimumsize = { @panel_width_half -1 }

		tooltip = "[GoodsPanelValue.GetTooltip]"


		flowcontainer = {
			margin_top = 5
			margin_bottom = 5
			margin_left = 10
			spacing = 5 
			icon = {
				visible = "[GoodsPanelValue.HasBuildingInfo]"
				size = { 23 23 }
				texture = "[GoodsPanelValue.GetBuilding.GetTexture]"
			}

			textbox = {
				raw_text = "#bold [GoodsPanelValue.GetName]#!"
				autoresize = yes
				align = left|nobaseline
				maximumsize = { 190 -1 }
				elide = right
				fontsize_min = 14
				parentanchor = vcenter
			}
		}
		
		textbox = {
			text = "[GoodsPanelValue.GetValue|Dv]"
			autoresize = yes
			align = left|nobaseline
			maximumsize = { 200 -1 }
			elide = right
			parentanchor = right
			margin_right = 5
			margin_top = 5
			margin_bottom = 5
		}
		
		divider_clean = {
			parentanchor = bottom|hcenter
		}

		flowcontainer = {
			visible = "[GoodsPanelValue.HasBuildingInfo]"
			datacontext = "[GoodsPanelValue.GetBuilding]"
			datacontext = "[Building.GetBuildingType]"
			position = { 0 35 }
			direction = vertical
			margin_left = 5
			spacing = 5
			margin_bottom = 10

			### DOWNSIZE / EXPAND
			container = {
				minimumsize = { 265 35 }

				using = building_size_tooltip_with_ownership

				### DOWNSIZE
				button_icon_minus_action = {
					size = { 35 35 }
					parentanchor = vcenter
					tooltip = "[Building.GetDownsizeTooltip]"
					onclick = "[Execute( Building.Downsize )]"
					enabled = "[IsValid( Building.Downsize )]"
					visible = "[And(Not( ShouldAskConfirmation( Building.Downsize ) ), Not(BuildingType.IsMilitaryBuilding))]"
					using = tooltip_below
				}

				### DOWNSIZE WITH CONFIRMATION
				button_icon_minus_action = {
					size = { 35 35 }
					parentanchor = vcenter
					tooltip = "[Building.GetDownsizeTooltip]"
					onclick = "[PopupManager.AskConfirmation( Building.Downsize )]"
					enabled = "[IsValid( Building.Downsize )]"
					visible = "[And(ShouldAskConfirmation( Building.Downsize ), Not(BuildingType.IsMilitaryBuilding))]"
					using = tooltip_below
				}

				### CANCEL CONSTRUCTION
				button_icon_minus_action = {
					size = { 35 35 }
					parentanchor = vcenter
					tooltip = "[Building.GetCancelConstructionTooltip]"
					visible = "[And(IsValid( Building.CancelConstruction ), Not(BuildingType.IsMilitaryBuilding))]"
					onclick = "[Execute( Building.CancelConstruction )]"
					using = tooltip_below
				}

				### LEVEL
				container = {
					position = { 35 0 }
					background = {
						using = entry_bg
						margin = { 0 -2 }
					}

					textbox = {
						text = "BUILDING_SIZE"
						align = hcenter|nobaseline
						size = { 195 35 }
						elide = right
						fontsize_min = 12
					}
				}

				### EXPAND
				expand_building_button = {
					widgetid = "[Concatenate('building_expand', Building.GetIDString)]"

					parentanchor = right|vcenter
				}
			}

			container = {
				fixedgridbox = { # MPM - changed to fixedgridbox
					datamodel = "[Building.AccessProductionMethodGroups]"
					# spacing = 4 # MPM
                    flipdirection = yes # MPM
                    addcolumn = 54 # MPM
					addrow = 50 # MPM
                    datamodel_wrap = @MPM_max_PMs_per_line # MPM Framework - PM wraparound

					item = {
						widget = {
							size = { 50 50 }
							datacontext = "[Building.AccessProductionMethod(ProductionMethodGroup.Self)]"
							datacontext = "[ProductionMethod]"
							datacontext = "[Building]"
							datacontext = "[ProductionMethodGroup]"
							using = tooltip_above

							tooltip = "CHANGE_FROM_CURRENT_PRODUCTION_METHOD_TOOLTIP"

							button = {
								visible = "[NotEqualTo_int32( GetDataModelSize( ProductionMethodGroup.AccessBuildingProductionMethods( Building.Self ) ), '(int32)1' )]"
								using = expand_button_bg_dropdown
								size = { 50 50 }
								enabled = "[Building.IsOwner( GetPlayer.Self )]"
								onclick = "[RightClickMenuManager.ToggleSwitchProductionMethodMenu(Building.AccessSelf, ProductionMethodGroup.AccessSelf, PdxGuiWidget.AccessSelf)]"
							}

							icon = {
								size = { 35 35 }
								parentanchor = center
								texture = "[ProductionMethod.GetTexture]"
							}

							### new pm
							has_new_pm_icon	= {
								blockoverride "visible" {
									visible = "[And(Building.IsOwner( GetPlayer.Self ), GetPlayer.HasNewProductionMethodInSameGroup( Building.GetBuildingType.Self, ProductionMethod.Self ))]"
								}
								position = { 0 0 }
								tooltip = "TOOLTIP_NEW_PRODUCTION_METHOD"
								parentanchor = bottom
							}

							textbox = {
								raw_text = "#P #bold [ProductionMethodGroup.GetNumAvailableOptions(Building.AccessSelf)]#!#!"
								parentanchor = top|right
								position = { -2 0 }
								autoresize = yes
								align = right|nobaseline
								visible = "[NotEqualTo_int32( ProductionMethodGroup.GetNumAvailableOptions(Building.AccessSelf), '(int32)1')]"
								tooltip = "PRODUCTION_METHOD_OPTIONS"
								using = tooltip_above
								using = fontsize_small

								background = {
									using = default_background
									margin = { 8 4 }
								}
							}
						}
					}
				}
			}
		}
	}
}
