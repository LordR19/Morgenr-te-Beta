# By Dementive & Lord R

types arts_view
{
	type arts_view = widget {
		size = { 98% 100% }
		position = { 2% 8% }
		alpha = "[TransparentIfFalse(GetScriptedGui('mr_main_window_tab_2_visible_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ))]"
		visible = "[GetScriptedGui('mr_main_window_tab_2_visible_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

		scrollbox = {
			size = { 100% 79% }
			position = { 0 20 }
			parentanchor = center

			scrollbarpolicy_horizontal = as_needed
			scrollbarpolicy_vertical = as_needed

			scrollbar_horizontal = {
				using = Scrollbar_Horizontal
			}

			blockoverride "scrollbox_content"
			{
				vbox = {
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding

					hbox = {
						spacing = 15

						# Promote arts container
						widget = {
							size = { 900 235 }
							background = {
								using = entry_bg_simple
							}
							textbox = {
								text = "PROGRESS_TO_NEXT_ARTIST"
								position = { 0 -90 }
								parentanchor = center
								autoresize = yes
								using = fontsize_mega
							}
							textbox = {
								text = "CURRENT_ARTISTIC_PROGRESS"
								position = { 20 58 }
								parentanchor = top|left
								autoresize = yes
								using = fontsize_xl
							}
							green_progressbar_horizontal = {
								position = { 27 100 }
								size = { 840 35 }
								blockoverride "values" {
									min = 0
									max = 1000
									value = "[FixedPointToFloat(GetPlayer.MakeScope.Var('artists_artistic_progress_var').GetValue)]"
								}
								tooltip = "MR_ARTISTIC_PROGRESS_BAR_TT"
							}
							textbox = {
								text = "MR_ARTISTIC_PROGRESS_VALUES"
								position = { 0 100 }
								parentanchor = top|center
								autoresize = yes
								using = fontsize_xl
							}
							flowcontainer = {
								direction = horizontal
								position = { 0 70 }
								parentanchor = center
								spacing = 35

								### Buttons to promote each Artist Type plus Patron of the Arts ###
								# Composer
								widget = {
									size = { 62 62 }

									#Button when it is not active
									button_icon_round = {
										parentanchor = center
										size = { 55 55 }

										datacontext = "[GetScriptedGui('mr_artists_promote_composer_sgui')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										tooltip = "MR_PROMOTE_COMPOSER_TT"
										blockoverride "icon" {
											texture = "gfx/interface/icons/character_role_icons/elgar_composer_role.dds"
										}
										blockoverride "icon_size" {
											size = { 100% 100% }
										}
									}

									#Two Icons fow when it is active (normal color plus hihlight circle)
									icon = {
										parentanchor = center
										size = { 100% 100%}
										using = highlighted_circle_selection_small
										visible = "[GetScriptedGui('mr_artists_composer_is_promoted_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									icon = {
										parentanchor = center
										size = { 55 55 }
										texture = "gfx/interface/icons/character_role_icons/elgar_composer_role.dds"
										visible = "[GetScriptedGui('mr_artists_composer_is_promoted_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

										tooltip = "MR_PROMOTING_COMPOSER_TT"
									}	
								}
								# Writer
								widget = {
									size = { 62 62 }

									#Button when it is not active
									button_icon_round = {
										parentanchor = center
										size = { 55 55 }

										datacontext = "[GetScriptedGui('mr_artists_promote_writer_sgui')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										tooltip = "MR_PROMOTE_WRITER_TT"
										blockoverride "icon" {
											texture = "gfx/interface/icons/character_role_icons/manzoni_writer_role.dds"
										}
										blockoverride "icon_size" {
											size = { 100% 100% }
										}
									}

									#Two Icons fow when it is active (normal color plus hihlight circle)
									icon = {
										parentanchor = center
										size = { 100% 100%}
										using = highlighted_circle_selection_small
										visible = "[GetScriptedGui('mr_artists_pwriter_is_promoted_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									icon = {
										parentanchor = center
										size = { 55 55 }
										texture = "gfx/interface/icons/character_role_icons/manzoni_writer_role.dds"
										visible = "[GetScriptedGui('mr_artists_pwriter_is_promoted_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

										tooltip = "MR_PROMOTING_WRITER_TT"
									}	
								}
								# Painter
								widget = {
									size = { 62 62 }

									#Button when it is not active
									button_icon_round = {
										parentanchor = center
										size = { 55 55 }

										datacontext = "[GetScriptedGui('mr_artists_promote_painter_sgui')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										tooltip = "MR_PROMOTE_PAINTER_TT"
										blockoverride "icon" {
											texture = "gfx/interface/icons/character_role_icons/klimt_painter_role.dds"
										}
										blockoverride "icon_size" {
											size = { 100% 100% }
										}
									}

									#Two Icons fow when it is active (normal color plus hihlight circle)
									icon = {
										parentanchor = center
										size = { 100% 100%}
										using = highlighted_circle_selection_small
										visible = "[GetScriptedGui('mr_artists_painter_is_promoted_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									icon = {
										parentanchor = center
										size = { 55 55 }
										texture = "gfx/interface/icons/character_role_icons/klimt_painter_role.dds"
										visible = "[GetScriptedGui('mr_artists_painter_is_promoted_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

										tooltip = "MR_PROMOTING_PAINTER_TT"
									}	
								}

								# Patron of the Arts
								widget = {
									size = { 62 62 }

									#Button when it is not active
									button_icon_round = {
										parentanchor = center
										size = { 55 55 }
	
										datacontext = "[GetScriptedGui('mr_patron_of_the_arts')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										tooltip = "MR_PATRON_OF_THE_ARTS_BUTTON_TT"
										blockoverride "icon" {
											texture = "gfx/interface/icons/GUI_icons/CUI_patron_of_arts_button.dds"
										}
										blockoverride "icon_size" {
											size = { 100% 100% }
										}
									}

									#highlight circle to indicate that it is currently active
									icon = {
										using = highlighted_circle_selection_small
										size = { 105% 105%}
										visible = "[GetScriptedGui('mr_artists_patron_of_the_arts_is_active_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}

									#Button to deactivate
									button_icon_round = {
										parentanchor = center
										size = { 55 55 }
	
										datacontext = "[GetScriptedGui('mr_deactivate_patron_of_the_arts')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										tooltip = "MR_DEACTIVATE_PATRON_OF_THE_ARTS_BUTTON_TT"
										blockoverride "icon" {
											texture = "gfx/interface/icons/GUI_icons/CUI_patron_of_arts_deactivate_button.dds"
										}
										blockoverride "icon_size" {
											size = { 100% 100% }
										}
									}
								}
							}
						}
						
						# Cultural Tradition
						widget = {
							size = { 900 235 }
							background = {
								using = entry_bg_simple
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = preferred
								spacing = 12

								textbox = {
									text = "CULTURAL_TRADITION_TEXT"
									autoresize = yes
									using = fontsize_mega
								}
								
								#Art Prestige
								hbox = {
									spacing = 40

									textbox = {
										text = "MR_ART_TRADITION"
										tooltip = "MR_ART_TRADITION_TT"
										autoresize = yes
										using = fontsize_xxl
									}
									textbox = {
										text = "MR_ART_PRESTIGE"
										autoresize = yes
										using = fontsize_xxl
									}
								}

								hbox = {
									spacing = 15

									widget = {
										size = { 60 60 }

										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_classicism_inactive')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_classicism_inactive.dds"
											tooltip = "ARTISTS_CLASSICISM_INACTIVE_TT"
										}
										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_classicism_active')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_classicism.dds"
											tooltip = "ARTISTS_CLASSICISM_ACTIVE_TT"
										}
									}
									widget = {
										size = { 60 60 }

										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_romanticism_inactive')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_romanticism_inactive.dds"
											tooltip = "ARTISTS_ROMANTICISM_INACTIVE_TT"
										}
										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_romanticism_active')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_romanticism.dds"
											tooltip = "ARTISTS_ROMANTICISM_ACTIVE_TT"
										}
									}
									widget = {
										size = { 60 60 }

										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_realism_inactive')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_realism_inactive.dds"
											tooltip = "ARTISTS_REALISM_INACTIVE_TT"
										}
										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_realism_active')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_realism.dds"
											tooltip = "ARTISTS_REALISM_ACTIVE_TT"
										}
									}
									widget = {
										size = { 60 60 }

										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_irrationalism_inactive')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_irrationalism_inactive.dds"
											tooltip = "ARTISTS_IRRATIONALISM_INACTIVE_TT"
										}
										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_irrationalism_active')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_irrationalism.dds"
											tooltip = "ARTISTS_IRRATIONALISM_ACTIVE_TT"
										}
									}
									widget = {
										size = { 60 60 }

										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_impressionism_inactive')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_impressionism_inactive.dds"
											tooltip = "ARTISTS_IIMPRESSIONISM_INACTIVE_TT"
										}
										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_impressionism_active')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_impressionism.dds"
											tooltip = "ARTISTS_IIMPRESSIONISM_ACTIVE_TT"
										}
									}
									widget = {
										size = { 60 60 }

										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_expressionism_inactive')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_expressionism_inactive.dds"
											tooltip = "ARTISTS_EXPRESSIONISM_INACTIVE_TT"
										}
										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_expressionism_active')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_expressionism.dds"
											tooltip = "ARTISTS_EXPRESSIONISM_ACTIVE_TT"
										}
									}
									widget = {
										size = { 60 60 }

										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_art_nouveau_inactive')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_art_nouveau_inactive.dds"
											tooltip = "ARTISTS_ART_NOUVEAU_INACTIVE_TT"
										}
										icon = {
											size = { 100% 100% }
											datacontext = "[GetScriptedGui('mr_art_nouveau_active')]"
											visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	
											texture = "gfx/interface/icons/state_trait_icons/state_trait_artists_center_art_nouveau.dds"
											tooltip = "ARTISTS_ART_NOUVEAU_ACTIVE_TT"
										}
									}
								}

								#Buttons
								flowcontainer = {
									direction = horizontal
									spacing = 20
									

									#Buttons for every Art Style 
									button = { #Impressionism
										using = default_button_primary_big_action
										size = { 270 55 }
										raw_text = "MR_IMPRESSIONISM_BUTTON"
										using = fontsize_xl
				
										datacontext = "[GetScriptedGui('mr_impressionism_button')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										tooltip = "MR_IMPRESSIONISM_BUTTON_TT"
									}
									button = { #Expressionism
										using = default_button_primary_big_action
										size = { 270 55 }
										raw_text = "MR_EXPRESSIONISM_BUTTON"
										using = fontsize_xl
				
										datacontext = "[GetScriptedGui('mr_expressionism_button')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										tooltip = "MR_EXPRESSIONISM_BUTTON_TT"
									}
									button = { #Art Nouveau
										using = default_button_primary_big_action
										size = { 270 55 }
										raw_text = "MR_ART_NOUVEAU_BUTTON"
										using = fontsize_xl
				
										datacontext = "[GetScriptedGui('mr_art_nouveau_button')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										tooltip = "MR_ART_NOUVEAU_BUTTON_TT"
									}
								}

								expand = {}
							}
						}
					}
					scrollbox = {
						size = { 1842 588 }
						layoutpolicy_vertical = expanding
						blockoverride "scrollbox_background"
						{}
						blockoverride "scrollbox_content"
						{
							vbox = {
								layoutpolicy_vertical = expanding
								spacing = 15
					
								#Composer
								artist_widget_character_with_button = {
									blockoverride "role_icon" {
										texture = "gfx/interface/icons/character_role_icons/elgar_composer_role.dds"
									}
									blockoverride "role_tooltip" {
										tooltip = "[concept_elgar_composer_desc]"
									}
									blockoverride "role_name" {
										text = "COMPOSER_HEADER_TEXT"
									}
									blockoverride "character" {
										datacontext = "[GetPlayer.MakeScope.Var('elgar_composer_var').GetCharacter]"
									}
									blockoverride "character_visible" {
										visible = "[GetScriptedGui('mr_has_composer_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									blockoverride "no_character_visible" {
										visible = "[Not( GetScriptedGui('mr_has_composer_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) )]"
									}
									blockoverride "character_name" {
										text = "[GetPlayer.GetCustom('artists_has_composer_gui_type')]"
									}
									blockoverride "achievements_icon_visibility" {
										datacontext = "[GetScriptedGui('mr_has_composer_sgui')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									blockoverride "scientist_achievement_tooltip" {
										tooltip = "MR_COMPOSER_ACHIEVEMENTS_TT"
									}
									blockoverride "character_traits" {
										datacontext = "[GetPlayer.MakeScope.Var('elgar_composer_var').GetCharacter]"
										datamodel = "[Character.AccessTraits]"
									}
									blockoverride "experience_bar_visibility" {
										visible = yes
									}
									blockoverride "values" {
										min = 0
										max = 500
										value = "[GetPlayer.MakeScope.Var('elgar_composer_var').GetVariable('elgar_composer_experience').GetValue]"
									}
									blockoverride "experience_tooltip" {
										tooltip = "[GetPlayer.GetCustom('GUI_elgar_composer_experience_type')]"
									}
									blockoverride "experience_bar_text" {
										text = "[GetPlayer.GetCustom('GUI_elgar_composer_experience_text_type')]"
									}
									blockoverride "small_box_content" {
										widget = { #This Icon allows an overview of the 10 Nations with the most Astronomical Objects
											#GUI_on_actions.txt sets the values up with two scripted_effects from GUI_scripted_effects.txt
											#The Correct Localizations are chosen in the GUI_customizable_localization.txt and
											#used in the mr_GUI_l_english.yml file to display the global variables.
											size = { 30 30 }
											parentanchor = top|right
											position = { 5 -5 }
										
											icon = {
												size = { 100% 100% }
												texture = "gfx/interface/backgrounds/round_button_bg.dds"
												block "enabled" {}
											}
											icon = {
												size = { 100% 100% }
												texture = "gfx/interface/buttons/button_icons/list.dds"
												block "enabled" {}
												tooltip = "RANKING_MUSICAL_TRADITION_VAR_TT"
											}
										}
										flowcontainer = {
											direction = vertical
											maximumsize = { 350 360 }
											spacing = 8
											margin = { 25 15 }

											flowcontainer = {
												direction = horizontal
												maximumsize = { 350 360 }
												spacing = 8

												textbox = {
													#Musical Tradition
													text = "MUSICAL_TRADITION_VAR"
													parentanchor = top|left
													maximumsize = { 325 360 }
													autoresize = yes
													multiline = yes
													using = fontsize_xl
													tooltip = "MUSICAL_TRADITION_VAR_TT"
												}
												textbox = {
													#yearly Musical Tradition
													text = "MR_YEARLY_MUSICAL_TRADITION"
													parentanchor = top|left
													maximumsize = { 325 360 }
													autoresize = yes
													multiline = yes
													using = fontsize_xl
													tooltip = "MR_YEARLY_MUSICAL_TRADITION_TT"
												}
												expand = {}
											}
											textbox = {
												#Composer Compositions
												text = "MR_TOTAL_COMPOSITIONS_COMPOSER"
												datacontext = "[GetScriptedGui('mr_has_composer_sgui')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												parentanchor = top|left
												maximumsize = { 325 360 }
												autoresize = yes
												multiline = yes
												using = fontsize_xl
											}
											textbox = {
												#Composer Masterworks
												text = "MR_TOTAL_MASTERWORKS_COMPOSER"
												datacontext = "[GetScriptedGui('mr_has_composer_sgui')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												parentanchor = top|left
												maximumsize = { 325 360 }
												autoresize = yes
												multiline = yes
												using = fontsize_xl
											}
											textbox = {
												#Composer Ranking
												text = "RANKING_COMPOSER_TOP_5"
												parentanchor = top|left
												maximumsize = { 325 360 }
												autoresize = yes
												multiline = yes
												using = fontsize_xl
											}
											expand = {}
										}
									}
									blockoverride "visit_button" {
										text = "MR_VISIT_OPERA_BUTTON"
										datacontext = "[GetScriptedGui('mr_visit_opera_gui_button')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										tooltip = "MR_VISIT_OPERA_BUTTON_TT"
									}
									blockoverride "big_box_content" {
										flowcontainer = {
											direction = vertical
											parentanchor = hcenter
											ignoreinvisible = yes
											spacing = 8
											margin = { 25 15 }
	
											button = {
												#Compose a Musical Work
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_COMPOSE_A_WORK_BUTTON"
												using = fontsize_medium
						
												datacontext = "[GetScriptedGui('mr_compose_a_work_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_COMPOSE_A_WORK_BUTTON_TT"
											}
											button = {
												#Stop Composing
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_STOP_COMPOSING_A_WORK_BUTTON"
												using = fontsize_medium
						
												datacontext = "[GetScriptedGui('mr_stop_composing_a_work_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_STOP_COMPOSING_A_WORK_BUTTON_TT"
											}
											button = {
												#Conduct a season
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_CONDUCT_A_SEASON_BUTTON"
												using = fontsize_medium
						
												datacontext = "[GetScriptedGui('mr_conduct_a_season_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_CONDUCT_A_SEASON_BUTTON_TT"
											}
											button = {
												#Go on a Music Tour
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_GO_ON_A_MUSIC_TOUR_BUTTON"
												using = fontsize_medium
						
												datacontext = "[GetScriptedGui('mr_go_on_a_music_tour_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_GO_ON_A_MUSIC_TOUR_BUTTON_TT"
											}
											button = {
												#Create a Masterpiece
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_CREATE_A_MASTERPIECE_BUTTON"
												using = fontsize_medium

												datacontext = "[GetScriptedGui('mr_create_a_masterpiece_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_CREATE_A_MASTERPIECE_BUTTON_TT"
											}
											button = {
												#Stop creating a Masterpiece
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_STOP_CREATING_MASTERWORK_BUTTON"
												using = fontsize_medium

												datacontext = "[GetScriptedGui('mr_stop_creating_masterwork_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_STOP_CREATING_MASTERWORK_BUTTON_TT"
											}
											button = {
												#Mozart Monument
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_MOZART_MONUMENT_BUTTON"
												using = fontsize_medium

												datacontext = "[GetScriptedGui('mr_mozart_monument_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_MOZART_MONUMENT_BUTTON_TT"
											}
											button = {
												#Beethoven Monument
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_BEETHOVEN_MONUMENT_BUTTON"
												using = fontsize_medium

												datacontext = "[GetScriptedGui('mr_beethoven_monument_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_BEETHOVEN_MONUMENT_BUTTON_TT"
											}
											button = {
												#National Broadcasting Channel
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_NBC_BUTTON"
												using = fontsize_medium

												datacontext = "[GetScriptedGui('mr_nbc_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_NBC_BUTTON_TT"
											}
											button = {
												#National Broadcasting Channel
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_NBC_LICENCE_BUTTON"
												using = fontsize_medium

												datacontext = "[GetScriptedGui('mr_nbc_licence_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_NBC_LICENCE_BUTTON_TT"
											}
										}
									}
									blockoverride "right_box_content" {
										vbox = {
											layoutpolicy_vertical = expanding
											layoutpolicy_horizontal = expanding

											textbox = {
												text = "MR_TRAVELLING_COMPOSERS"
												autoresize = yes
												using = fontsize_mega
											}

											fullscreen_scrollarea = {
												maximumsize = { 720 420 }
									
												scrollbarpolicy_horizontal = as_needed
												
												scrollbar_horizontal = {
													using = Scrollbar_Horizontal
												}

												blockoverride "scrollarea_content" {
													hbox = {
														spacing = 20
														margin = { 10 10 }
														datamodel = "[GetGlobalList('mr_travelling_composer_global_list')]"
													
														item = {
															vbox = {
																spacing = 10
																margin = { 10 10 }
																minimumsize = { 220 340 }
																datacontext = "[Scope.GetCharacter]"
																using = entry_bg_fancy
		
																# Character Portrait
																character_portrait_medium_torso = {
																	blockoverride "show_hat" {}
																	blockoverride "tooltip" {} #TODO Remove when Tooltip doesn't cause error anymore
																	blockoverride "portrait_icons" {} #TODO Remove when Tooltip doesn't cause error anymore
																	blockoverride "portrait_button" {} #TODO Remove when Tooltip doesn't cause error anymore
																}
													
																#Name
																default_header_clean_faded = {
																	size = { 160 40 }
																	blockoverride "text" {
																		text = "[Character.GetCustom('elgar_composer_rating_new_composer_icon_type')] [Character.GetLastName]"
																	}
																}

																#Experience
																green_progressbar_horizontal = {
																	size = { 160 25 }
																	blockoverride "values" {
																		block "values"
																		{
																			min = 0
																			max = 500
																			value = "[FixedPointToFloat(Character.MakeScope.GetVariable('elgar_composer_experience').GetValue)]"
																		}
																	}
																	tooltip = "MR_TRAVELLING_COMPOSER_EXPERIENCE_TOOLTIP"
																	textbox = {
																		text = "[Character.GetCustom('GUI_elgar_travelling_composer_experience_text_type')]"
																		position = { 0 -5 }
																		parentanchor = center
																		autoresize = yes
																		using = fontsize_large
																	}
																}

																button = {
																	#Invite Composer
																	using = default_button_primary_big_action
																	size = { 170 40 }
																	raw_text = "MR_INVITE_COMPOSER_BUTTON"
																	using = fontsize_medium
											
																	datacontext = "[GetScriptedGui('mr_invite_composer_button')]"
																	onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('chosen_composer', Scope.GetCharacter.MakeScope ).End)]"
																	enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('chosen_composer', Scope.GetCharacter.MakeScope ).End)]"
																	tooltip = "MR_INVITE_COMPOSER_BUTTON_TT"
																}
															}
														}
													}
												}
											}
										}
									}
								}

								#Writer
								artist_widget_character_with_button = {
									blockoverride "role_icon" {
										texture = "gfx/interface/icons/character_role_icons/manzoni_writer_role.dds"
									}
									blockoverride "role_tooltip" {
										tooltip = "[concept_manzoni_writer_desc]"
									}
									blockoverride "role_name" {
										text = "WRITER_HEADER_TEXT"
									}
									blockoverride "character" {
										datacontext = "[GetPlayer.MakeScope.Var('manzoni_writer_var').GetCharacter]"
									}
									blockoverride "character_visible" {
										visible = "[GetScriptedGui('mr_has_writer_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									blockoverride "no_character_visible" {
										visible = "[Not( GetScriptedGui('mr_has_writer_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) )]"
									}
									blockoverride "character_name" {
										text = "[GetPlayer.GetCustom('artists_has_writer_gui_type')]"
									}
									blockoverride "achievements_icon_visibility" {
										visible = no
									}
									blockoverride "scientist_achievement_tooltip" {
									#	tooltip = "MR_ASTRONOMER_ACHIEVEMENTS_TT"
									}
									blockoverride "character_traits" {
										datacontext = "[GetPlayer.MakeScope.Var('manzoni_writer_var').GetCharacter]"
										datamodel = "[Character.AccessTraits]"
									}
									blockoverride "experience_bar_visibility" {
										visible = yes
									}
									blockoverride "values" {
										min = 0
										max = 500
										value = "[GetPlayer.MakeScope.Var('manzoni_writer_var').GetVariable('manzoni_writer_experience').GetValue]"
									}
									blockoverride "experience_tooltip" {
										tooltip = "[GetPlayer.GetCustom('GUI_manzoni_writer_experience_type')]"
									}
									blockoverride "experience_bar_text" {
										text = "[GetPlayer.GetCustom('GUI_manzoni_writer_experience_text_type')]"
									}
									blockoverride "small_box_content" {
										widget = { #This Icon allows an overview of the 10 Nations with the most Astronomical Objects
											#GUI_on_actions.txt sets the values up with two scripted_effects from GUI_scripted_effects.txt
											#The Correct Localizations are chosen in the GUI_customizable_localization.txt and
											#used in the mr_GUI_l_english.yml file to display the global variables.
											size = { 30 30 }
											parentanchor = top|right
											position = { 5 -5 }
										
											icon = {
												size = { 100% 100% }
												texture = "gfx/interface/backgrounds/round_button_bg.dds"
												block "enabled" {}
											}
											icon = {
												size = { 100% 100% }
												texture = "gfx/interface/buttons/button_icons/list.dds"
												block "enabled" {}
												tooltip = "RANKING_LITERARY_TRADITION_VAR_TT"
											}
										}
										flowcontainer = {
											direction = vertical
											maximumsize = { 350 360 }
											spacing = 8
											margin = { 25 15 }

											flowcontainer = {
												direction = horizontal
												maximumsize = { 350 360 }
												spacing = 8

												textbox = {
													#Literary Tradition
													text = "LITERARY_TRADITION_VAR"
													parentanchor = top|left
													maximumsize = { 325 360 }
													autoresize = yes
													multiline = yes
													using = fontsize_xl
													tooltip = "LITERARY_TRADITION_VAR_TT"
												}
												textbox = {
													#yearly Musical Tradition
													text = "MR_YEARLY_LITERARY_TRADITION"
													parentanchor = top|left
													maximumsize = { 325 360 }
													autoresize = yes
													multiline = yes
													using = fontsize_xl
													tooltip = "MR_YEARLY_LITERARY_TRADITION_TT"
												}
												expand = {}
											}
											textbox = {
												#Current Genre
												text = "MR_CURRENT_GENRE_LOC"
												parentanchor = top|left
												maximumsize = { 325 360 }
												autoresize = yes
												multiline = yes
												using = fontsize_xl
											#	tooltip = "LITERARY_TRADITION_VAR_TT"
											}
											textbox = {
												#Current Genre
												text = "MR_WRITER_GENRE_LOC"
												datacontext = "[GetScriptedGui('mr_has_writer_sgui')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												parentanchor = top|left
												maximumsize = { 325 360 }
												autoresize = yes
												multiline = yes
												using = fontsize_xl
											#	tooltip = "LITERARY_TRADITION_VAR_TT"
											}
											textbox = {
												#Bestsellers writer
												text = "MANZONI_BESTSELLERS_WRITER"
												datacontext = "[GetScriptedGui('mr_has_writer_sgui')]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												parentanchor = top|left
												maximumsize = { 325 360 }
												autoresize = yes
												elide = right
												multiline = no
												using = fontsize_xl
											#	tooltip = "LITERARY_TRADITION_VAR_TT"
											}
											textbox = {
												#Bestsellers Country
												text = "MANZONI_BESTSELLERS_COUNTRY"
												parentanchor = top|left
												maximumsize = { 325 360 }
												autoresize = yes
												multiline = yes
												using = fontsize_xl
											#	tooltip = "LITERARY_TRADITION_VAR_TT"
											}
											textbox = {
												#Publications Country
												text = "MANZONI_PUBLICATIONS_COUNTRY"
												parentanchor = top|left
												maximumsize = { 325 360 }
												autoresize = yes
												multiline = yes
												using = fontsize_xl
											#	tooltip = "LITERARY_TRADITION_VAR_TT"
											}
											expand = {}
										}
									}
									blockoverride "visit_button" {
										text = "MR_VISIT_OPERA_BUTTON"
										datacontext = "[GetScriptedGui('mr_visit_opera_gui_button')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										tooltip = "MR_VISIT_OPERA_BUTTON_TT"
									}
									blockoverride "big_box_content" {
										flowcontainer = {
											direction = vertical
											parentanchor = hcenter
											ignoreinvisible = yes
											spacing = 8
											margin = { 25 15 }
	
											button = {
												#Newspaper novel
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_NEWSPAPER_NOVEL_BUTTON"
												using = fontsize_medium
						
												datacontext = "[GetScriptedGui('mr_newspaper_novel_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_NEWSPAPER_NOVEL_BUTTON_TT"
											}
											button = {
												#Reading Tour
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_READING_TOUR_BUTTON"
												using = fontsize_medium
						
												datacontext = "[GetScriptedGui('mr_reading_tour_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_READING_TOUR_BUTTON_TT"
											}
										}
									}
									blockoverride "right_box_content" {
										vbox = {
											layoutpolicy_vertical = expanding
											layoutpolicy_horizontal = expanding

											textbox = {
												text = "MR_LOCAL_WRITERS"
												autoresize = yes
												using = fontsize_mega
											}

											fullscreen_scrollarea = {
												maximumsize = { 720 420 }
									
												scrollbarpolicy_horizontal = as_needed
												
												scrollbar_horizontal = {
													using = Scrollbar_Horizontal
												}

												blockoverride "scrollarea_content" {
													hbox = {
														spacing = 20
														margin = { 10 10 }
														datamodel = "[GetPlayer.MakeScope.GetList('mr_local_writers_list')]"
													
														item = {
															vbox = {
																spacing = 10
																margin = { 10 10 }
																minimumsize = { 220 340 }
																datacontext = "[Scope.GetCharacter]"
																using = entry_bg_fancy
		
																container = {
																#	button_icon_round = {
																		# Exile local Writer
																#		size = { 30 30 }
																#		position = { 130 5 }
													
																#		datacontext = "[GetScriptedGui('mr_exile_local_writer_button')]"
																#		onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('chosen_writer', Scope.GetCharacter.MakeScope ).End)]"
																#		enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('chosen_writer', Scope.GetCharacter.MakeScope ).End)]"
																#		tooltip = "MR_EXILE_LOCAL_WRITER_TT"
																#		blockoverride "icon" {
																#			texture = "gfx/interface/icons/GUI_icons/GUI_booting_button.dds"
																#		}
																#		blockoverride "icon_size" {
																#			size = { 75% 75% }
																#		}					
																#	}
	
																	# Character Portrait
																	character_portrait_medium_torso = {
																		blockoverride "show_hat" {}
																		blockoverride "tooltip" {} #TODO Remove when Tooltip doesn't cause error anymore
																		blockoverride "portrait_icons" {} #TODO Remove when Tooltip doesn't cause error anymore
																		blockoverride "portrait_button" {} #TODO Remove when Tooltip doesn't cause error anymore
																	}
																}
													
																#Name
																default_header_clean_faded = {
																	size = { 160 40 }
																	blockoverride "text" {
																		text = "MR_LOCAL_WRITER_NAME"
																	}
																}

																#Experience
																green_progressbar_horizontal = {
																	size = { 160 25 }
																	blockoverride "values" {
																		block "values"
																		{
																			min = 0
																			max = 500
																			value = "[FixedPointToFloat(Character.MakeScope.GetVariable('manzoni_writer_experience').GetValue)]"
																		}
																	}
																	tooltip = "MR_LOCAL_WRITER_EXPERIENCE_TOOLTIP"
																	textbox = {
																		text = "[Character.GetCustom('GUI_manzoni_local_writer_experience_text_type')]"
																		position = { 0 -5 }
																		parentanchor = center
																		autoresize = yes
																		using = fontsize_large
																	}
																}

																button = {
																	#Invite Writer
																	using = default_button_primary_big_action
																	size = { 170 40 }
																	raw_text = "MR_INVITE_WRITER_BUTTON"
																	using = fontsize_medium
											
																	datacontext = "[GetScriptedGui('mr_invite_writer_button')]"
																	onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('chosen_writer', Scope.GetCharacter.MakeScope ).End)]"
																	enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('chosen_writer', Scope.GetCharacter.MakeScope ).End)]"
																	tooltip = "MR_INVITE_WRITER_BUTTON_TT"
																}
															}
														}
													}
												}
											}
										}
									}
								}

								#Painter
								artist_widget_character_with_button = {
									blockoverride "role_icon" {
										texture = "gfx/interface/icons/character_role_icons/klimt_painter_role.dds"
									}
									blockoverride "role_tooltip" {
										tooltip = "[concept_klimt_painter_desc]"
									}
									blockoverride "role_name" {
										text = "PAINTER_HEADER_TEXT"
									}
									blockoverride "character" {
										datacontext = "[GetPlayer.MakeScope.Var('klimt_painter_var').GetCharacter]"
									}
									blockoverride "character_visible" {
										visible = "[GetScriptedGui('mr_has_painter_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									blockoverride "no_character_visible" {
										visible = "[Not( GetScriptedGui('mr_has_painter_sgui').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) )]"
									}
									blockoverride "character_name" {
										text = "[GetPlayer.GetCustom('artists_has_painter_gui_type')]"
									}
									blockoverride "achievements_icon_visibility" {
										datacontext = "[GetScriptedGui('mr_has_painter_sgui')]"
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
									}
									blockoverride "scientist_achievement_tooltip" {
										tooltip = "MR_PAINTER_ACHIEVEMENTS_TT"
									}
									blockoverride "character_traits" {
										datacontext = "[GetPlayer.MakeScope.Var('klimt_painter_var').GetCharacter]"
										datamodel = "[Character.AccessTraits]"
									}
									blockoverride "experience_bar_visibility" {
										visible = yes
									}
									blockoverride "values" {
										min = 0
										max = 500
										value = "[GetPlayer.MakeScope.Var('klimt_painter_var').GetVariable('klimt_painter_experience').GetValue]"
									}
									blockoverride "experience_tooltip" {
										tooltip = "[GetPlayer.GetCustom('GUI_klimt_painter_experience_type')]"
									}
									blockoverride "experience_bar_text" {
										text = "[GetPlayer.GetCustom('GUI_klimt_painter_experience_text_type')]"
									}
									blockoverride "small_box_content" {
										widget = { #This Icon allows an overview of the 10 Nations with the most Painting Tradition
											#GUI_on_actions.txt sets the values up with two scripted_effects from GUI_scripted_effects.txt
											#The Correct Localizations are chosen in the GUI_customizable_localization.txt and
											#used in the mr_GUI_l_english.yml file to display the global variables.
											size = { 30 30 }
											parentanchor = top|right
											position = { 5 -5 }
										
											icon = {
												size = { 100% 100% }
												texture = "gfx/interface/backgrounds/round_button_bg.dds"
												block "enabled" {}
											}
											icon = {
												size = { 100% 100% }
												texture = "gfx/interface/buttons/button_icons/list.dds"
												block "enabled" {}
												tooltip = "RANKING_PAINTING_TRADITION_VAR_TT"
											}
										}
										flowcontainer = {
											direction = vertical
											maximumsize = { 350 360 }
											spacing = 8
											margin = { 25 15 }

											flowcontainer = {
												direction = horizontal
												maximumsize = { 350 360 }
												spacing = 8

												textbox = {
													#Painting Tradition
													text = "PAINTING_TRADITION_VAR"
													parentanchor = top|left
													maximumsize = { 325 360 }
													autoresize = yes
													multiline = yes
													using = fontsize_xl
													tooltip = "PAINTING_TRADITION_VAR_TT"
												}
												textbox = {
													#yearly Painting Tradition
													text = "MR_YEARLY_PAINTING_TRADITION"
													parentanchor = top|left
													maximumsize = { 325 360 }
													autoresize = yes
													multiline = yes
													using = fontsize_xl
													tooltip = "MR_YEARLY_PAINTING_TRADITION_TT"
												}
												expand = {}
											}
											textbox = {
												#Total Masterworks of Country
												text = "MR_TOTAL_MASTERWORKS_COUNTRY"
												parentanchor = top|left
												maximumsize = { 325 360 }
												autoresize = yes
												multiline = yes
												using = fontsize_xl
												tooltip = "MR_TOTAL_MASTERWORKS_COUNTRY_TT"
											}
											textbox = {
												#Painter Ranking
												text = "RANKING_PAINTER_TOP_5"
												parentanchor = top|left
												maximumsize = { 325 360 }
												autoresize = yes
												multiline = yes
												using = fontsize_xl
											}
											expand = {}
										}
									}
									blockoverride "visit_button" {
										text = "MR_VISIT_GALLERY_BUTTON"
										datacontext = "[GetScriptedGui('mr_visit_gallery_gui_button')]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
										tooltip = "MR_VISIT_GALLERY_BUTTON_TT"
									}
									blockoverride "big_box_content" {
										flowcontainer = {
											direction = vertical
											parentanchor = hcenter
											ignoreinvisible = yes
											spacing = 8
											margin = { 25 15 }
	
											button = {
												#Compose a Musical Work
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_PAINTER_TRIP_BUTTON"
												using = fontsize_medium
						
												datacontext = "[GetScriptedGui('mr_painter_trip_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_PAINTER_TRIP_BUTTON_TT"
											}
											button = {
												#Acquire a Masterwork
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_ACQUIRE_MASTERWORK_BUTTON"
												using = fontsize_medium
						
												datacontext = "[GetScriptedGui('mr_acquire_masterwork_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_ACQUIRE_MASTERWORK_BUTTON_TT"
											}
											button = {
												#Vernissage Button
												using = default_button_primary_big_action
												size = { 300 45 }
												raw_text = "MR_VERNISSAGE_BUTTON"
												using = fontsize_medium
						
												datacontext = "[GetScriptedGui('mr_vernissage_button')]"
												onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
												tooltip = "MR_VERNISSAGE_BUTTON_TT"
											}
										}
									}
									blockoverride "right_box_content" {
										vbox = {
											layoutpolicy_vertical = expanding
											layoutpolicy_horizontal = expanding

											textbox = {
												text = "MR_INDEPENDENT_PAINTER"
												autoresize = yes
												using = fontsize_mega
											}

											fullscreen_scrollarea = {
												maximumsize = { 720 420 }
									
												scrollbarpolicy_horizontal = as_needed
												
												scrollbar_horizontal = {
													using = Scrollbar_Horizontal
												}

												blockoverride "scrollarea_content" {
													hbox = {
														spacing = 20
														margin = { 10 10 }
														datamodel = "[GetGlobalList('mr_independent_painter_global_list')]"
													
														item = {

															vbox = {
																spacing = 10
																margin = { 10 10 }
																minimumsize = { 220 340 }
																datacontext = "[Scope.GetCharacter]"
																using = entry_bg_fancy

																datacontext = "[GetScriptedGui('mr_independent_painter_visible_sgui')]"
																visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('chosen_painter', Scope.GetCharacter.MakeScope ).End)]"

																# Character Portrait
																character_portrait_medium_torso = {
																	blockoverride "show_hat" {}
																	blockoverride "tooltip" {} #TODO Remove when Tooltip doesn't cause error anymore
																	blockoverride "portrait_icons" {} #TODO Remove when Tooltip doesn't cause error anymore
																	blockoverride "portrait_button" {} #TODO Remove when Tooltip doesn't cause error anymore
																}
													
																#Name
																default_header_clean_faded = {
																	size = { 160 40 }
																	blockoverride "text" {
																		text = "[Character.GetCustom('klimt_painter_rating_new_painter_icon_type')] [Character.GetLastName]"
																	}
																}

																#Experience
																green_progressbar_horizontal = {
																	size = { 160 25 }
																	blockoverride "values" {
																		block "values"
																		{
																			min = 0
																			max = 500
																			value = "[FixedPointToFloat(Character.MakeScope.GetVariable('klimt_painter_experience').GetValue)]"
																		}
																	}
																	tooltip = "MR_INDEPENDENT_PAINTER_EXPERIENCE_TOOLTIP"
																	textbox = {
																		text = "[Character.GetCustom('GUI_klimt_independent_painter_experience_text_type')]"
																		position = { 0 -5 }
																		parentanchor = center
																		autoresize = yes
																		using = fontsize_large
																	}
																}

																button = {
																	#Invite Composer
																	using = default_button_primary_big_action
																	size = { 170 40 }
																	raw_text = "MR_INVITE_INDEPENDENT_PAINTER"
																	using = fontsize_medium
											
																	datacontext = "[GetScriptedGui('mr_invite_painter_button')]"
																	onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('chosen_painter', Scope.GetCharacter.MakeScope ).End)]"
																	enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('chosen_painter', Scope.GetCharacter.MakeScope ).End)]"
																	tooltip = "MR_INVITE_INDEPENDENT_PAINTER_TT"
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}	
						}
					}
				}
			}
		}
	}

	type artist_widget_character_with_button = widget {
		# Blocks to override:
		# role_icon
		# role_tooltip
		# role_name
		# fontsize_role
		# character
		# character_visible
		# no_character_visible
		# character_name
		# achievements_icon_visibility
		# scientist_achievement_tooltip
		# character_traits
		# experience_bar_visibility
		# values
		# experience_tooltip
		# experience_bar_text
		# small_box_content
		# visit_button
		# big_box_content
		
		size = { 1813 450 }
		background = {
			using = entry_bg_unit_dark
		}

		# Character Portrait
		character_portrait_large_torso = {
			position = { 40 45 }
			block "character"
			{
				datacontext = "[AccessPlayer.AccessRuler]"
			}
			block "character_visible"{}
			blockoverride "show_hat" {}
			blockoverride "tooltip" {} #TODO Remove when Tooltip doesn't cause error anymore
			blockoverride "portrait_icons" {} #TODO Remove when Tooltip doesn't cause error anymore
			blockoverride "portrait_button" {} #TODO Remove when Tooltip doesn't cause error anymore
		}
		mr_no_character = {
			position = { 40 65 }
			block "no_character_visible"{}
		}
		default_header_clean_faded = {
			size = { 250 45 }
			position = { 14 300 }
			blockoverride "text" {
			}
			textbox = {
				block "character_name" {
					text = "ARCHAEOLOGY_HEADER_TEXT"
				}
				parentanchor = center
				position = { 10 -2 }
				autoresize = yes
				max_width = 175
				elide = right
				using = fontsize_large
			}
		}
		widget = {
			size = { 65 65 }
			position = { 25 20 }
			icon = {
				size = { 100% 100% }
				block "role_icon" {
					# texture = ""
				}
				block "role_tooltip" {}
			}
			textbox = {
				block "role_name" {
					text = "ARCHAEOLOGY_HEADER_TEXT"
				}
				position = { 85 5 }
				parentanchor = left
				autoresize = yes
				max_width = 196
				elide = right
				block "fontsize_role" {
					using = fontsize_mega
				}
			}
		}
		widget = { #This Icon displays the achievements of the Scientist
			#The Correct Localizations are chosen in the GUI_customizable_localization.txt and
			#used in the mr_GUI_l_english.yml file to display the correct Achievements.
			size = { 40 40 }
			parentanchor = bottom|left
			position = { 19 -107 }
			block "achievements_icon_visibility" {
				visible = yes
			}
									
			icon = {
				size = { 100% 100% }
				texture = "gfx/interface/backgrounds/round_button_bg.dds"
				block "enabled" {}
			}
			icon = {
				size = { 100% 100% }
				texture = "gfx/interface/icons/GUI_icons/GUI_scientist_achievements_button.dds"
				block "enabled" {}
				block "scientist_achievement_tooltip" {}
			}
		}
		green_progressbar_horizontal = {
			parentanchor = bottom|left
			position = { 22 -60 }
			size = { 250 35 }
			block "experience_bar_visibility" {
				visible = yes
			}
			blockoverride "values" {
				block "values"
				{
					min = 0
					max = 300
					value = "[FixedPointToFloat(GetPlayer.MakeScope.Var('dubois_academy_progress').GetValue)]"
				}
				block "experience_tooltip" {}
			}
			textbox = {
				block "experience_bar_text" {
					text = "MR_EXPERIENCE"
				}
				position = { 0 -4 }
				parentanchor = center
				autoresize = yes
				using = fontsize_xl
			}
		}
		widget = { #Displays the Traits of the character
			size = { 40 40 }
			parentanchor = bottom|left
			position = { 15 -10 }
					
			overlappingitembox = {
				minimumsize = { 256 42 }
				maximumsize = { 256 42 }

				block "character_traits"
				{
					datamodel = "[AccessPlayer.AccessRuler.AccessTraits]"
				}

				item = {
					icon = {
						size = { 30 42 }
						texture = "[CharacterTrait.GetTexture]"
						using = tooltip_above

						tooltipwidget = {
							FancyTooltip_CharacterTrait = {}
						}
					}
				}
			}
		}

		#Left Box
		widget = {
			size = { 350 360 }
			parentanchor = top
			position = { 320 15 }
			background = {
				using = entry_bg_unit_dark
			}
			block "small_box_content"
			{

			}
		}
		button = {
			parentanchor = bottom
			position = { 320 -15 }
			using = default_button_primary_big_action
			size = { 350 50 }
			block "visit_button"
			{
				raw_text = "Visit Museum"
			}
			using = fontsize_large
		}

		#Center Box
		widget = {
			size = { 350 420 }
			parentanchor = right
			position = { -770 15 }
			background = {
				using = entry_bg_unit_dark
			}
			block "big_box_content"
			{
				
			}
		}

		#Right Box
		widget = {
			size = { 735 420 }
			parentanchor = right
			position = { -15 15 }
			background = {
				using = entry_bg_unit_dark
			}
			block "right_box_content"
			{
				
			}
		}
	}

	type artist_placeholder = widget {
	#	size = { 1813 450 }
		size = { 1813 80 }
	}
}
